import "core-js/modules/es.promise.js";
import { getPreviewBodyTemplate, getPreviewHeadTemplate, getManagerMainTemplate, getPreviewMainTemplate, loadCustomBabelConfig, babelConfig, loadEnvs } from '@storybook/core-common';
export var babel = async function (_, options) {
  var configDir = options.configDir,
      presets = options.presets;
  return loadCustomBabelConfig(configDir, function () {
    return presets.apply('babelDefault', babelConfig(), options);
  });
};
export var logLevel = function (previous, options) {
  return previous || options.loglevel || 'info';
};
export var previewHeadTemplate = async function (base, {
  configDir: configDir,
  presets: presets
}) {
  var interpolations = await presets.apply('env');
  return getPreviewHeadTemplate(configDir, interpolations);
};
export var env = async function () {
  return loadEnvs({
    production: true
  }).raw;
};
export var previewBodyTemplate = async function (base, {
  configDir: configDir,
  presets: presets
}) {
  var interpolations = await presets.apply('env');
  return getPreviewBodyTemplate(configDir, interpolations);
};
export var previewMainTemplate = function () {
  return getPreviewMainTemplate();
};
export var managerMainTemplate = function () {
  return getManagerMainTemplate();
};
export var previewEntries = function () {
  return [require.resolve('../globals/polyfills'), require.resolve('../globals/globals')];
};
export var typescript = function () {
  return {
    check: false,
    // 'react-docgen' faster but produces lower quality typescript results
    reactDocgen: 'react-docgen-typescript',
    reactDocgenTypescriptOptions: {
      shouldExtractLiteralValuesFromEnum: true,
      shouldRemoveUndefinedFromOptional: true,
      propFilter: function (prop) {
        return prop.parent ? !/node_modules/.test(prop.parent.fileName) : true;
      },
      // NOTE: this default cannot be changed
      savePropValueAsString: true
    }
  };
};