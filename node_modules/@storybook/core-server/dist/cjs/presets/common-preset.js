"use strict";

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typescript = exports.previewEntries = exports.managerMainTemplate = exports.previewMainTemplate = exports.previewBodyTemplate = exports.env = exports.previewHeadTemplate = exports.logLevel = exports.babel = void 0;

var _coreCommon = require("@storybook/core-common");

var babel = async function (_, options) {
  var configDir = options.configDir,
      presets = options.presets;
  return (0, _coreCommon.loadCustomBabelConfig)(configDir, function () {
    return presets.apply('babelDefault', (0, _coreCommon.babelConfig)(), options);
  });
};

exports.babel = babel;

var logLevel = function (previous, options) {
  return previous || options.loglevel || 'info';
};

exports.logLevel = logLevel;

var previewHeadTemplate = async function (base, {
  configDir: configDir,
  presets: presets
}) {
  var interpolations = await presets.apply('env');
  return (0, _coreCommon.getPreviewHeadTemplate)(configDir, interpolations);
};

exports.previewHeadTemplate = previewHeadTemplate;

var env = async function () {
  return (0, _coreCommon.loadEnvs)({
    production: true
  }).raw;
};

exports.env = env;

var previewBodyTemplate = async function (base, {
  configDir: configDir,
  presets: presets
}) {
  var interpolations = await presets.apply('env');
  return (0, _coreCommon.getPreviewBodyTemplate)(configDir, interpolations);
};

exports.previewBodyTemplate = previewBodyTemplate;

var previewMainTemplate = function () {
  return (0, _coreCommon.getPreviewMainTemplate)();
};

exports.previewMainTemplate = previewMainTemplate;

var managerMainTemplate = function () {
  return (0, _coreCommon.getManagerMainTemplate)();
};

exports.managerMainTemplate = managerMainTemplate;

var previewEntries = function () {
  return [require.resolve('../globals/polyfills'), require.resolve('../globals/globals')];
};

exports.previewEntries = previewEntries;

var typescript = function () {
  return {
    check: false,
    // 'react-docgen' faster but produces lower quality typescript results
    reactDocgen: 'react-docgen-typescript',
    reactDocgenTypescriptOptions: {
      shouldExtractLiteralValuesFromEnum: true,
      shouldRemoveUndefinedFromOptional: true,
      propFilter: function (prop) {
        return prop.parent ? !/node_modules/.test(prop.parent.fileName) : true;
      },
      // NOTE: this default cannot be changed
      savePropValueAsString: true
    }
  };
};

exports.typescript = typescript;