/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import '@material/mwc-ripple/mwc-ripple';
import { FormElement } from '@material/mwc-base/form-element';
import { Ripple } from '@material/mwc-ripple/mwc-ripple';
import { RippleHandlers } from '@material/mwc-ripple/ripple-handlers';
import { MDCSwitchAdapter, MDCSwitchState } from '@material/switch/adapter';
import { MDCSwitchFoundation } from '@material/switch/foundation';
import { TemplateResult } from 'lit';
import { ClassInfo } from 'lit/directives/class-map.js';
export declare class SwitchBase extends FormElement implements MDCSwitchState {
    processing: boolean;
    selected: boolean;
    /** @soyPrefixAttribute */
    ariaLabel: string;
    /** @soyPrefixAttribute */
    ariaLabelledBy: string;
    readonly ripple: Promise<Ripple | null>;
    protected shouldRenderRipple: boolean;
    protected rippleHandlers: RippleHandlers;
    name: string;
    value: string;
    protected readonly formElement: HTMLElement;
    protected setFormData(formData: FormData): void;
    protected readonly mdcRoot: HTMLElement;
    protected readonly mdcFoundationClass: typeof MDCSwitchFoundation;
    protected mdcFoundation?: MDCSwitchFoundation;
    click(): void;
    /** @soyTemplate */
    protected render(): TemplateResult;
    /** @soyTemplate */
    protected getRenderClasses(): ClassInfo;
    /** @soyTemplate */
    protected renderHandle(): TemplateResult;
    /** @soyTemplate */
    protected renderShadow(): TemplateResult;
    /** @soyTemplate */
    protected renderRipple(): TemplateResult;
    /** @soyTemplate */
    protected renderOnIcon(): TemplateResult;
    /** @soyTemplate */
    protected renderOffIcon(): TemplateResult;
    protected handleClick(): void;
    protected handleFocus(): void;
    protected handleBlur(): void;
    protected handlePointerDown(event: PointerEvent): void;
    protected handlePointerUp(): void;
    protected handlePointerEnter(): void;
    protected handlePointerLeave(): void;
    protected createAdapter(): MDCSwitchAdapter;
}
