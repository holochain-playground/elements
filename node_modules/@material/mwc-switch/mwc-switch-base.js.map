{"version":3,"file":"mwc-switch-base.js","sourceRoot":"","sources":["mwc-switch-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@material/mwc-ripple/mwc-ripple';\n\nimport {ariaProperty} from '@material/mwc-base/aria-property';\nimport {FormElement} from '@material/mwc-base/form-element';\nimport {Ripple} from '@material/mwc-ripple/mwc-ripple';\nimport {RippleHandlers} from '@material/mwc-ripple/ripple-handlers';\nimport {MDCSwitchAdapter, MDCSwitchState} from '@material/switch/adapter';\nimport {MDCSwitchFoundation} from '@material/switch/foundation';\nimport {html, TemplateResult} from 'lit';\nimport {eventOptions, property, query, queryAsync, state} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\nexport class SwitchBase extends FormElement implements MDCSwitchState {\n  // MDCSwitchState\n  @property({type: Boolean}) processing = false;\n  @property({type: Boolean}) selected = false;\n\n  // Aria\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({type: String, attribute: 'aria-label'})\n  ariaLabel = '';\n\n  /** @soyPrefixAttribute */\n  @ariaProperty\n  @property({type: String, attribute: 'aria-labelledby'})\n  ariaLabelledBy = '';\n\n  // Ripple\n  @queryAsync('mwc-ripple') override readonly ripple!: Promise<Ripple|null>;\n\n  @state() protected shouldRenderRipple = false;\n\n  protected rippleHandlers = new RippleHandlers(() => {\n    this.shouldRenderRipple = true;\n    return this.ripple;\n  });\n\n  // FormElement\n  @property({type: String, reflect: true}) name = '';\n  @property({type: String}) value = 'on';\n\n  @query('input') protected readonly formElement!: HTMLElement;\n\n  protected setFormData(formData: FormData) {\n    if (this.name && this.selected) {\n      formData.append(this.name, this.value);\n    }\n  }\n\n  // BaseElement\n  @query('.mdc-switch') protected readonly mdcRoot!: HTMLElement;\n  protected readonly mdcFoundationClass = MDCSwitchFoundation;\n  protected mdcFoundation?: MDCSwitchFoundation;\n\n  override click() {\n    // Switch uses a hidden input as its form element, but a different <button>\n    // for interaction. It overrides click() from FormElement to avoid clicking\n    // the hidden input.\n    if (this.disabled) {\n      return;\n    }\n\n    this.mdcRoot?.focus();\n    this.mdcRoot?.click();\n  }\n\n  /** @soyTemplate */\n  protected override render(): TemplateResult {\n    return html`\n      <button\n        type=\"button\"\n        class=\"mdc-switch ${classMap(this.getRenderClasses())}\"\n        role=\"switch\"\n        aria-checked=\"${this.selected}\"\n        aria-label=\"${ifDefined(this.ariaLabel || undefined)}\"\n        aria-labelledby=\"${ifDefined(this.ariaLabelledBy || undefined)}\"\n        .disabled=${this.disabled}\n        @click=${this.handleClick}\n        @focus=\"${this.handleFocus}\"\n        @blur=\"${this.handleBlur}\"\n        @pointerdown=\"${this.handlePointerDown}\"\n        @pointerup=\"${this.handlePointerUp}\"\n        @pointerenter=\"${this.handlePointerEnter}\"\n        @pointerleave=\"${this.handlePointerLeave}\"\n      >\n        <div class=\"mdc-switch__track\"></div>\n        <div class=\"mdc-switch__handle-track\">\n          ${this.renderHandle()}\n        </div>\n      </button>\n\n      <input\n        type=\"checkbox\"\n        aria-hidden=\"true\"\n        name=\"${this.name}\"\n        .checked=${this.selected}\n        .value=${this.value}\n      >\n    `;\n  }\n\n  /** @soyTemplate */\n  protected getRenderClasses(): ClassInfo {\n    return {\n      'mdc-switch--processing': this.processing,\n      'mdc-switch--selected': this.selected,\n      'mdc-switch--unselected': !this.selected,\n    };\n  }\n\n  /** @soyTemplate */\n  protected renderHandle(): TemplateResult {\n    return html`\n      <div class=\"mdc-switch__handle\">\n        ${this.renderShadow()}\n        ${this.renderRipple()}\n        <div class=\"mdc-switch__icons\">\n          ${this.renderOnIcon()}\n          ${this.renderOffIcon()}\n        </div>\n      </div>\n    `;\n  }\n\n  /** @soyTemplate */\n  protected renderShadow(): TemplateResult {\n    return html`\n      <div class=\"mdc-switch__shadow\">\n        <div class=\"mdc-elevation-overlay\"></div>\n      </div>\n    `;\n  }\n\n  /** @soyTemplate */\n  protected renderRipple(): TemplateResult {\n    if (this.shouldRenderRipple) {\n      return html`\n        <div class=\"mdc-switch__ripple\">\n          <mwc-ripple\n            internalUseStateLayerCustomProperties\n            .disabled=\"${this.disabled}\"\n            unbounded>\n          </mwc-ripple>\n        </div>\n      `;\n    } else {\n      return html``;\n    }\n  }\n\n  /** @soyTemplate */\n  protected renderOnIcon(): TemplateResult {\n    return html`\n      <svg class=\"mdc-switch__icon mdc-switch__icon--on\" viewBox=\"0 0 24 24\">\n        <path d=\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\" />\n      </svg>\n    `;\n  }\n\n  /** @soyTemplate */\n  protected renderOffIcon(): TemplateResult {\n    return html`\n      <svg class=\"mdc-switch__icon mdc-switch__icon--off\" viewBox=\"0 0 24 24\">\n        <path d=\"M20 13H4v-2h16v2z\" />\n      </svg>\n    `;\n  }\n\n  protected handleClick() {\n    this.mdcFoundation?.handleClick();\n  }\n\n  protected handleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n\n  protected handleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n\n  @eventOptions({passive: true})\n  protected handlePointerDown(event: PointerEvent) {\n    (event.target as HTMLElement).setPointerCapture(event.pointerId);\n    this.rippleHandlers.startPress(event);\n  }\n\n  protected handlePointerUp() {\n    this.rippleHandlers.endPress();\n  }\n\n  protected handlePointerEnter() {\n    this.rippleHandlers.startHover();\n  }\n\n  protected handlePointerLeave() {\n    this.rippleHandlers.endHover();\n  }\n\n  protected createAdapter(): MDCSwitchAdapter {\n    return {state: this};\n  }\n}\n"]}