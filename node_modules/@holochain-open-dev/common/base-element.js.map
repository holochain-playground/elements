{"version":3,"file":"base-element.js","sourceRoot":"","sources":["../src/base-element.ts"],"names":[],"mappings":"AAAA,OAAO,EAAe,UAAU,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAG/D,MAAM,OAAO,WAAY,SAAQ,mBAAmB,CAAC,UAAU,CAAC;IAC9D,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,KAAK,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE;YAChE,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SACnC;IACH,CAAC;IAED,iBAAiB;QACf,OAAO,EAAE,CAAC;IACZ,CAAC;CACF","sourcesContent":["import { Constructor, LitElement } from 'lit-element';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { Dictionary } from '@holochain-open-dev/core-types';\n\nexport class BaseElement extends ScopedElementsMixin(LitElement) {\n  connectedCallback() {\n    super.connectedCallback();\n    for (const [tag, el] of Object.entries(this.getScopedElements())) {\n      this.defineScopedElement(tag, el);\n    }\n  }\n\n  getScopedElements(): Dictionary<typeof HTMLElement> {\n    return {};\n  }\n}\n"]}