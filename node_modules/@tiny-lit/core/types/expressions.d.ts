import { Expression, TemplateInterface, TemplateArray } from './types';
export declare class AttributeExpression implements Expression {
    element: Element;
    name: string;
    namespaceURI: string | null;
    value?: any;
    constructor(element: Element, name: string, namespaceURI: string | null);
    update(newValue: any): void;
    requestUpdate: (...args: any[]) => void;
}
export declare class NodeExpression implements Expression {
    element: Node | TemplateInterface;
    placeholder: Node;
    value?: Node | TemplateInterface | TemplateArray;
    constructor(element: Node);
    updateArray(items: TemplateInterface[]): Map<any, any>;
    replaceWith(newValue: Node | TemplateInterface | TemplateArray): void;
    updateText(value: any): void;
    updateTemplate(values: any[]): void;
    update(newValue: any): void;
    requestUpdate: (...args: any[]) => void;
}
