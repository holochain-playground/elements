{"version":3,"file":"lit-context.umd.development.js","sources":["../src/types/context.ts","../src/lib/context.ts","../src/lib/context-provider.ts","../src/lib/context-consumer.ts","../src/decorators/consume.ts","../src/lib/context-creator.ts"],"sourcesContent":["/**\n * Copyright (c) 2020 Dorian Cortes, Gary Valverde\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\ninterface IContext {\n    getValue(): object\n    setValue(newValue: object): void\n}\n\nexport type MapFn<T = object> = (providerNewValue?: T, providerOldValue?: T) => void;\n\nexport class Context implements IContext {\n    value: object;\n    subscriptions: Set<Function>;\n\n    constructor(initialValue: object) {\n        this.value = initialValue;\n        this.subscriptions = new Set<Function>()\n    }\n\n    getValue() {\n        return this.value;\n    }\n\n    setValue(newValue: object) {\n        const oldValue = this.value;\n        this.value = newValue;\n        this.subscriptions?.forEach(subscription => subscription(newValue, oldValue));\n    }\n}","/**\n * Copyright (c) 2020 Dorian Cortes, Gary Valverde\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { Context } from \"../types/context\";\n\n/**\n * \n * @param initialValue \n * @return { Context }\n */\nexport function createContext(initialValue: object): Context {\n  const context = new Context(initialValue);\n  return context;\n}\n\nexport function consumeContext(context: Context, callback: Function) {\n  /**\n   * Get the subscriptions to a context\n   */\n  const { subscriptions } = context;\n  /**\n   * Add the new subscription\n   */\n  subscriptions?.add(callback);\n  /**\n   * \n   */\n  callback(context?.getValue());\n\n  return () => {\n    subscriptions?.delete(callback);\n  }\n}\n\n","/**\n * Copyright (c) 2020 Dorian Cortes, Gary Valverde\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { LitElement, html, property } from 'lit-element';\nimport { createContext } from './context';\nimport { Context } from '../types/context';\n\n/**\n * Context Provider\n * @class\n */\nexport class ContextProvider extends LitElement {\n  @property({ type: Context })\n  context: Context;\n\n  @property({ type: Object })\n  value: object = {};\n\n  constructor() {\n    super();\n    this.context = createContext(this.value);\n  }\n\n  render() {\n    this.context.setValue(this.value);\n    return html`\n      <slot></slot>\n    `;\n  }\n}\n","/**\n * Copyright (c) 2020 Dorian Cortes, Gary Valverde\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { consumeContext } from \"./context\";\nimport { ContextProvider } from \"./context-provider\";\nimport { MapFn } from \"../types/context\";\n\n/**\n * Context Consumer\n * @param providerTag\n * @param consumer \n * @param mapFn \n */\nexport const contextConsumer = <T = object>(providerTag: string, consumer: Element, mapFn?: MapFn<T>) => {\n  let provider: ContextProvider | null = null;\n  let node: Element | null = consumer;\n\n  do {\n    let slot: Boolean = node.assignedSlot instanceof HTMLSlotElement;\n    /**\n     * Find the node's closest provider tag\n     */\n    provider = node?.closest(providerTag);\n\n    /**\n     * If within a slot \n     */\n    let parentIsSlotted;\n    if (slot && provider === null) {\n      provider = node?.assignedSlot?.closest(providerTag) || null;\n      /**\n       * If provider remains null\n       */\n      if (provider === null) {\n        /**\n         * Then check if the parent node of the slotted element is slotted as well\n         */\n        parentIsSlotted = node?.parentElement?.assignedSlot instanceof HTMLSlotElement;\n      }\n    }\n\n    /**\n     * Find the root node\n     */\n    let root: Element | ShadowRoot | null = node?.getRootNode() as ShadowRoot;\n\n    /**\n     * If within a slot\n     */\n    if (slot && root === null) {\n      root = node?.assignedSlot?.getRootNode() as ShadowRoot || null;\n    } \n    /**\n     * Set the node to the root host\n     */\n    node = parentIsSlotted ? node?.parentElement : root?.host;\n  } while (!provider && node);\n\n  /**\n   * If there's a valid provider\n   */\n  if (provider) {\n    /**\n     * Register the context to be consumed\n     */\n    const unsubscribe = consumeContext(provider.context, (providerNewValue: T, providerOldValue: T) => {\n      if (!consumer.isConnected) {\n        unsubscribe();\n      } else if (mapFn instanceof Function) {\n        mapFn.call(consumer, providerNewValue, providerOldValue);\n      } else {\n        Object.assign(consumer, providerNewValue);\n      }\n    });\n  }\n};","/**\n * Copyright (c) 2020 Dorian Cortes, Gary Valverde\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { contextConsumer } from \"../lib/context-consumer\";\nimport { MapFn } from \"../types/context\";\n\n/**\n * @param providerTag Provider tag name\n * @param mapFn  Function to map provider value\n */\nexport type Constructor<T> = {\n    // tslint:disable-next-line:no-any\n    new(...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n    kind: 'class';\n    elements: ClassElement[];\n    finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n    kind: 'field' | 'method';\n    key: PropertyKey;\n    placement: 'static' | 'prototype' | 'own';\n    initializer?: Function;\n    extras?: ClassElement[];\n    finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n    descriptor?: PropertyDescriptor;\n}\n\nexport const consume = <T = object>(providerTag: string, mapFn?: MapFn<T>) =>\n    (classOrDescriptor: Constructor<HTMLElement> | ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n            legacyCustomElement<T>(classOrDescriptor, providerTag, mapFn) :\n            standardCustomElement<T>(classOrDescriptor, providerTag, mapFn);\n\nconst legacyCustomElement =\n    <T = object>(classConstructor: Constructor<HTMLElement>, providerTag: string, mapFn?: MapFn<T>) => {\n        const consumer = (consumer: HTMLElement, mapFn?: MapFn<T>) => contextConsumer(providerTag, consumer, mapFn);\n        return class extends classConstructor {\n            connectedCallback() {\n                super.connectedCallback();\n                consumer(this, mapFn);\n            }\n        } as any\n    };\n\nconst standardCustomElement =\n    <T = object>(classConstructor: ClassDescriptor, providerTag: string, mapFn?: MapFn<T>) => {\n        const { kind, elements } = classConstructor;\n        const consumer = (consumer: HTMLElement, mapFn?: MapFn<T>) => contextConsumer(providerTag, consumer, mapFn);\n        return {\n            kind,\n            elements,\n            finisher(clazz: Constructor<HTMLElement>) {\n                clazz.prototype.__litContextConnectedCallback = clazz.prototype.connectedCallback;\n                clazz.prototype.connectedCallback = function connectedCallbackHandler() {\n                  this.__litContextConnectedCallback();\n                  consumer(this, mapFn);\n                };\n            }\n        };\n    };","/**\n * Copyright (c) 2020 Dorian Cortes, Gary Valverde\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { ContextProvider } from \"./context-provider\";\nimport { contextConsumer } from \"./context-consumer\";\nimport { consume } from '../decorators/consume';\nimport { MapFn } from \"../types/context\";\n\n/**\n * @param providerTagName Provider name (Note: It will be used to generate its custom element tag name)\n * @returns Context information and consume functionalities\n */\nexport const createContext = (providerName: string, defaultValue: object = {}) => {\n  const tagName = providerName + '-provider';\n\n  if (!customElements.get(tagName)) {\n    customElements.define(tagName, class extends ContextProvider {\n      value: object = defaultValue;\n    });\n  }\n\n  return {\n    getTagName: (): string => tagName,\n    consumer: (consumer: HTMLElement, mapFn?: MapFn) => contextConsumer(tagName, consumer, mapFn),\n    consume: (mapFn?: MapFn) => consume(tagName, mapFn) as any\n  }\n}"],"names":["Context","constructor","initialValue","value","subscriptions","Set","getValue","setValue","newValue","oldValue","forEach","subscription","createContext","context","consumeContext","callback","add","delete","ContextProvider","LitElement","render","html","__decorate","property","type","Object","contextConsumer","providerTag","consumer","mapFn","provider","node","slot","assignedSlot","HTMLSlotElement","closest","parentIsSlotted","parentElement","root","getRootNode","host","unsubscribe","providerNewValue","providerOldValue","isConnected","Function","call","assign","consume","classOrDescriptor","legacyCustomElement","standardCustomElement","classConstructor","connectedCallback","kind","elements","finisher","clazz","prototype","__litContextConnectedCallback","connectedCallbackHandler","providerName","defaultValue","tagName","customElements","get","define","getTagName"],"mappings":"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"}