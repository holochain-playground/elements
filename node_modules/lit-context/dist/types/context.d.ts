/**
 * Copyright (c) 2020 Dorian Cortes, Gary Valverde
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
interface IContext {
    getValue(): object;
    setValue(newValue: object): void;
}
export declare type MapFn<T = object> = (providerNewValue?: T, providerOldValue?: T) => void;
export declare class Context implements IContext {
    value: object;
    subscriptions: Set<Function>;
    constructor(initialValue: object);
    getValue(): object;
    setValue(newValue: object): void;
}
export {};
