{"version":3,"sources":["webpack://MessagePack/webpack/universalModuleDefinition","webpack://MessagePack/webpack/bootstrap","webpack://MessagePack/webpack/runtime/define property getters","webpack://MessagePack/webpack/runtime/hasOwnProperty shorthand","webpack://MessagePack/webpack/runtime/make namespace object","webpack://MessagePack/./node_modules/tslib/tslib.es6.js","webpack://MessagePack/./src/utils/utf8.ts","webpack://MessagePack/./src/ExtData.ts","webpack://MessagePack/./src/utils/int.ts","webpack://MessagePack/./src/timestamp.ts","webpack://MessagePack/./src/ExtensionCodec.ts","webpack://MessagePack/./src/utils/typedArrays.ts","webpack://MessagePack/./src/Encoder.ts","webpack://MessagePack/./src/encode.ts","webpack://MessagePack/./src/utils/prettyByte.ts","webpack://MessagePack/./src/CachedKeyDecoder.ts","webpack://MessagePack/./src/Decoder.ts","webpack://MessagePack/./src/decode.ts","webpack://MessagePack/./src/utils/stream.ts","webpack://MessagePack/./src/decodeAsync.ts"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","iterator","n","v","op","TypeError","pop","length","push","__values","s","m","i","__read","r","ar","error","__spreadArray","to","from","il","j","__await","__asyncGenerator","asyncIterator","q","a","resume","fulfill","settle","shift","__asyncValues","create","TEXT_ENCODING_AVAILABLE","TextEncoder","TextDecoder","STR_SIZE_MAX","utf8Count","str","strLength","byteLength","pos","charCodeAt","extra","sharedTextEncoder","undefined","TEXT_ENCODER_THRESHOLD","process","utf8EncodeTE","encodeInto","output","outputOffset","subarray","set","encode","utf8DecodeJs","bytes","inputOffset","offset","end","units","byte1","byte2","byte3","unit","String","fromCharCode","sharedTextDecoder","TEXT_DECODER_THRESHOLD","type","data","setInt64","view","high","Math","floor","low","setUint32","getInt64","getInt32","getUint32","EXT_TIMESTAMP","encodeTimeSpecToTimestamp","sec","nsec","rv","Uint8Array","DataView","buffer","secHigh","secLow","encodeDateToTimeSpec","date","msec","getTime","nsecInSec","encodeTimestampExtension","object","Date","decodeTimestampToTimeSpec","byteOffset","nsec30AndSecHigh2","Error","decodeTimestampExtension","timeSpec","timestampExtension","decode","builtInEncoders","builtInDecoders","encoders","decoders","register","index","tryToEncode","context","encodeExt","ExtData","decodeExt","defaultCodec","ExtensionCodec","ensureUint8Array","ArrayBuffer","isView","extensionCodec","maxDepth","initialBufferSize","sortKeys","forceFloat32","ignoreUndefined","forceIntegerToFloat","getUint8Array","reinitializeState","doEncode","depth","encodeNil","encodeBoolean","encodeNumber","encodeString","encodeObject","ensureBufferSizeToWrite","sizeToWrite","requiredSize","resizeBuffer","newSize","newBuffer","newBytes","newView","writeU8","Number","isSafeInteger","writeU16","writeU32","writeU64","writeI8","writeI16","writeI32","writeI64","writeF32","writeF64","writeStringHeader","utf8EncodeJs","ext","encodeExtension","isArray","encodeArray","encodeBinary","toString","encodeMap","size","writeU8a","item","countWithoutUndefined","keys","count","sort","setUint8","values","setInt8","setUint16","setInt16","setInt32","setFloat32","setFloat64","setUint64","defaultEncodeOptions","options","Encoder","prettyByte","byte","abs","padStart","maxKeyLength","maxLengthPerKey","hit","miss","caches","canBeCached","records","FIND_CHUNK","record","recordBytes","store","random","cachedValue","slicedCopyOfBytes","slice","EMPTY_VIEW","EMPTY_BYTES","DataViewIndexOutOfBoundsError","getInt8","constructor","MORE_DATA","DEFAULT_MAX_LENGTH","sharedCachedKeyDecoder","CachedKeyDecoder","message","proto","DecodeError","configurable","name","__","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","keyDecoder","totalPos","headByte","stack","setBuffer","bufferView","createDataView","appendBuffer","hasRemaining","remainingData","newData","concated","createExtraByteError","posToShow","RangeError","doDecodeSync","decodeMulti","decodeAsync","stream","decoded","decodeArrayStream","decodeMultiAsync","decodeStream","isArrayHeaderRequired","arrayItemsLeft","readArraySize","complete","DECODE","readHeadByte","pushMapState","pushArrayState","decodeUtf8String","readF32","readF64","readU8","readU16","readU32","readU64","readI8","readI16","readI32","readI64","lookU8","lookU16","lookU32","decodeBinary","decodeExtension","state","array","position","keyType","map","readCount","headerOffset","stateIsMapKey","stringBytes","utf8DecodeTD","headOffset","extType","getUint8","getUint16","getInt16","getFloat32","getFloat64","defaultDecodeOptions","Decoder","assertNonNull","ensureAsyncIterable","streamLike","reader","getReader","read","releaseLock","asyncIterableFromStream","decodeMultiStream"],"mappings":"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","file":"msgpack.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MessagePack\"] = factory();\n\telse\n\t\troot[\"MessagePack\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","const TEXT_ENCODING_AVAILABLE =\n  (typeof process === \"undefined\" || process.env[\"TEXT_ENCODING\"] !== \"never\") &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nconst STR_SIZE_MAX = 0xffff_ffff; // uint32_max\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? STR_SIZE_MAX\n  : typeof process !== \"undefined\" && process.env[\"TEXT_ENCODING\"] !== \"force\"\n  ? 200\n  : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++]!;\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      const byte4 = bytes[offset++]! & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? STR_SIZE_MAX\n  : typeof process !== \"undefined\" && process.env[\"TEXT_DECODER\"] !== \"force\"\n  ? 200\n  : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder!.decode(stringBytes);\n}\n","/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  constructor(readonly type: number, readonly data: Uint8Array) {}\n}\n","// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number) {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number) {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { getInt64, setInt64 } from \"./utils/int\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4);\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new Error(`Unrecognized data size for timestamp: ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n","// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData\";\nimport { timestampExtension } from \"./timestamp\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\n\n// immutable interfce to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = 1 + type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encodeExt = this.builtInEncoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encodeExt = this.encoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decodeExt) {\n      return decodeExt(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n","export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer) {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n","import { utf8EncodeJs, utf8Count, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { setInt64, setUint64 } from \"./utils/int\";\nimport { ensureUint8Array } from \"./utils/typedArrays\";\nimport { ExtData } from \"./ExtData\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport class Encoder<ContextType> {\n  private pos = 0;\n  private view = new DataView(new ArrayBuffer(this.initialBufferSize));\n  private bytes = new Uint8Array(this.view.buffer);\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxDepth = DEFAULT_MAX_DEPTH,\n    private readonly initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE,\n    private readonly sortKeys = false,\n    private readonly forceFloat32 = false,\n    private readonly ignoreUndefined = false,\n    private readonly forceIntegerToFloat = false,\n  ) {}\n\n  private getUint8Array(): Uint8Array {\n    return this.bytes.subarray(0, this.pos);\n  }\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  public encode(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.getUint8Array();\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      this.encodeNumber(object);\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n  private encodeNumber(object: number) {\n    if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // nagative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        }\n      }\n    } else {\n      // non-integer numbers\n      if (this.forceFloat32) {\n        // float 32\n        this.writeU8(0xca);\n        this.writeF32(object);\n      } else {\n        // float 64\n        this.writeU8(0xcb);\n        this.writeF64(object);\n      }\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n    const strLength = object.length;\n\n    if (strLength > TEXT_ENCODER_THRESHOLD) {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeTE(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    } else {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeJs(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    }\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n}\n","import { ExtensionCodecType } from \"./ExtensionCodec\";\nimport { Encoder } from \"./Encoder\";\nimport { ContextOf, SplitUndefined } from \"./context\";\n\nexport type EncodeOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n    maxDepth: number;\n    initialBufferSize: number;\n    sortKeys: boolean;\n\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * The default is `false`. Note that it needs more time to encode.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point,\n     * with the `forceFloat32` option taken into account.\n     *\n     * The default is `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst defaultEncodeOptions: EncodeOptions = {};\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType = undefined>(\n  value: unknown,\n  options: EncodeOptions<SplitUndefined<ContextType>> = defaultEncodeOptions as any,\n): Uint8Array {\n  const encoder = new Encoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxDepth,\n    options.initialBufferSize,\n    options.sortKeys,\n    options.forceFloat32,\n    options.ignoreUndefined,\n    options.forceIntegerToFloat,\n  );\n  return encoder.encode(value);\n}\n","export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n","import { utf8DecodeJs } from \"./utils/utf8\";\n\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly value: string;\n}\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n\n  constructor(readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH, readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    // avoid `new Array(N)` to create a non-sparse array for performance.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number) {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private get(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1]!;\n\n    FIND_CHUNK: for (const record of records) {\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.value;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1]!;\n    const record: KeyCacheRecord = { bytes, value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to a randomized position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.get(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const value = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, value);\n    return value;\n  }\n}\n","import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64 } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst DEFAULT_MAX_LENGTH = 0xffff_ffff; // uint32_max\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class DecodeError extends Error {\n  constructor(message: string) {\n    super(message);\n\n    // fix the prototype chain in a cross-platform way\n    const proto = Object.create(DecodeError.prototype);\n    Object.setPrototypeOf(this, proto);\n\n    Object.defineProperty(this, \"name\", {\n      configurable: true,\n      enumerable: false,\n      value: DecodeError.name,\n    });\n  }\n}\n\nexport class Decoder<ContextType> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = DEFAULT_MAX_LENGTH,\n    private readonly maxBinLength = DEFAULT_MAX_LENGTH,\n    private readonly maxArrayLength = DEFAULT_MAX_LENGTH,\n    private readonly maxMapLength = DEFAULT_MAX_LENGTH,\n    private readonly maxExtLength = DEFAULT_MAX_LENGTH,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | BufferSource): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number> | BufferSource) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining()) {\n      this.setBuffer(buffer);\n    } else {\n      // retried because data is insufficient\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n      const concated = new Uint8Array(remainingData.length + newData.length);\n      concated.set(remainingData);\n      concated.set(newData, remainingData.length);\n      this.setBuffer(concated);\n    }\n  }\n\n  private hasRemaining(size = 1) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createExtraByteError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  public decode(buffer: ArrayLike<number> | BufferSource): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    const object = this.doDecodeSync();\n    if (this.hasRemaining()) {\n      throw this.createExtraByteError(this.pos);\n    }\n    return object;\n  }\n\n  public *decodeMulti(buffer: ArrayLike<number> | BufferSource): Generator<unknown, void, unknown> {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    while (this.hasRemaining()) {\n      yield this.doDecodeSync();\n    }\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining()) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(stream: AsyncIterable<ArrayLike<number> | BufferSource>) {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | BufferSource>) {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1]!;\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n          }\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\n      );\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1]!;\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n","import { ExtensionCodecType } from \"./ExtensionCodec\";\nimport { Decoder } from \"./Decoder\";\nimport { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeMulti(buffer);\n}\n","// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\n  if (value == null) {\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      assertNonNull(value);\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterable<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n","import { Decoder } from \"./Decoder\";\nimport { ensureAsyncIterable } from \"./utils/stream\";\nimport { defaultDecodeOptions } from \"./decode\";\nimport type { ReadableStreamLike } from \"./utils/stream\";\nimport type { DecodeOptions } from \"./decode\";\nimport type { SplitUndefined } from \"./context\";\n\nexport async function decodeAsync<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Promise<unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeAsync(stream);\n}\n\nexport function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeArrayStream(stream);\n}\n\nexport function decodeMultiStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeStream(stream);\n}\n\n/**\n * @deprecated Use {@link decodeMultiStream()} instead.\n */\nexport function decodeStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  return decodeMultiStream(streamLike, options);\n}\n"],"sourceRoot":""}