/**
 * Wraps the template inside a scopedElements component
 *
 * @param {import('./litFixture').LitHTMLRenderable} template
 * @param {ScopedElementsMap} scopedElements
 * @return {TemplateResult}
 */
export function getScopedElementsTemplate(template: import('./litFixture').LitHTMLRenderable, scopedElements: ScopedElementsMap): TemplateResult;
export type ScopedElementsMap = {
    [key: string]: {
        new (): HTMLElement;
        prototype: HTMLElement;
    };
};
export type TemplateResult = {
    _$litType$: 1 | 2;
    strings: TemplateStringsArray;
    values: unknown[];
};
export type ScopedElementsTemplateGetter = typeof getScopedElementsTemplate;
//# sourceMappingURL=scopedElementsWrapper.d.ts.map