{"version":3,"sources":["node_modules/@tiny-lit/element/dist/esm/withProps.js","node_modules/@tiny-lit/core/dist/esm/utils.js","node_modules/@tiny-lit/core/dist/esm/scheduler.js","node_modules/@tiny-lit/core/dist/esm/expressions.js","node_modules/@tiny-lit/core/dist/esm/linker.js","node_modules/@tiny-lit/core/dist/esm/parser.js","node_modules/@tiny-lit/core/dist/esm/template.js","node_modules/@tiny-lit/core/dist/esm/index.js","node_modules/@tiny-lit/element/dist/esm/withElement.js","node_modules/@tiny-lit/element/dist/esm/Element.js","node_modules/@tiny-lit/element/dist/esm/index.js","src/utils.js","src/index.js"],"names":["defineProps","constructor","__attrsMap","props","properties","attrsMap","Object","create","name","replace","toLowerCase","defineProperty","prototype","get","__props","set","newValue","oldValue","rendered","update","__observedProps","keys","withProps","Base","arguments","observedAttributes","attributeChangedCallback","_","comment","data","document","createComment","text","createTextNode","isNode","obj","nodeType","replaceRange","newNode","range","startNode","endNode","concat","parentNode","nextSibling","removeNodes","replaceChild","parent","nextNode","removeChild","moveTemplate","template","after","before","node","insertBefore","getNodeIndex","index","previousSibling","getNodePath","path","unshift","getNodeByPath","i","l","length","childNodes","TemplateSymbol","Symbol","isTemplateEqual","t1","t2","isTemplate","strings","MARKER_RE","TEXT_ELEMENT","getMarkers","match","RegExp","markerNumber","marker","m","Number","SVG_NAMESPACES","xlink","xml","xmlns","getSVGNamespace","attributeName","split","jobsQueue","jobsQueueLow","flushPending","queueAge","enabled","flushQueue","queue","timeout","performance","now","job","task","args","undefined","pending","splice","flush","requestAnimationFrame","Math","ceil","push","setEnabled","value","enqueueJob","priority","scheduled","firstRun","AttributeExpression","element","setAttributeNS","setAttribute","hasAttribute","removeAttribute","NodeExpression","placeholder","Node","TEXT_NODE","textContent","values","Array","isArray","Map","COMMENT_NODE","replaceWith","updateArray","items","templates","rootNode","currentNode","reduce","item","key","String","forEach","map","indexOf","delete","clear","treeWalkerFilter","NodeFilter","FILTER_ACCEPT","linkAttributes","linkedExpressions","attrs","attributes","n","type","nodePath","linkComment","nodeValue","linkTexts","keyNode","splitText","deleteData","linkExpressions","root","treeWalker","createTreeWalker","SHOW_ELEMENT","SHOW_COMMENT","ELEMENT_NODE","test","tagName","call","resolve","fragment","symbols","symbol","acceptNode","TemplateCache","WeakMap","createCacheEntry","html","context","createElement","innerHTML","content","createRange","selectNodeContents","firstChild","extractContents","expressions","toHTML","NODE_RE","isAttribute","lastElement","parseTemplate","cacheEntry","importNode","_a","Template","withKey","appendChild","render","container","instances","has","svg","withElement","state","renderCallbacks","renderRoot","attachShadow","shadowRootInitDict","connectedCallback","setState","nextState","callback","assign","shift","Element","HTMLElement","getType","isPrimitive","JsonObject","JSON","parse","ex","console","error","classNames","classes","filter","Boolean","join","generateNodePreview","options","nodeCount","maxLength","objectNodes","slice","preview","allNodesPreview","nodePreview","substring","ObjectKey","isCollapsable","collapsed","onClick","JsonNestedObjectNode","TinyElement","handleKeyClick","e","preventDefault","is","renderValue","stringify","renderChild","isPrimitiveOrNode","JsonObjectNode","renderObject","renderPrimitive","JsonViewer","json","innerText","trim","mode","customElements","define"],"mappings":"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","file":"src.0e945c22.js","sourceRoot":"..","sourcesContent":["function defineProps(constructor) {\n    if (!constructor.__attrsMap) {\n        const props = constructor.properties;\n        const attrsMap = Object.create(null);\n        if (props) {\n            for (const name in props) {\n                attrsMap[name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()] = name;\n                Object.defineProperty(constructor.prototype, name, {\n                    get() {\n                        return this.__props[name];\n                    },\n                    set(newValue) {\n                        const oldValue = this.__props[name];\n                        this.__props[name] = newValue;\n                        this.rendered &&\n                            oldValue !== newValue &&\n                            this.update();\n                    }\n                });\n            }\n        }\n        constructor.__attrsMap = attrsMap;\n        constructor.__observedProps = Object.keys(attrsMap);\n    }\n    return constructor.__observedProps;\n}\nexport function withProps(Base) {\n    return class extends Base {\n        constructor() {\n            super(...arguments);\n            this.__props = Object.create(null);\n        }\n        static get observedAttributes() {\n            return defineProps(this);\n        }\n        attributeChangedCallback(name, _, newValue) {\n            const { __attrsMap, properties } = this.constructor;\n            this[__attrsMap[name]] = properties[name](newValue);\n        }\n    };\n}\n","export function comment(data = '') {\n    return document.createComment(data);\n}\nexport function text(data = '') {\n    return document.createTextNode(data);\n}\nexport function isNode(obj) {\n    return !!obj && !!obj.nodeType;\n}\nexport function replaceRange(newNode, range) {\n    const [startNode, endNode] = [].concat(range);\n    if (!startNode.parentNode)\n        return;\n    if (endNode && startNode.nextSibling !== endNode) {\n        removeNodes(startNode.nextSibling, endNode);\n    }\n    startNode.parentNode.replaceChild(newNode, startNode);\n}\nexport function removeNodes(startNode, endNode = null, parent = startNode.parentNode) {\n    if (!parent)\n        return;\n    while (startNode !== endNode) {\n        const nextNode = startNode.nextSibling;\n        parent.removeChild(startNode);\n        startNode = nextNode;\n    }\n}\nexport function moveTemplate(template, after, parent = after.parentNode) {\n    const [startNode, endNode] = template.range;\n    const before = after.nextSibling;\n    let node = startNode;\n    do {\n        const nextNode = node.nextSibling;\n        parent.insertBefore(node, before);\n        node = nextNode;\n    } while (node !== endNode);\n    parent.insertBefore(endNode, before);\n}\nexport function getNodeIndex(node) {\n    let index = 0;\n    while ((node = node.previousSibling))\n        index++;\n    return index;\n}\nexport function getNodePath(node) {\n    const path = [];\n    while (node.parentNode) {\n        path.unshift(getNodeIndex(node));\n        node = node.parentNode;\n    }\n    return path;\n}\nexport function getNodeByPath(node, path) {\n    for (let i = 0, l = path.length; i < l; i++)\n        node = node.childNodes[path[i]];\n    return node;\n}\nexport const TemplateSymbol = Symbol();\nexport function isTemplateEqual(t1, t2) {\n    return isTemplate(t1) && isTemplate(t2) && t1.strings === t2.strings;\n}\nexport function isTemplate(obj) {\n    return obj && obj[TemplateSymbol];\n}\nexport const MARKER_RE = /__(\\d+)__/;\nexport const TEXT_ELEMENT = /^(?:style|textarea)$/i;\nexport function getMarkers(text) {\n    return text.match(new RegExp(MARKER_RE, 'g')) || [];\n}\nexport function markerNumber(marker) {\n    const m = marker.match(MARKER_RE);\n    return Number(m ? m[1] : -1);\n}\nconst SVG_NAMESPACES = {\n    xlink: 'http://www.w3.org/1999/xlink',\n    xml: 'http://www.w3.org/XML/1998/namespace',\n    xmlns: 'http://www.w3.org/2000/xmlns/'\n};\nexport function getSVGNamespace(attributeName) {\n    return SVG_NAMESPACES[attributeName.split(':')[0]];\n}\n","const jobsQueue = [];\nconst jobsQueueLow = [];\nlet flushPending = false;\nlet queueAge = 0;\nlet enabled = true;\nfunction flushQueue(queue, timeout) {\n    let i = 0;\n    while (timeout - performance.now() > 0 && i < queue.length) {\n        const job = queue[i++];\n        job.task(...job.args);\n        job.args = undefined;\n        job.pending = false;\n    }\n    queue.splice(0, i);\n}\nfunction flush() {\n    flushPending = true;\n    requestAnimationFrame(() => {\n        queueAge++;\n        const now = performance.now();\n        const timeSlice = 10 * Math.ceil(queueAge * (1.0 / 50));\n        const timeout = now + timeSlice;\n        flushQueue(jobsQueue, timeout);\n        flushQueue(jobsQueueLow, timeout);\n        if (jobsQueue.length > 0) {\n            jobsQueueLow.push(...jobsQueue);\n            jobsQueue.length = 0;\n        }\n        if (jobsQueueLow.length > 0)\n            flush();\n        else {\n            flushPending = false;\n            queueAge = 0;\n        }\n    });\n}\nexport function setEnabled(value) {\n    enabled = value;\n}\nexport function enqueueJob(job, priority) {\n    job.pending = true;\n    if (priority === 1)\n        jobsQueue.push(job);\n    else if (priority === 0)\n        jobsQueueLow.push(job);\n    if (!flushPending)\n        flush();\n}\nexport function scheduled(task, priority = 1) {\n    const job = {\n        task,\n        args: [],\n        pending: false,\n        firstRun: true\n    };\n    return (...args) => {\n        if (job.firstRun || !enabled) {\n            job.firstRun = false;\n            task(...args);\n        }\n        else {\n            job.args = args;\n            if (!job.pending)\n                enqueueJob(job, priority);\n        }\n    };\n}\n","import { isNode, replaceRange, isTemplate, isTemplateEqual, moveTemplate, text, getSVGNamespace } from './utils';\nimport { scheduled } from './scheduler';\nexport class AttributeExpression {\n    constructor(element, name) {\n        this.update = scheduled((value) => {\n            if (this.value === value)\n                return;\n            const { name, element } = this;\n            if ('ownerSVGElement' in element) {\n                element.setAttributeNS(getSVGNamespace(name), name, value);\n            }\n            else if (name in element) {\n                element[name] = value;\n            }\n            else if (typeof value !== 'undefined') {\n                element.setAttribute(name, value);\n            }\n            else {\n                element.hasAttribute(name) && element.removeAttribute(name);\n            }\n            this.value = value;\n        });\n        this.name = name;\n        this.element = element;\n    }\n}\nexport class NodeExpression {\n    constructor(element) {\n        this.update = scheduled((value) => {\n            if (value === this.value)\n                return;\n            const { element, placeholder } = this;\n            if (typeof value !== 'object' &&\n                element.nodeType === Node.TEXT_NODE) {\n                element.textContent = value;\n            }\n            else if (isTemplateEqual(value, element)) {\n                element.update(value.values);\n            }\n            else if (Array.isArray(value)) {\n                if (!(this.value instanceof Map) &&\n                    element.nodeType !== Node.COMMENT_NODE) {\n                    this.replaceWith(placeholder);\n                }\n                value = this.updateArray(value);\n            }\n            else {\n                this.replaceWith(value == null ? placeholder : value);\n            }\n            this.value = value;\n        });\n        this.element = this.placeholder = element;\n    }\n    updateArray(items) {\n        const templates = this.value instanceof Map ? this.value : new Map();\n        const { element: rootNode } = this;\n        let currentNode = rootNode;\n        const keys = items.reduce((keys, item, i) => {\n            const key = String(item.key || i);\n            let template = templates.get(key);\n            if (!template) {\n                const node = item.create();\n                currentNode.parentNode.insertBefore(node, currentNode.nextSibling);\n                templates.set(key, (template = item));\n            }\n            else if (!isTemplateEqual(template, item)) {\n                replaceRange(item.create(), template.range);\n                templates.set(key, (template = item));\n            }\n            else {\n                template.update(item.values);\n            }\n            if (currentNode.nextSibling !== template.range[0]) {\n                moveTemplate(template, currentNode);\n            }\n            currentNode = template.range[1];\n            keys.push(key);\n            return keys;\n        }, []);\n        templates.forEach((template, key, map) => {\n            if (keys.indexOf(key) === -1) {\n                template.delete();\n                map.delete(key);\n            }\n        });\n        return templates;\n    }\n    replaceWith(newValue) {\n        const { element, value } = this;\n        if (value instanceof Map) {\n            value.forEach(template => template.delete());\n            value.clear();\n        }\n        if (element !== newValue) {\n            this.element = newValue = isTemplate(newValue)\n                ? newValue\n                : isNode(newValue)\n                    ? newValue\n                    : text(newValue);\n            replaceRange(isTemplate(newValue)\n                ? newValue.create()\n                : newValue, isTemplate(element)\n                ? element.range\n                : element);\n        }\n    }\n}\n","import { AttributeExpression, NodeExpression } from './expressions';\nimport { getNodePath, getNodeByPath, text, markerNumber, TEXT_ELEMENT, getMarkers } from './utils';\nfunction treeWalkerFilter() {\n    return NodeFilter.FILTER_ACCEPT;\n}\ntreeWalkerFilter.acceptNode = treeWalkerFilter;\nexport function linkAttributes(element, linkedExpressions) {\n    const attrs = element.attributes;\n    let i = attrs.length;\n    while (i--) {\n        const { name, value } = attrs.item(i);\n        const n = markerNumber(value);\n        if (n !== -1) {\n            element.removeAttribute(name);\n            linkedExpressions[n] = {\n                type: AttributeExpression,\n                name,\n                nodePath: getNodePath(element)\n            };\n        }\n    }\n}\nexport function linkComment(node, linkedExpressions) {\n    const n = markerNumber(node.data);\n    if (n !== -1) {\n        linkedExpressions[n] = {\n            type: NodeExpression,\n            nodePath: getNodePath(node)\n        };\n        node.nodeValue = '';\n    }\n}\nexport function linkTexts(node, linkedExpressions) {\n    getMarkers(node.data).forEach((key) => {\n        const keyNode = text();\n        node = node.splitText(node.data.indexOf(key));\n        node.deleteData(0, key.length);\n        node.parentNode.insertBefore(keyNode, node);\n        linkedExpressions[markerNumber(key)] = {\n            type: NodeExpression,\n            nodePath: getNodePath(keyNode)\n        };\n    });\n}\nexport function linkExpressions(root) {\n    const treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT, treeWalkerFilter, false);\n    const linkedExpressions = [];\n    while (treeWalker.nextNode()) {\n        const node = treeWalker.currentNode;\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            linkAttributes(node, linkedExpressions);\n            if (TEXT_ELEMENT.test(node.tagName)) {\n                [].forEach.call(node.childNodes, node => linkTexts(node, linkedExpressions));\n            }\n        }\n        else\n            linkComment(node, linkedExpressions);\n    }\n    return linkedExpressions;\n}\nexport function resolve(fragment, symbols) {\n    return symbols.map(symbol => new symbol.type(getNodeByPath(fragment, symbol.nodePath), symbol.name));\n}\n","import { linkExpressions, resolve } from './linker';\nimport { TEXT_ELEMENT } from './utils';\nconst TemplateCache = new WeakMap();\nfunction createCacheEntry(html, context) {\n    const template = document.createElement('template');\n    template.innerHTML = context ? `<${context}>${html}</${context}>` : html;\n    let content = template.content;\n    if (context) {\n        const range = document.createRange();\n        range.selectNodeContents(content.firstChild);\n        content = range.extractContents();\n    }\n    return {\n        content,\n        expressions: linkExpressions(content)\n    };\n}\nfunction toHTML(strings) {\n    const tagName = `[0-9a-zA-Z]+`, attributeName = `[^<\\\\s\\\\0\"'>\\\\/=]+`, attributeValue = `(?:\"[^\"]*\"?|'[^']*'?|[^\\\\s'\">]*)`, attribute = `\\\\s*${attributeName}(?:\\\\s*=\\\\s*${attributeValue})?`, tagOpen = `<(${tagName})(?:${attribute})*\\\\s*(>?)`;\n    const NODE_RE = new RegExp(`^[^]*${tagOpen}|[^]*(>)[^]*|[^]*$`, 'i');\n    let isAttribute = false;\n    let lastElement;\n    let html = strings[0];\n    for (let i = 0, l = strings.length; i < l - 1; i++) {\n        const marker = `__${i}__`;\n        const match = strings[i].match(NODE_RE);\n        if (match[1]) {\n            lastElement = match[1];\n            isAttribute = !match[2];\n        }\n        if (match[2] || match[3]) {\n            isAttribute = TEXT_ELEMENT.test(lastElement);\n        }\n        html += (isAttribute ? marker : `<!--${marker}-->`) + strings[i + 1];\n    }\n    return html;\n}\nexport function parseTemplate(strings, context) {\n    let cacheEntry = TemplateCache.get(strings);\n    if (!cacheEntry) {\n        TemplateCache.set(strings, (cacheEntry = createCacheEntry(toHTML(strings), context)));\n    }\n    const fragment = document.importNode(cacheEntry.content, true);\n    const expressions = resolve(fragment, cacheEntry.expressions);\n    return {\n        fragment,\n        expressions\n    };\n}\n","var _a;\nimport { parseTemplate } from './parser';\nimport { TemplateSymbol, removeNodes, text } from './utils';\nexport class Template {\n    constructor(strings, values, context) {\n        this[_a] = true;\n        this.values = values;\n        this.strings = strings;\n        this.context = context;\n    }\n    withKey(key) {\n        this.key = key;\n        return this;\n    }\n    update(values) {\n        for (let i = 0; i < values.length; i++) {\n            if (this.expressions[i] !== undefined)\n                this.expressions[i].update(values[i]);\n        }\n    }\n    delete() {\n        removeNodes(this.range[0], this.range[1].nextSibling);\n        this.range = undefined;\n        this.expressions = undefined;\n    }\n    create() {\n        const { fragment, expressions } = parseTemplate(this.strings, this.context);\n        this.expressions = expressions;\n        this.range = [\n            fragment.insertBefore(text(), fragment.firstChild),\n            fragment.appendChild(text())\n        ];\n        this.update(this.values);\n        return fragment;\n    }\n}\n_a = TemplateSymbol;\n","export { Template } from './template';\nexport { scheduled } from './scheduler';\nimport { Template } from './template';\nimport { removeNodes } from './utils';\nexport function render(template, container) {\n    if (!render.instances.has(container)) {\n        render.instances.set(container, template);\n        removeNodes(container.firstChild, null, container);\n        container.appendChild(template.create());\n    }\n    else {\n        render.instances.get(container).update(template.values);\n    }\n}\nrender.instances = new WeakMap();\nexport function html(strings, ...values) {\n    return new Template(strings, values);\n}\nexport function svg(strings, ...values) {\n    return new Template(strings, values, 'svg');\n}\n","import { render } from '@tiny-lit/core';\nexport function withElement(Base) {\n    return class extends Base {\n        constructor() {\n            super(...arguments);\n            this.state = {};\n            this.rendered = false;\n            this.renderCallbacks = [];\n            this.renderRoot = this;\n        }\n        attachShadow(shadowRootInitDict) {\n            return (this.renderRoot = super.attachShadow.call(this, shadowRootInitDict));\n        }\n        connectedCallback() {\n            this.update();\n        }\n        setState(nextState, callback) {\n            const state = this.state;\n            this.state = Object.assign({}, state, (typeof nextState === 'function'\n                ? nextState(state, this)\n                : nextState));\n            callback && this.renderCallbacks.push(callback);\n            this.update();\n        }\n        render() {\n            return null;\n        }\n        update() {\n            this.rendered = true;\n            const template = this.render();\n            template && render(template, this.renderRoot);\n            while (this.renderCallbacks.length)\n                this.renderCallbacks.shift()();\n        }\n        ;\n    };\n}\n","import { withProps } from './withProps';\nimport { withElement } from './withElement';\nexport const Element = withProps(withElement(HTMLElement));\n","export { Element } from './Element';\nexport { withProps } from './withProps';\nexport { withElement } from './withElement';\n","import { isTemplate } from '@tiny-lit/core/dist/esm/utils';\n\nexport function getType(obj) {\n    return obj === null ? 'null' : Array.isArray(obj) ? 'array' : typeof obj;\n}\n\nexport function isPrimitive(obj) {\n    return obj !== Object(obj);\n}\n\nexport function isNode(obj) {\n    return !!obj && (!!obj.nodeType || isTemplate(obj));\n}\n\nexport function JsonObject(obj) {\n    try {\n        if (typeof obj === 'string') return JSON.parse(obj);\n    } catch (ex) {\n        console.error(ex);\n    }\n    return obj;\n}\n\nexport function classNames(...classes) {\n    return classes.filter(Boolean).join(' ');\n}\n\nexport function generateNodePreview(node, options) {\n    const { nodeCount, maxLength } = {\n        nodeCount: 3,\n        maxLength: 15,\n        ...options\n    };\n    const isArray = Array.isArray(node);\n    const objectNodes = Object.keys(node);\n    const keys = objectNodes.slice(0, nodeCount);\n    const preview = [isArray ? '[ ' : '{ '];\n\n    preview.push(\n        keys\n            .reduce((allNodesPreview, key) => {\n                const nodePreview = [];\n                const nodeValue = node[key];\n                const nodeType = getType(nodeValue);\n\n                if (!isArray) nodePreview.push(`${key}: `);\n\n                if (nodeType === 'object') nodePreview.push('{ ... }');\n                else if (nodeType === 'array') nodePreview.push('[ ... ]');\n                else if (nodeType === 'string')\n                    nodePreview.push(\n                        `\"${nodeValue.substring(0, maxLength)}${nodeValue.length > maxLength ? '...' : ''}\"`\n                    );\n                else nodePreview.push(String(nodeValue));\n\n                return allNodesPreview.concat(nodePreview.join(''));\n            }, [])\n            .join(', ')\n    );\n\n    if (objectNodes.length > nodeCount) preview.push(', ...');\n\n    preview.push(isArray ? ' ]' : ' }');\n\n    return preview.join('');\n}\n","import { Element as TinyElement } from '@tiny-lit/element';\nimport { html } from '@tiny-lit/core';\nimport { getType, isPrimitive, JsonObject, generateNodePreview, isNode, classNames } from './utils';\n\nconst ObjectKey = ({ isCollapsable, collapsed, onClick, key }) => html`\n    <span\n        class=${classNames(key && 'key', isCollapsable && 'collapsable', collapsed && 'collapsableCollapsed')}\n        onClick=${onClick}\n    >\n        ${key}:\n    </span>\n`;\n\nclass JsonNestedObjectNode extends TinyElement {\n    data = null;\n    collapsed = true;\n\n    static get properties() {\n        return {\n            data: JsonObject,\n            collapsed: Boolean,\n            key: String\n        };\n    }\n\n    static get is() {\n        return 'json-nested-object-node';\n    }\n\n    handleKeyClick = e => {\n        e.preventDefault();\n        this.collapsed = !this.collapsed;\n    };\n\n    renderValue(node) {\n        return isNode(node)\n            ? node\n            : html`\n                  <span class=${getType(node)}>${JSON.stringify(node)}</span>\n              `;\n    }\n\n    renderChild(node) {\n        return this.collapsed\n            ? html`\n                  <span class=\"preview\">\n                      ${generateNodePreview(node)}\n                  </span>\n              `\n            : html`\n                  <json-object-node data=${node}></json-object-node>\n              `;\n    }\n\n    render() {\n        const { data, key } = this;\n        const isPrimitiveOrNode = isPrimitive(data) || isNode(data);\n\n        return html`\n            ${ObjectKey({\n                isCollapsable: !isPrimitiveOrNode,\n                collapsed: this.collapsed,\n                key,\n                onClick: !isPrimitiveOrNode && this.handleKeyClick\n            })}\n            ${isPrimitiveOrNode ? this.renderValue(data) : this.renderChild(data)}\n        `;\n    }\n}\n\nclass JsonObjectNode extends TinyElement {\n    data = null;\n    collapsed = true;\n\n    static get is() {\n        return 'json-object-node';\n    }\n\n    static get properties() {\n        return {\n            data: JsonObject,\n            collapsed: Boolean\n        };\n    }\n\n    renderObject(data) {\n        return Object.keys(data).map(key =>\n            html`\n                <li>\n                    <json-nested-object-node key=${key} data=${data[key]}></json-nested-object-node>\n                </li>\n            `.withKey(key)\n        );\n    }\n\n    renderPrimitive(data) {\n        return data !== undefined\n            ? html`\n                  <li>${data}</li>\n              `\n            : null;\n    }\n\n    render() {\n        const { data } = this;\n\n        return html`\n            <ul>\n                ${isPrimitive(data) ? this.renderPrimitive(data) : this.renderObject(data)}\n            </ul>\n        `;\n    }\n}\n\nclass JsonViewer extends TinyElement {\n    data = null;\n\n    static get is() {\n        return 'json-viewer';\n    }\n\n    static get properties() {\n        return {\n            data: JsonObject\n        };\n    }\n\n    connectedCallback() {\n        if (!this.hasAttribute('data')) {\n            const json = this.innerText.trim();\n            if (json) this.data = JSON.parse(json);\n        }\n\n        this.attachShadow({ mode: 'open' });\n\n        super.connectedCallback();\n    }\n\n    render() {\n        return html`\n            <style>\n                :host {\n                    --background-color: #2a2f3a;\n                    --color: #f8f8f2;\n                    --string-color: #a3eea0;\n                    --number-color: #d19a66;\n                    --boolean-color: #4ba7ef;\n                    --null-color: #df9cf3;\n                    --property-color: #6fb3d2;\n                    --font-family: monaco, Consolas, 'Lucida Console', monospace;\n                    --preview-color: rgba(222, 175, 143, 0.9);\n\n                    display: block;\n                    background-color: var(--background-color);\n                    color: var(--color);\n                    padding: 0.5rem;\n                    font-family: var(--font-family);\n                    font-size: 1rem;\n                }\n\n                .preview {\n                    color: var(--preview-color);\n                }\n\n                .null {\n                    color: var(--null-color, #df9cf3);\n                }\n\n                .key {\n                    color: var(--property-color, #f9857b);\n                    display: inline-block;\n                }\n\n                .collapsable:before {\n                    display: inline-block;\n                    color: var(--color);\n                    padding-right: 5px;\n                    padding-left: 5px;\n                    font-size: 0.7rem;\n                    content: '▶';\n                    transition: transform 195ms ease-in;\n                    transform: rotate(90deg);\n                    color: var(--property-color);\n                }\n\n                .collapsable.collapsableCollapsed:before {\n                    transform: rotate(0);\n                }\n\n                .collapsable {\n                    cursor: pointer;\n                    user-select: none;\n                }\n\n                .string {\n                    color: var(--string-color);\n                }\n\n                .number {\n                    color: var(--number-color);\n                }\n\n                .boolean {\n                    color: var(--boolean-color);\n                }\n\n                ul {\n                    padding: 0;\n                    clear: both;\n                }\n\n                ul,\n                li {\n                    list-style: none;\n                    position: relative;\n                }\n\n                li ul > li {\n                    position: relative;\n                    padding-top: 0.25rem;\n                    margin-left: 1.5rem;\n                    padding-left: 0px;\n                }\n\n                json-nested-object-node ul:before {\n                    content: '';\n                    border-left: 1px solid #333;\n                    position: absolute;\n                    left: 0.5rem;\n                    top: 0.5rem;\n                    bottom: 0.5rem;\n                }\n\n                json-nested-object-node ul:hover:before {\n                    border-left: 1px solid #666;\n                }\n            </style>\n            <json-object-node data=${this.data}></json-object-node>\n        `;\n    }\n}\ncustomElements.define(JsonObjectNode.is, JsonObjectNode);\ncustomElements.define(JsonNestedObjectNode.is, JsonNestedObjectNode);\ncustomElements.define(JsonViewer.is, JsonViewer);\n"]}