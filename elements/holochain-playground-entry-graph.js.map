{"version":3,"file":"holochain-playground-entry-graph.js","sources":["../../node_modules/webcola/WebCola/src/powergraph.ts","../../node_modules/webcola/WebCola/src/linklengths.ts","../../node_modules/webcola/WebCola/src/descent.ts","../../node_modules/webcola/WebCola/src/vpsc.ts","../../node_modules/webcola/WebCola/src/rbtree.ts","../../node_modules/webcola/WebCola/src/rectangle.ts","../../node_modules/webcola/WebCola/src/pqueue.ts","../../node_modules/webcola/WebCola/src/shortestpaths.ts","../../node_modules/webcola/WebCola/src/geom.ts","../../node_modules/webcola/WebCola/src/handledisconnected.ts","../../node_modules/webcola/WebCola/src/layout.ts","../../node_modules/webcola/WebCola/src/adaptor.ts","../../node_modules/webcola/WebCola/src/d3v3adaptor.ts","../../node_modules/webcola/WebCola/src/d3v4adaptor.ts","../../node_modules/webcola/WebCola/src/d3adaptor.ts","../../node_modules/webcola/WebCola/src/gridrouter.ts","../../node_modules/webcola/WebCola/src/layout3d.ts","../../node_modules/webcola/WebCola/src/batch.ts","../../node_modules/webcola/WebCola/index.ts","../../node_modules/cytoscape-cola/cytoscape-cola.js","../../node_modules/@material/mwc-checkbox/mwc-checkbox-base.ts","../../node_modules/@material/mwc-checkbox/mwc-checkbox-css.ts","../../node_modules/@material/mwc-checkbox/mwc-checkbox.ts","../../src/elements/holochain-playground-entry-graph.ts"],"sourcesContent":["import {LinkAccessor} from './linklengths'\r\n\r\nexport interface LinkTypeAccessor<Link> extends LinkAccessor<Link> {\r\n        // return a unique identifier for the type of the link\r\n        getType(l: Link): number;\r\n    }\r\n\r\n    export class PowerEdge {\r\n        constructor(\r\n            public source: any,\r\n            public target: any,\r\n            public type: number) { }\r\n    }\r\n\r\n    export class Configuration<Link> {\r\n        // canonical list of modules.\r\n        // Initialized to a module for each leaf node, such that the ids and indexes of the module in the array match the indexes of the nodes in links\r\n        // Modules created through merges are appended to the end of this.\r\n        modules: Module[];\r\n        // top level modules and candidates for merges\r\n        roots: ModuleSet[];\r\n        // remaining edge count\r\n        R: number;\r\n        constructor(n: number, edges: Link[], private linkAccessor: LinkTypeAccessor<Link>, rootGroup?: any[]) {\r\n            this.modules = new Array(n);\r\n            this.roots = [];\r\n            if (rootGroup) {\r\n                this.initModulesFromGroup(rootGroup);\r\n            } else {\r\n                this.roots.push(new ModuleSet());\r\n                for (var i = 0; i < n; ++i)\r\n                    this.roots[0].add(this.modules[i] = new Module(i));\r\n            }\r\n            this.R = edges.length;\r\n            edges.forEach(e => {\r\n                var s = this.modules[linkAccessor.getSourceIndex(e)],\r\n                    t = this.modules[linkAccessor.getTargetIndex(e)],\r\n                    type = linkAccessor.getType(e);\r\n                s.outgoing.add(type, t);\r\n                t.incoming.add(type, s);\r\n            });\r\n        }\r\n\r\n        private initModulesFromGroup(group): ModuleSet {\r\n            var moduleSet = new ModuleSet();\r\n            this.roots.push(moduleSet);\r\n            for (var i = 0; i < group.leaves.length; ++i) {\r\n                var node = group.leaves[i];\r\n                var module = new Module(node.id);\r\n                this.modules[node.id] = module;\r\n                moduleSet.add(module);\r\n            }\r\n            if (group.groups) {\r\n                for (var j = 0; j < group.groups.length; ++j) {\r\n                    var child = group.groups[j];\r\n                    // Propagate group properties (like padding, stiffness, ...) as module definition so that the generated power graph group will inherit it\r\n                    var definition = {};\r\n                    for (var prop in child)\r\n                        if (prop !== \"leaves\" && prop !== \"groups\" && child.hasOwnProperty(prop))\r\n                            definition[prop] = child[prop];\r\n                    // Use negative module id to avoid clashes between predefined and generated modules\r\n                    moduleSet.add(new Module(-1-j, new LinkSets(), new LinkSets(), this.initModulesFromGroup(child), definition));\r\n                }\r\n            }\r\n            return moduleSet;\r\n         }\r\n\r\n        // merge modules a and b keeping track of their power edges and removing the from roots\r\n        merge(a: Module, b: Module, k: number = 0): Module {\r\n            var inInt = a.incoming.intersection(b.incoming),\r\n                outInt = a.outgoing.intersection(b.outgoing);\r\n            var children = new ModuleSet();\r\n            children.add(a);\r\n            children.add(b);\r\n            var m = new Module(this.modules.length, outInt, inInt, children);\r\n            this.modules.push(m);\r\n            var update = (s: LinkSets, i: string, o: string) => {\r\n                s.forAll((ms, linktype) => {\r\n                    ms.forAll(n => {\r\n                        var nls = <LinkSets>n[i];\r\n                        nls.add(linktype, m);\r\n                        nls.remove(linktype, a);\r\n                        nls.remove(linktype, b);\r\n                        (<LinkSets>a[o]).remove(linktype, n);\r\n                        (<LinkSets>b[o]).remove(linktype, n);\r\n                    });\r\n                });\r\n            };\r\n            update(outInt, \"incoming\", \"outgoing\");\r\n            update(inInt, \"outgoing\", \"incoming\");\r\n            this.R -= inInt.count() + outInt.count();\r\n            this.roots[k].remove(a);\r\n            this.roots[k].remove(b);\r\n            this.roots[k].add(m);\r\n            return m;\r\n        }\r\n\r\n        private rootMerges(k: number = 0): {\r\n            id: number;\r\n            nEdges: number;\r\n            a: Module;\r\n            b: Module;\r\n        }[] {\r\n            var rs = this.roots[k].modules();\r\n            var n = rs.length;\r\n            var merges = new Array(n * (n - 1));\r\n            var ctr = 0;\r\n            for (var i = 0, i_ = n - 1; i < i_; ++i) {\r\n                for (var j = i+1; j < n; ++j) {\r\n                    var a = rs[i], b = rs[j];\r\n                    merges[ctr] = { id: ctr, nEdges: this.nEdges(a, b), a: a, b: b };\r\n                    ctr++;\r\n                }\r\n            }\r\n            return merges;\r\n        }\r\n\r\n        greedyMerge(): boolean {\r\n            for (var i = 0; i < this.roots.length; ++i) {\r\n                // Handle single nested module case\r\n                if (this.roots[i].modules().length < 2) continue;\r\n\r\n                // find the merge that allows for the most edges to be removed.  secondary ordering based on arbitrary id (for predictability)\r\n                var ms = this.rootMerges(i).sort((a, b) => a.nEdges == b.nEdges ? a.id - b.id : a.nEdges - b.nEdges);\r\n                var m = ms[0];\r\n                if (m.nEdges >= this.R) continue;\r\n                this.merge(m.a, m.b, i);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        private nEdges(a: Module, b: Module): number {\r\n            var inInt = a.incoming.intersection(b.incoming),\r\n                outInt = a.outgoing.intersection(b.outgoing);\r\n            return this.R - inInt.count() - outInt.count();\r\n        }\r\n\r\n        getGroupHierarchy(retargetedEdges: PowerEdge[]): any[]{\r\n            var groups = [];\r\n            var root = {};\r\n            toGroups(this.roots[0], root, groups);\r\n            var es = this.allEdges();\r\n            es.forEach(e => {\r\n                var a = this.modules[e.source];\r\n                var b = this.modules[e.target];\r\n                retargetedEdges.push(new PowerEdge(\r\n                    typeof a.gid === \"undefined\" ? e.source : groups[a.gid],\r\n                    typeof b.gid === \"undefined\" ? e.target : groups[b.gid],\r\n                    e.type\r\n                ));\r\n            });\r\n            return groups;\r\n        }\r\n\r\n        allEdges(): PowerEdge[] {\r\n            var es = [];\r\n            Configuration.getEdges(this.roots[0], es);\r\n            return es;\r\n        }\r\n\r\n        static getEdges(modules: ModuleSet, es: PowerEdge[]) {\r\n            modules.forAll(m => {\r\n                m.getEdges(es);\r\n                Configuration.getEdges(m.children, es);\r\n            });\r\n        }\r\n    }\r\n\r\n    function toGroups(modules: ModuleSet, group, groups) {\r\n        modules.forAll(m => {\r\n            if (m.isLeaf()) {\r\n                if (!group.leaves) group.leaves = [];\r\n                group.leaves.push(m.id);\r\n            } else {\r\n                var g = group;\r\n                m.gid = groups.length;\r\n                if (!m.isIsland() || m.isPredefined()) {\r\n                    g = { id: m.gid };\r\n                    if (m.isPredefined())\r\n                        // Apply original group properties\r\n                        for (var prop in m.definition)\r\n                            g[prop] = m.definition[prop];\r\n                    if (!group.groups) group.groups = [];\r\n                    group.groups.push(m.gid);\r\n                    groups.push(g);\r\n                }\r\n                toGroups(m.children, g, groups);\r\n            }\r\n        });\r\n    }\r\n\r\n    export class Module {\r\n        gid: number;\r\n\r\n        constructor(\r\n            public id: number,\r\n            public outgoing: LinkSets = new LinkSets(),\r\n            public incoming: LinkSets = new LinkSets(),\r\n            public children: ModuleSet = new ModuleSet(),\r\n            public definition?: any) { }\r\n\r\n        getEdges(es: PowerEdge[]) {\r\n            this.outgoing.forAll((ms, edgetype) => {\r\n                ms.forAll(target => {\r\n                    es.push(new PowerEdge(this.id, target.id, edgetype));\r\n                });\r\n            });\r\n        }\r\n\r\n        isLeaf() {\r\n            return this.children.count() === 0;\r\n        }\r\n\r\n        isIsland() {\r\n            return this.outgoing.count() === 0 && this.incoming.count() === 0;\r\n        }\r\n\r\n        isPredefined(): boolean {\r\n            return typeof this.definition !== \"undefined\";\r\n        }\r\n    }\r\n\r\n    function intersection(m: any, n: any): any {\r\n        var i = {};\r\n        for (var v in m) if (v in n) i[v] = m[v];\r\n        return i;\r\n    }\r\n\r\n    export class ModuleSet {\r\n        table: any = {};\r\n        count() {\r\n            return Object.keys(this.table).length;\r\n        }\r\n        intersection(other: ModuleSet): ModuleSet {\r\n            var result = new ModuleSet();\r\n            result.table = intersection(this.table, other.table);\r\n            return result;\r\n        }\r\n        intersectionCount(other: ModuleSet): number {\r\n            return this.intersection(other).count();\r\n        }\r\n        contains(id: number): boolean {\r\n            return id in this.table;\r\n        }\r\n        add(m: Module): void {\r\n            this.table[m.id] = m;\r\n        }\r\n        remove(m: Module): void {\r\n            delete this.table[m.id];\r\n        }\r\n        forAll(f: (m: Module) => void) {\r\n            for (var mid in this.table) {\r\n                f(this.table[mid]);\r\n            }\r\n        }\r\n        modules(): Module[] {\r\n            var vs = [];\r\n            this.forAll(m => {\r\n                if (!m.isPredefined())\r\n                    vs.push(m);\r\n            });\r\n            return vs;\r\n        }\r\n    }\r\n\r\n    export class LinkSets {\r\n        sets: any = {};\r\n        n: number = 0;\r\n        count(): number {\r\n            return this.n;\r\n        }\r\n        contains(id: number) {\r\n            var result = false;\r\n            this.forAllModules(m => {\r\n                if (!result && m.id == id) {\r\n                    result = true;\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n        add(linktype: number, m: Module) {\r\n            var s: ModuleSet = linktype in this.sets ? this.sets[linktype] : this.sets[linktype] = new ModuleSet();\r\n            s.add(m);\r\n            ++this.n;\r\n        }\r\n        remove(linktype: number, m: Module) {\r\n            var ms = <ModuleSet>this.sets[linktype];\r\n            ms.remove(m);\r\n            if (ms.count() === 0) {\r\n                delete this.sets[linktype];\r\n            }\r\n            --this.n;\r\n        }\r\n        forAll(f: (ms: ModuleSet, linktype: number) => void) {\r\n            for (var linktype in this.sets) {\r\n                f(<ModuleSet>this.sets[linktype], Number(linktype));\r\n            }\r\n        }\r\n        forAllModules(f: (m: Module) => void) {\r\n            this.forAll((ms, lt) => ms.forAll(f));\r\n        }\r\n        intersection(other: LinkSets): LinkSets {\r\n            var result: LinkSets = new LinkSets();\r\n            this.forAll((ms, lt) => {\r\n                if (lt in other.sets) {\r\n                    var i = ms.intersection(other.sets[lt]),\r\n                        n = i.count();\r\n                    if (n > 0) {\r\n                        result.sets[lt] = i;\r\n                        result.n += n;\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n\r\n    function intersectionCount(m: any, n: any): number {\r\n        return Object.keys(intersection(m, n)).length\r\n    }\r\n\r\n    export function getGroups<Link>(nodes: any[], links: Link[], la: LinkTypeAccessor<Link>, rootGroup?: any[]): { groups: any[]; powerEdges: PowerEdge[] } {\r\n        var n = nodes.length,\r\n            c = new Configuration(n, links, la, rootGroup);\r\n        while (c.greedyMerge());\r\n        var powerEdges: PowerEdge[] = [];\r\n        var g = c.getGroupHierarchy(powerEdges);\r\n        powerEdges.forEach(function (e) {\r\n            var f = (end) => {\r\n                var g = e[end];\r\n                if (typeof g == \"number\") e[end] = nodes[g];\r\n            };\r\n            f(\"source\");\r\n            f(\"target\");\r\n        });\r\n        return { groups: g, powerEdges: powerEdges };\r\n    }\r\n","    export interface LinkAccessor<Link> {\r\n        getSourceIndex(l: Link): number;\r\n        getTargetIndex(l: Link): number;\r\n    }\r\n\r\n    export interface LinkLengthAccessor<Link> extends LinkAccessor<Link> {\r\n        setLength(l: Link, value: number): void;\r\n    }\r\n\r\n    // compute the size of the union of two sets a and b\r\n    function unionCount(a: any, b: any): number {\r\n        var u = {};\r\n        for (var i in a) u[i] = {};\r\n        for (var i in b) u[i] = {};\r\n        return Object.keys(u).length;\r\n    }\r\n\r\n    // compute the size of the intersection of two sets a and b\r\n    function intersectionCount(a: number[], b: number[]): number {\r\n        var n = 0;\r\n        for (var i in a) if (typeof b[i] !== 'undefined') ++n;\r\n        return n;\r\n    }\r\n\r\n    function getNeighbours<Link>(links: Link[], la: LinkAccessor<Link>): any {\r\n        var neighbours = {};\r\n        var addNeighbours = (u, v) => {\r\n            if (typeof neighbours[u] === 'undefined')\r\n                neighbours[u] = {};\r\n            neighbours[u][v] = {};\r\n        };\r\n        links.forEach(e => {\r\n            var u = la.getSourceIndex(e), v = la.getTargetIndex(e);\r\n            addNeighbours(u, v);\r\n            addNeighbours(v, u);\r\n        });\r\n        return neighbours;\r\n    }\r\n\r\n    // modify the lengths of the specified links by the result of function f weighted by w\r\n    function computeLinkLengths<Link>(links: Link[], w: number, f: (a: any, b: any) => number, la: LinkLengthAccessor<Link>) {\r\n        var neighbours = getNeighbours(links, la);\r\n        links.forEach(l => {\r\n            var a = neighbours[la.getSourceIndex(l)];\r\n            var b = neighbours[la.getTargetIndex(l)];\r\n            la.setLength(l, 1 + w * f(a, b));\r\n        });\r\n    }\r\n\r\n    /** modify the specified link lengths based on the symmetric difference of their neighbours\r\n     * @class symmetricDiffLinkLengths\r\n     */\r\n    export function symmetricDiffLinkLengths<Link>(links: Link[], la: LinkLengthAccessor<Link>, w: number = 1) {\r\n        computeLinkLengths(links, w, (a, b) => Math.sqrt(unionCount(a, b) - intersectionCount(a, b)), la);\r\n    }\r\n\r\n    /** modify the specified links lengths based on the jaccard difference between their neighbours\r\n     * @class jaccardLinkLengths\r\n     */\r\n    export function jaccardLinkLengths<Link>(links: Link[], la: LinkLengthAccessor<Link>, w: number = 1) {\r\n        computeLinkLengths(links, w, (a, b) =>\r\n            Math.min(Object.keys(a).length, Object.keys(b).length) < 1.1 ? 0 : intersectionCount(a, b) / unionCount(a, b)\r\n            , la);\r\n    }\r\n\r\n    export interface IConstraint {\r\n        left: number;\r\n        right: number;\r\n        gap: number;\r\n    }\r\n\r\n    export interface DirectedEdgeConstraints {\r\n        axis: string;\r\n        gap: number;\r\n    }\r\n\r\n    export interface LinkSepAccessor<Link> extends LinkAccessor<Link> {\r\n        getMinSeparation(l: Link): number;\r\n    }\r\n\r\n    /** generate separation constraints for all edges unless both their source and sink are in the same strongly connected component\r\n     * @class generateDirectedEdgeConstraints\r\n     */\r\n    export function generateDirectedEdgeConstraints<Link>(n: number, links: Link[], axis: string,\r\n        la: LinkSepAccessor<Link>): IConstraint[]\r\n    {\r\n        var components = stronglyConnectedComponents(n, links, la);\r\n        var nodes = {};\r\n        components.forEach((c,i) =>\r\n            c.forEach(v => nodes[v] = i)\r\n        );\r\n        var constraints: any[] = [];\r\n        links.forEach(l => {\r\n            var ui = la.getSourceIndex(l), vi = la.getTargetIndex(l),\r\n                u = nodes[ui], v = nodes[vi];\r\n            if (u !== v) {\r\n                constraints.push({\r\n                    axis: axis,\r\n                    left: ui,\r\n                    right: vi,\r\n                    gap: la.getMinSeparation(l)\r\n                });\r\n            }\r\n        });\r\n        return constraints;\r\n    }\r\n\r\n    /**\r\n     * Tarjan's strongly connected components algorithm for directed graphs\r\n     * returns an array of arrays of node indicies in each of the strongly connected components.\r\n     * a vertex not in a SCC of two or more nodes is it's own SCC.\r\n     * adaptation of https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\r\n     */\r\n    export function stronglyConnectedComponents<Link>(numVertices: number, edges: Link[], la: LinkAccessor<Link>): number[][]{\r\n        var nodes = [];\r\n        var index = 0;\r\n        var stack = [];\r\n        var components = [];\r\n        function strongConnect(v) {\r\n            // Set the depth index for v to the smallest unused index\r\n            v.index = v.lowlink = index++;\r\n            stack.push(v);\r\n            v.onStack = true;\r\n\r\n            // Consider successors of v\r\n            for (var w of v.out) {\r\n                if (typeof w.index === 'undefined') {\r\n                    // Successor w has not yet been visited; recurse on it\r\n                    strongConnect(w);\r\n                    v.lowlink = Math.min(v.lowlink, w.lowlink);\r\n                } else if (w.onStack) {\r\n                    // Successor w is in stack S and hence in the current SCC\r\n                    v.lowlink = Math.min(v.lowlink, w.index);\r\n                }\r\n            }\r\n\r\n            // If v is a root node, pop the stack and generate an SCC\r\n            if (v.lowlink === v.index) {\r\n                // start a new strongly connected component\r\n                var component = [];\r\n                while (stack.length) {\r\n                    w = stack.pop();\r\n                    w.onStack = false;\r\n                    //add w to current strongly connected component\r\n                    component.push(w);\r\n                    if (w === v) break;\r\n                }\r\n                // output the current strongly connected component\r\n                components.push(component.map(v => v.id));\r\n            }\r\n        }\r\n        for (var i = 0; i < numVertices; i++) {\r\n            nodes.push({id: i, out: []});\r\n        }\r\n        for (var e of edges) {\r\n            let v = nodes[la.getSourceIndex(e)],\r\n                w = nodes[la.getTargetIndex(e)];\r\n            v.out.push(w);\r\n        }\r\n        for (var v of nodes) if (typeof v.index === 'undefined') strongConnect(v);\r\n        return components;\r\n    }\r\n","    /**\r\n     * Descent respects a collection of locks over nodes that should not move\r\n     * @class Locks\r\n     */\r\n    export class Locks {\r\n        locks: { [key:number]:number[]} = {};\r\n        /**\r\n         * add a lock on the node at index id\r\n         * @method add\r\n         * @param id index of node to be locked\r\n         * @param x required position for node\r\n         */\r\n        add(id: number, x: number[]) {\r\n/* DEBUG\r\n            if (isNaN(x[0]) || isNaN(x[1])) debugger;\r\nDEBUG */\r\n            this.locks[id] = x;\r\n        }\r\n        /**\r\n         * @method clear clear all locks\r\n         */\r\n        clear() {\r\n            this.locks = {};\r\n        }\r\n        /**\r\n         * @isEmpty\r\n         * @returns false if no locks exist\r\n         */\r\n        isEmpty(): boolean {\r\n            for (var l in this.locks) return false;\r\n            return true;\r\n        }\r\n        /**\r\n         * perform an operation on each lock\r\n         * @apply\r\n         */\r\n        apply(f: (id: number, x: number[]) => void) {\r\n            for (var l in this.locks) {\r\n                f(Number(l), this.locks[l]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Uses a gradient descent approach to reduce a stress or p-stress goal function over a graph with specified ideal edge lengths or a square matrix of dissimilarities.\r\n     * The standard stress function over a graph nodes with position vectors x,y,z is (mathematica input):\r\n     *   stress[x_,y_,z_,D_,w_]:=Sum[w[[i,j]] (length[x[[i]],y[[i]],z[[i]],x[[j]],y[[j]],z[[j]]]-d[[i,j]])^2,{i,Length[x]-1},{j,i+1,Length[x]}]\r\n     * where: D is a square matrix of ideal separations between nodes, w is matrix of weights for those separations\r\n     *        length[x1_, y1_, z1_, x2_, y2_, z2_] = Sqrt[(x1 - x2)^2 + (y1 - y2)^2 + (z1 - z2)^2]\r\n     * below, we use wij = 1/(Dij^2)\r\n     *\r\n     * @class Descent\r\n     */\r\n    export class Descent {\r\n        public threshold: number = 0.0001;\r\n        /** Hessian Matrix\r\n         * @property H {number[][][]}\r\n         */\r\n        public H: number[][][];\r\n        /** gradient vector\r\n         * @property G {number[][]}\r\n         */\r\n        public g: number[][];\r\n        /** positions vector\r\n         * @property x {number[][]}\r\n         */\r\n        public x: number[][];\r\n        /**\r\n         * @property k {number} dimensionality\r\n         */\r\n        public k: number;\r\n        /**\r\n         * number of data-points / nodes / size of vectors/matrices\r\n         * @property n {number}\r\n         */\r\n        public n: number;\r\n\r\n        public locks: Locks;\r\n\r\n        private static zeroDistance: number = 1e-10;\r\n        private minD: number;\r\n\r\n        // pool of arrays of size n used internally, allocated in constructor\r\n        private Hd: number[][];\r\n        private a: number[][];\r\n        private b: number[][];\r\n        private c: number[][];\r\n        private d: number[][];\r\n        private e: number[][];\r\n        private ia: number[][];\r\n        private ib: number[][];\r\n        private xtmp: number[][];\r\n\r\n\r\n        // Parameters for grid snap stress.\r\n        // TODO: Make a pluggable \"StressTerm\" class instead of this\r\n        // mess.\r\n        public numGridSnapNodes: number = 0;\r\n        public snapGridSize: number = 100;\r\n        public snapStrength: number = 1000;\r\n        public scaleSnapByMaxH: boolean = false;\r\n\r\n        private random = new PseudoRandom();\r\n\r\n        public project: { (x0: number[], y0: number[], r: number[]): void }[] = null;\r\n\r\n        /**\r\n         * @method constructor\r\n         * @param x {number[][]} initial coordinates for nodes\r\n         * @param D {number[][]} matrix of desired distances between pairs of nodes\r\n         * @param G {number[][]} [default=null] if specified, G is a matrix of weights for goal terms between pairs of nodes.\r\n         * If G[i][j] > 1 and the separation between nodes i and j is greater than their ideal distance, then there is no contribution for this pair to the goal\r\n         * If G[i][j] <= 1 then it is used as a weighting on the contribution of the variance between ideal and actual separation between i and j to the goal function\r\n         */\r\n        constructor(x: number[][], public D: number[][], public G: number[][]= null) {\r\n            this.x = x;\r\n            this.k = x.length; // dimensionality\r\n            var n = this.n = x[0].length; // number of nodes\r\n            this.H = new Array(this.k);\r\n            this.g = new Array(this.k);\r\n            this.Hd = new Array(this.k);\r\n            this.a = new Array(this.k);\r\n            this.b = new Array(this.k);\r\n            this.c = new Array(this.k);\r\n            this.d = new Array(this.k);\r\n            this.e = new Array(this.k);\r\n            this.ia = new Array(this.k);\r\n            this.ib = new Array(this.k);\r\n            this.xtmp = new Array(this.k);\r\n            this.locks = new Locks();\r\n            this.minD = Number.MAX_VALUE;\r\n            var i = n, j;\r\n            while (i--) {\r\n                j = n;\r\n                while (--j > i) {\r\n                    var d = D[i][j];\r\n                    if (d > 0 && d < this.minD) {\r\n                        this.minD = d;\r\n                    }\r\n                }\r\n            }\r\n            if (this.minD === Number.MAX_VALUE) this.minD = 1;\r\n            i = this.k;\r\n            while (i--) {\r\n                this.g[i] = new Array(n);\r\n                this.H[i] = new Array(n);\r\n                j = n;\r\n                while (j--) {\r\n                    this.H[i][j] = new Array(n);\r\n                }\r\n                this.Hd[i] = new Array(n);\r\n                this.a[i] = new Array(n);\r\n                this.b[i] = new Array(n);\r\n                this.c[i] = new Array(n);\r\n                this.d[i] = new Array(n);\r\n                this.e[i] = new Array(n);\r\n                this.ia[i] = new Array(n);\r\n                this.ib[i] = new Array(n);\r\n                this.xtmp[i] = new Array(n);\r\n            }\r\n        }\r\n\r\n        public static createSquareMatrix(n: number, f: (i: number, j: number) => number): number[][] {\r\n            var M = new Array(n);\r\n            for (var i = 0; i < n; ++i) {\r\n                M[i] = new Array(n);\r\n                for (var j = 0; j < n; ++j) {\r\n                    M[i][j] = f(i, j);\r\n                }\r\n            }\r\n            return M;\r\n        }\r\n\r\n        private offsetDir(): number[] {\r\n            var u = new Array(this.k);\r\n            var l = 0;\r\n            for (var i = 0; i < this.k; ++i) {\r\n                var x = u[i] = this.random.getNextBetween(0.01, 1) - 0.5;\r\n                l += x * x;\r\n            }\r\n            l = Math.sqrt(l);\r\n            return u.map(x=> x *= this.minD / l);\r\n        }\r\n\r\n        // compute first and second derivative information storing results in this.g and this.H\r\n        public computeDerivatives(x: number[][]) {\r\n            var n: number = this.n;\r\n            if (n < 1) return;\r\n            var i: number;\r\n/* DEBUG\r\n            for (var u: number = 0; u < n; ++u)\r\n                for (i = 0; i < this.k; ++i)\r\n                    if (isNaN(x[i][u])) debugger;\r\nDEBUG */\r\n            var d: number[] = new Array(this.k);\r\n            var d2: number[] = new Array(this.k);\r\n            var Huu: number[] = new Array(this.k);\r\n            var maxH: number = 0;\r\n            for (var u: number = 0; u < n; ++u) {\r\n                for (i = 0; i < this.k; ++i) Huu[i] = this.g[i][u] = 0;\r\n                for (var v = 0; v < n; ++v) {\r\n                    if (u === v) continue;\r\n\r\n                    // The following loop randomly displaces nodes that are at identical positions\r\n                    var maxDisplaces = n; // avoid infinite loop in the case of numerical issues, such as huge values\r\n                    while (maxDisplaces--) {\r\n                        var sd2 = 0;\r\n                        for (i = 0; i < this.k; ++i) {\r\n                            var dx = d[i] = x[i][u] - x[i][v];\r\n                            sd2 += d2[i] = dx * dx;\r\n                        }\r\n                        if (sd2 > 1e-9) break;\r\n                        var rd = this.offsetDir();\r\n                        for (i = 0; i < this.k; ++i) x[i][v] += rd[i];\r\n                    }\r\n                    var l: number = Math.sqrt(sd2);\r\n                    var D: number = this.D[u][v];\r\n                    var weight = this.G != null ? this.G[u][v] : 1;\r\n                    if (weight > 1 && l > D || !isFinite(D)) {\r\n                        for (i = 0; i < this.k; ++i) this.H[i][u][v] = 0;\r\n                        continue;\r\n                    }\r\n                    if (weight > 1) {\r\n                        weight = 1;\r\n                    }\r\n                    var D2: number = D * D;\r\n                    var gs: number = 2 * weight * (l - D) / (D2 * l);\r\n                    var l3 = l * l * l;\r\n                    var hs: number = 2 * -weight / (D2 * l3);\r\n                    if (!isFinite(gs))\r\n                        console.log(gs);\r\n                    for (i = 0; i < this.k; ++i) {\r\n                        this.g[i][u] += d[i] * gs;\r\n                        Huu[i] -= this.H[i][u][v] = hs * (l3 + D * (d2[i] - sd2) + l * sd2);\r\n                    }\r\n                }\r\n                for (i = 0; i < this.k; ++i) maxH = Math.max(maxH, this.H[i][u][u] = Huu[i]);\r\n            }\r\n            // Grid snap forces\r\n            var r = this.snapGridSize/2;\r\n            var g = this.snapGridSize;\r\n            var w = this.snapStrength;\r\n            var k = w / (r * r);\r\n            var numNodes = this.numGridSnapNodes;\r\n            //var numNodes = n;\r\n            for (var u: number = 0; u < numNodes; ++u) {\r\n                for (i = 0; i < this.k; ++i) {\r\n                    var xiu = this.x[i][u];\r\n                    var m = xiu / g;\r\n                    var f = m % 1;\r\n                    var q = m - f;\r\n                    var a = Math.abs(f);\r\n                    var dx = (a <= 0.5) ? xiu - q * g :\r\n                        (xiu > 0) ? xiu - (q + 1) * g : xiu - (q - 1) * g;\r\n                    if (-r < dx && dx <= r) {\r\n                        if (this.scaleSnapByMaxH) {\r\n                            this.g[i][u] += maxH * k * dx;\r\n                            this.H[i][u][u] += maxH * k;\r\n                        } else {\r\n                            this.g[i][u] += k * dx;\r\n                            this.H[i][u][u] += k;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!this.locks.isEmpty()) {\r\n                this.locks.apply((u, p) => {\r\n                    for (i = 0; i < this.k; ++i) {\r\n                        this.H[i][u][u] += maxH;\r\n                        this.g[i][u] -= maxH * (p[i] - x[i][u]);\r\n                    }\r\n                });\r\n            }\r\n/* DEBUG\r\n            for (var u: number = 0; u < n; ++u)\r\n                for (i = 0; i < this.k; ++i) {\r\n                    if (isNaN(this.g[i][u])) debugger;\r\n                    for (var v: number = 0; v < n; ++v)\r\n                        if (isNaN(this.H[i][u][v])) debugger;\r\n                }\r\nDEBUG */\r\n        }\r\n\r\n        private static dotProd(a: number[], b: number[]): number {\r\n            var x = 0, i = a.length;\r\n            while (i--) x += a[i] * b[i];\r\n            return x;\r\n        }\r\n\r\n        // result r = matrix m * vector v\r\n        private static rightMultiply(m: number[][], v: number[], r: number[]) {\r\n            var i = m.length;\r\n            while (i--) r[i] = Descent.dotProd(m[i], v);\r\n        }\r\n\r\n        // computes the optimal step size to take in direction d using the\r\n        // derivative information in this.g and this.H\r\n        // returns the scalar multiplier to apply to d to get the optimal step\r\n        public computeStepSize(d: number[][]): number {\r\n            var numerator = 0, denominator = 0;\r\n            for (var i = 0; i < this.k; ++i) {\r\n                numerator += Descent.dotProd(this.g[i], d[i]);\r\n                Descent.rightMultiply(this.H[i], d[i], this.Hd[i]);\r\n                denominator += Descent.dotProd(d[i], this.Hd[i]);\r\n            }\r\n            if (denominator === 0 || !isFinite(denominator)) return 0;\r\n            return 1 * numerator / denominator;\r\n        }\r\n\r\n        public reduceStress(): number {\r\n            this.computeDerivatives(this.x);\r\n            var alpha = this.computeStepSize(this.g);\r\n            for (var i = 0; i < this.k; ++i) {\r\n                this.takeDescentStep(this.x[i], this.g[i], alpha);\r\n            }\r\n            return this.computeStress();\r\n        }\r\n\r\n        private static copy(a: number[][], b: number[][]): void {\r\n            var m = a.length, n = b[0].length;\r\n            for (var i = 0; i < m; ++i) {\r\n                for (var j = 0; j < n; ++j) {\r\n                    b[i][j] = a[i][j];\r\n                }\r\n            }\r\n        }\r\n\r\n        // takes a step of stepSize * d from x0, and then project against any constraints.\r\n        // result is returned in r.\r\n        // x0: starting positions\r\n        // r: result positions will be returned here\r\n        // d: unconstrained descent vector\r\n        // stepSize: amount to step along d\r\n        private stepAndProject(x0: number[][], r: number[][], d: number[][], stepSize: number): void {\r\n            Descent.copy(x0, r);\r\n            this.takeDescentStep(r[0], d[0], stepSize);\r\n            if (this.project) this.project[0](x0[0], x0[1], r[0]);\r\n            this.takeDescentStep(r[1], d[1], stepSize);\r\n            if (this.project) this.project[1](r[0], x0[1], r[1]);\r\n\r\n            // todo: allow projection against constraints in higher dimensions\r\n            for (var i = 2; i < this.k; i++)\r\n                this.takeDescentStep(r[i], d[i], stepSize);\r\n\r\n            // the following makes locks extra sticky... but hides the result of the projection from the consumer\r\n            //if (!this.locks.isEmpty()) {\r\n            //    this.locks.apply((u, p) => {\r\n            //        for (var i = 0; i < this.k; i++) {\r\n            //            r[i][u] = p[i];\r\n            //        }\r\n            //    });\r\n            //}\r\n        }\r\n\r\n        private static mApply(m: number, n: number, f: (i: number, j: number) => any) {\r\n            var i = m; while (i-- > 0) {\r\n                var j = n; while (j-- > 0) f(i, j);\r\n            }\r\n        }\r\n        private matrixApply(f: (i: number, j: number) => any) {\r\n            Descent.mApply(this.k, this.n, f);\r\n        }\r\n\r\n        private computeNextPosition(x0: number[][], r: number[][]): void {\r\n            this.computeDerivatives(x0);\r\n            var alpha = this.computeStepSize(this.g);\r\n            this.stepAndProject(x0, r, this.g, alpha);\r\n/* DEBUG\r\n            for (var u: number = 0; u < this.n; ++u)\r\n                for (var i = 0; i < this.k; ++i)\r\n                    if (isNaN(r[i][u])) debugger;\r\nDEBUG */\r\n            if (this.project) {\r\n                this.matrixApply((i, j) => this.e[i][j] = x0[i][j] - r[i][j]);\r\n                var beta = this.computeStepSize(this.e);\r\n                beta = Math.max(0.2, Math.min(beta, 1));\r\n                this.stepAndProject(x0, r, this.e, beta);\r\n            }\r\n        }\r\n\r\n        public run(iterations: number): number {\r\n            var stress = Number.MAX_VALUE, converged = false;\r\n            while (!converged && iterations-- > 0) {\r\n                var s = this.rungeKutta();\r\n                converged = Math.abs(stress / s - 1) < this.threshold;\r\n                stress = s;\r\n            }\r\n            return stress;\r\n        }\r\n\r\n        public rungeKutta(): number {\r\n            this.computeNextPosition(this.x, this.a);\r\n            Descent.mid(this.x, this.a, this.ia);\r\n            this.computeNextPosition(this.ia, this.b);\r\n            Descent.mid(this.x, this.b, this.ib);\r\n            this.computeNextPosition(this.ib, this.c);\r\n            this.computeNextPosition(this.c, this.d);\r\n            var disp = 0;\r\n            this.matrixApply((i, j) => {\r\n                var x = (this.a[i][j] + 2.0 * this.b[i][j] + 2.0 * this.c[i][j] + this.d[i][j]) / 6.0,\r\n                    d = this.x[i][j] - x;\r\n                disp += d * d;\r\n                this.x[i][j] = x;\r\n            });\r\n            return disp;\r\n        }\r\n\r\n        private static mid(a: number[][], b: number[][], m: number[][]): void {\r\n            Descent.mApply(a.length, a[0].length, (i, j) =>\r\n                m[i][j] = a[i][j] + (b[i][j] - a[i][j]) / 2.0);\r\n        }\r\n\r\n        public takeDescentStep(x: number[], d: number[], stepSize: number): void {\r\n            for (var i = 0; i < this.n; ++i) {\r\n                x[i] = x[i] - stepSize * d[i];\r\n            }\r\n        }\r\n\r\n        public computeStress(): number {\r\n            var stress = 0;\r\n            for (var u = 0, nMinus1 = this.n - 1; u < nMinus1; ++u) {\r\n                for (var v = u + 1, n = this.n; v < n; ++v) {\r\n                    var l = 0;\r\n                    for (var i = 0; i < this.k; ++i) {\r\n                        var dx = this.x[i][u] - this.x[i][v];\r\n                        l += dx * dx;\r\n                    }\r\n                    l = Math.sqrt(l);\r\n                    var d = this.D[u][v];\r\n                    if (!isFinite(d)) continue;\r\n                    var rl = d - l;\r\n                    var d2 = d * d;\r\n                    stress += rl * rl / d2;\r\n                }\r\n            }\r\n            return stress;\r\n        }\r\n    }\r\n\r\n    // Linear congruential pseudo random number generator\r\n    export class PseudoRandom {\r\n        private a: number = 214013;\r\n        private c: number = 2531011;\r\n        private m: number = 2147483648;\r\n        private range: number = 32767;\r\n\r\n        constructor(public seed: number = 1) { }\r\n\r\n        // random real between 0 and 1\r\n        getNext(): number {\r\n            this.seed = (this.seed * this.a + this.c) % this.m;\r\n            return (this.seed >> 16) / this.range;\r\n        }\r\n\r\n        // random real between min and max\r\n        getNextBetween(min: number, max: number) {\r\n            return min + this.getNext() * (max - min);\r\n        }\r\n    }\r\n","    export class PositionStats {\r\n        AB: number = 0;\r\n        AD: number = 0;\r\n        A2: number = 0;\r\n\r\n        constructor(public scale: number) {}\r\n\r\n        addVariable(v: Variable): void {\r\n            var ai = this.scale / v.scale;\r\n            var bi = v.offset / v.scale;\r\n            var wi = v.weight;\r\n            this.AB += wi * ai * bi;\r\n            this.AD += wi * ai * v.desiredPosition;\r\n            this.A2 += wi * ai * ai;\r\n        }\r\n\r\n        getPosn(): number {\r\n            return (this.AD - this.AB) / this.A2;\r\n        }\r\n    }\r\n\r\n    export class Constraint {\r\n        lm: number;\r\n        active: boolean = false;\r\n        unsatisfiable: boolean = false;\r\n\r\n        constructor(public left: Variable, public right: Variable, public gap: number, public equality: boolean = false) {\r\n            this.left = left;\r\n            this.right = right;\r\n            this.gap = gap;\r\n            this.equality = equality;\r\n        }\r\n\r\n        slack(): number {\r\n            return this.unsatisfiable ? Number.MAX_VALUE\r\n                : this.right.scale * this.right.position() - this.gap\r\n                - this.left.scale * this.left.position();\r\n        }\r\n    }\r\n\r\n    export class Variable {\r\n        offset: number = 0;\r\n        block: Block;\r\n        cIn: Constraint[];\r\n        cOut: Constraint[];\r\n\r\n        constructor(public desiredPosition: number, public weight: number = 1, public scale: number = 1) {}\r\n\r\n        dfdv(): number {\r\n            return 2.0 * this.weight * (this.position() - this.desiredPosition);\r\n        }\r\n\r\n        position(): number {\r\n            return (this.block.ps.scale * this.block.posn + this.offset) / this.scale;\r\n        }\r\n\r\n        // visit neighbours by active constraints within the same block\r\n        visitNeighbours(prev: Variable, f: (c: Constraint, next: Variable) => void ): void {\r\n            var ff = (c, next) => c.active && prev !== next && f(c, next);\r\n            this.cOut.forEach(c=> ff(c, c.right));\r\n            this.cIn.forEach(c=> ff(c, c.left));\r\n        }\r\n    }\r\n\r\n    export class Block {\r\n        vars: Variable[] = [];\r\n        posn: number;\r\n        ps: PositionStats;\r\n        blockInd: number;\r\n\r\n        constructor(v: Variable) {\r\n            v.offset = 0;\r\n            this.ps = new PositionStats(v.scale);\r\n            this.addVariable(v);\r\n        }\r\n\r\n        private addVariable(v: Variable): void {\r\n            v.block = this;\r\n            this.vars.push(v);\r\n            this.ps.addVariable(v);\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        // move the block where it needs to be to minimize cost\r\n        updateWeightedPosition(): void {\r\n            this.ps.AB = this.ps.AD = this.ps.A2 = 0;\r\n            for (var i = 0, n = this.vars.length; i < n; ++i)\r\n                this.ps.addVariable(this.vars[i]);\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        private compute_lm(v: Variable, u: Variable, postAction: (c: Constraint)=>void): number {\r\n            var dfdv = v.dfdv();\r\n            v.visitNeighbours(u, (c, next) => {\r\n                var _dfdv = this.compute_lm(next, v, postAction);\r\n                if (next === c.right) {\r\n                    dfdv += _dfdv * c.left.scale;\r\n                    c.lm = _dfdv;\r\n                } else {\r\n                    dfdv += _dfdv * c.right.scale;\r\n                    c.lm = -_dfdv;\r\n                }\r\n                postAction(c);\r\n            });\r\n            return dfdv / v.scale;\r\n        }\r\n\r\n        private populateSplitBlock(v: Variable, prev: Variable): void {\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                next.offset = v.offset + (next === c.right ? c.gap : -c.gap);\r\n                this.addVariable(next);\r\n                this.populateSplitBlock(next, v);\r\n            });\r\n        }\r\n\r\n        // traverse the active constraint tree applying visit to each active constraint\r\n        traverse(visit: (c: Constraint) => any, acc: any[], v: Variable = this.vars[0], prev: Variable=null) {\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                acc.push(visit(c));\r\n                this.traverse(visit, acc, next, v);\r\n            });\r\n        }\r\n\r\n        // calculate lagrangian multipliers on constraints and\r\n        // find the active constraint in this block with the smallest lagrangian.\r\n        // if the lagrangian is negative, then the constraint is a split candidate.\r\n        findMinLM(): Constraint {\r\n            var m: Constraint = null;\r\n            this.compute_lm(this.vars[0], null, c=> {\r\n                if (!c.equality && (m === null || c.lm < m.lm)) m = c;\r\n            });\r\n            return m;\r\n        }\r\n\r\n        private findMinLMBetween(lv: Variable, rv: Variable): Constraint {\r\n            this.compute_lm(lv, null, () => {});\r\n            var m = null;\r\n            this.findPath(lv, null, rv, (c, next)=> {\r\n                if (!c.equality && c.right === next && (m === null || c.lm < m.lm)) m = c;\r\n            });\r\n            return m;\r\n        }\r\n\r\n        private findPath(v: Variable, prev: Variable, to: Variable, visit: (c: Constraint, next:Variable)=>void): boolean {\r\n            var endFound = false;\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                if (!endFound && (next === to || this.findPath(next, v, to, visit)))\r\n                {\r\n                    endFound = true;\r\n                    visit(c, next);\r\n                }\r\n            });\r\n            return endFound;\r\n        }\r\n\r\n        // Search active constraint tree from u to see if there is a directed path to v.\r\n        // Returns true if path is found.\r\n        isActiveDirectedPathBetween(u: Variable, v: Variable) : boolean {\r\n            if (u === v) return true;\r\n            var i = u.cOut.length;\r\n            while(i--) {\r\n                var c = u.cOut[i];\r\n                if (c.active && this.isActiveDirectedPathBetween(c.right, v))\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // split the block into two by deactivating the specified constraint\r\n        static split(c: Constraint): Block[]{\r\n/* DEBUG\r\n            console.log(\"split on \" + c);\r\n            console.assert(c.active, \"attempt to split on inactive constraint\");\r\nDEBUG */\r\n            c.active = false;\r\n            return [Block.createSplitBlock(c.left), Block.createSplitBlock(c.right)];\r\n        }\r\n\r\n        private static createSplitBlock(startVar: Variable): Block {\r\n            var b = new Block(startVar);\r\n            b.populateSplitBlock(startVar, null);\r\n            return b;\r\n        }\r\n\r\n        // find a split point somewhere between the specified variables\r\n        splitBetween(vl: Variable, vr: Variable): { constraint: Constraint; lb: Block; rb: Block } {\r\n/* DEBUG\r\n            console.assert(vl.block === this);\r\n            console.assert(vr.block === this);\r\nDEBUG */\r\n            var c = this.findMinLMBetween(vl, vr);\r\n            if (c !== null) {\r\n                var bs = Block.split(c);\r\n                return { constraint: c, lb: bs[0], rb: bs[1] };\r\n            }\r\n            // couldn't find a split point - for example the active path is all equality constraints\r\n            return null;\r\n        }\r\n\r\n        mergeAcross(b: Block, c: Constraint, dist: number): void {\r\n            c.active = true;\r\n            for (var i = 0, n = b.vars.length; i < n; ++i) {\r\n                var v = b.vars[i];\r\n                v.offset += dist;\r\n                this.addVariable(v);\r\n            }\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        cost(): number {\r\n            var sum = 0, i = this.vars.length;\r\n            while (i--) {\r\n                var v = this.vars[i],\r\n                    d = v.position() - v.desiredPosition;\r\n                sum += d * d * v.weight;\r\n            }\r\n            return sum;\r\n        }\r\n\r\n/* DEBUG\r\n        toString(): string {\r\n            var cs = [];\r\n            this.traverse(c=> c.toString() + \"\\n\", cs)\r\n            return \"b\"+this.blockInd + \"@\" + this.posn + \": vars=\" + this.vars.map(v=> v.toString()+\":\"+v.offset) + \";\\n cons=\\n\" + cs;\r\n        }\r\nDEBUG */\r\n    }\r\n\r\n    export class Blocks {\r\n        private list: Block[];\r\n\r\n        constructor(public vs: Variable[]) {\r\n            var n = vs.length;\r\n            this.list = new Array(n);\r\n            while (n--) {\r\n                var b = new Block(vs[n]);\r\n                this.list[n] = b;\r\n                b.blockInd = n;\r\n            }\r\n        }\r\n\r\n        cost(): number {\r\n            var sum = 0, i = this.list.length;\r\n            while (i--) sum += this.list[i].cost();\r\n            return sum;\r\n        }\r\n\r\n        insert(b: Block) {\r\n/* DEBUG\r\n            console.assert(!this.contains(b), \"blocks error: tried to reinsert block \" + b.blockInd)\r\nDEBUG */\r\n            b.blockInd = this.list.length;\r\n            this.list.push(b);\r\n/* DEBUG\r\n            console.log(\"insert block: \" + b.blockInd);\r\n            this.contains(b);\r\nDEBUG */\r\n        }\r\n\r\n        remove(b: Block) {\r\n/* DEBUG\r\n            console.log(\"remove block: \" + b.blockInd);\r\n            console.assert(this.contains(b));\r\nDEBUG */\r\n            var last = this.list.length - 1;\r\n            var swapBlock = this.list[last];\r\n            this.list.length = last;\r\n            if (b !== swapBlock) {\r\n                this.list[b.blockInd] = swapBlock;\r\n                swapBlock.blockInd = b.blockInd;\r\n/* DEBUG\r\n                console.assert(this.contains(swapBlock));\r\nDEBUG */\r\n            }\r\n        }\r\n\r\n        // merge the blocks on either side of the specified constraint, by copying the smaller block into the larger\r\n        // and deleting the smaller.\r\n        merge(c: Constraint): void {\r\n            var l = c.left.block, r = c.right.block;\r\n/* DEBUG\r\n            console.assert(l!==r, \"attempt to merge within the same block\");\r\nDEBUG */\r\n            var dist = c.right.offset - c.left.offset - c.gap;\r\n            if (l.vars.length < r.vars.length) {\r\n                r.mergeAcross(l, c, dist);\r\n                this.remove(l);\r\n            } else {\r\n                l.mergeAcross(r, c, -dist);\r\n                this.remove(r);\r\n            }\r\n/* DEBUG\r\n            console.assert(Math.abs(c.slack()) < 1e-6, \"Error: Constraint should be at equality after merge!\");\r\n            console.log(\"merged on \" + c);\r\nDEBUG */\r\n        }\r\n\r\n        forEach(f: (b: Block, i: number) => void ) {\r\n            this.list.forEach(f);\r\n        }\r\n\r\n        // useful, for example, after variable desired positions change.\r\n        updateBlockPositions(): void {\r\n            this.list.forEach(b=> b.updateWeightedPosition());\r\n        }\r\n\r\n        // split each block across its constraint with the minimum lagrangian\r\n        split(inactive: Constraint[]): void {\r\n            this.updateBlockPositions();\r\n            this.list.forEach(b=> {\r\n                var v = b.findMinLM();\r\n                if (v !== null && v.lm < Solver.LAGRANGIAN_TOLERANCE) {\r\n                    b = v.left.block;\r\n                    Block.split(v).forEach(nb=>this.insert(nb));\r\n                    this.remove(b);\r\n                    inactive.push(v);\r\n/* DEBUG\r\n                    console.assert(this.contains(v.left.block));\r\n                    console.assert(this.contains(v.right.block));\r\nDEBUG */\r\n                }\r\n            });\r\n        }\r\n\r\n/* DEBUG\r\n        // checks b is in the block, and does a sanity check over list index integrity\r\n        contains(b: Block): boolean {\r\n            var result = false;\r\n            this.list.forEach((bb, i) => {\r\n                if (bb.blockInd !== i) {\r\n                    console.error(\"blocks error, blockInd \" + b.blockInd + \" found at \" + i);\r\n                    return false;\r\n                }\r\n                result = result || b === bb;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        toString(): string {\r\n            return this.list.toString();\r\n        }\r\nDEBUG */\r\n    }\r\n\r\n    export class Solver {\r\n        bs: Blocks;\r\n        inactive: Constraint[];\r\n\r\n        static LAGRANGIAN_TOLERANCE = -1e-4;\r\n        static ZERO_UPPERBOUND = -1e-10;\r\n\r\n        constructor(public vs: Variable[], public cs: Constraint[]) {\r\n            this.vs = vs;\r\n            vs.forEach(v => {\r\n                v.cIn = [], v.cOut = [];\r\n/* DEBUG\r\n                v.toString = () => \"v\" + vs.indexOf(v);\r\nDEBUG */\r\n            });\r\n            this.cs = cs;\r\n            cs.forEach(c => {\r\n                c.left.cOut.push(c);\r\n                c.right.cIn.push(c);\r\n/* DEBUG\r\n                c.toString = () => c.left + \"+\" + c.gap + \"<=\" + c.right + \" slack=\" + c.slack() + \" active=\" + c.active;\r\nDEBUG */\r\n            });\r\n            this.inactive = cs.map(c=> { c.active = false; return c; });\r\n            this.bs = null;\r\n        }\r\n\r\n        cost(): number {\r\n            return this.bs.cost();\r\n        }\r\n\r\n        // set starting positions without changing desired positions.\r\n        // Note: it throws away any previous block structure.\r\n        setStartingPositions(ps: number[]): void {\r\n            this.inactive = this.cs.map(c=> { c.active = false; return c; });\r\n            this.bs = new Blocks(this.vs);\r\n            this.bs.forEach((b, i) => b.posn = ps[i]);\r\n        }\r\n\r\n        setDesiredPositions(ps: number[]): void {\r\n            this.vs.forEach((v, i) => v.desiredPosition = ps[i]);\r\n        }\r\n\r\n/* DEBUG\r\n        private getId(v: Variable): number {\r\n            return this.vs.indexOf(v);\r\n        }\r\n\r\n        // sanity check of the index integrity of the inactive list\r\n        checkInactive(): void {\r\n            var inactiveCount = 0;\r\n            this.cs.forEach(c=> {\r\n                var i = this.inactive.indexOf(c);\r\n                console.assert(!c.active && i >= 0 || c.active && i < 0, \"constraint should be in the inactive list if it is not active: \" + c);\r\n                if (i >= 0) {\r\n                    inactiveCount++;\r\n                } else {\r\n                    console.assert(c.active, \"inactive constraint not found in inactive list: \" + c);\r\n                }\r\n            });\r\n            console.assert(inactiveCount === this.inactive.length, inactiveCount + \" inactive constraints found, \" + this.inactive.length + \"in inactive list\");\r\n        }\r\n        // after every call to satisfy the following should check should pass\r\n        checkSatisfied(): void {\r\n            this.cs.forEach(c=>console.assert(c.slack() >= vpsc.Solver.ZERO_UPPERBOUND, \"Error: Unsatisfied constraint! \"+c));\r\n        }\r\nDEBUG */\r\n\r\n        private mostViolated(): Constraint {\r\n            var minSlack = Number.MAX_VALUE,\r\n                v: Constraint = null,\r\n                l = this.inactive,\r\n                n = l.length,\r\n                deletePoint = n;\r\n            for (var i = 0; i < n; ++i) {\r\n                var c = l[i];\r\n                if (c.unsatisfiable) continue;\r\n                var slack = c.slack();\r\n                if (c.equality || slack < minSlack) {\r\n                    minSlack = slack;\r\n                    v = c;\r\n                    deletePoint = i;\r\n                    if (c.equality) break;\r\n                }\r\n            }\r\n            if (deletePoint !== n &&\r\n                (minSlack < Solver.ZERO_UPPERBOUND && !v.active || v.equality))\r\n            {\r\n                l[deletePoint] = l[n - 1];\r\n                l.length = n - 1;\r\n            }\r\n            return v;\r\n        }\r\n\r\n        // satisfy constraints by building block structure over violated constraints\r\n        // and moving the blocks to their desired positions\r\n        satisfy(): void {\r\n            if (this.bs == null) {\r\n                this.bs = new Blocks(this.vs);\r\n            }\r\n/* DEBUG\r\n            console.log(\"satisfy: \" + this.bs);\r\nDEBUG */\r\n            this.bs.split(this.inactive);\r\n            var v: Constraint = null;\r\n            while ((v = this.mostViolated()) && (v.equality || v.slack() < Solver.ZERO_UPPERBOUND && !v.active)) {\r\n                var lb = v.left.block, rb = v.right.block;\r\n/* DEBUG\r\n                console.log(\"most violated is: \" + v);\r\n                this.bs.contains(lb);\r\n                this.bs.contains(rb);\r\nDEBUG */\r\n                if (lb !== rb) {\r\n                    this.bs.merge(v);\r\n                } else {\r\n                    if (lb.isActiveDirectedPathBetween(v.right, v.left)) {\r\n                        // cycle found!\r\n                        v.unsatisfiable = true;\r\n                        continue;\r\n                    }\r\n                    // constraint is within block, need to split first\r\n                    var split = lb.splitBetween(v.left, v.right);\r\n                    if (split !== null) {\r\n                        this.bs.insert(split.lb);\r\n                        this.bs.insert(split.rb);\r\n                        this.bs.remove(lb);\r\n                        this.inactive.push(split.constraint);\r\n                    } else {\r\n/* DEBUG\r\n                        console.log(\"unsatisfiable constraint found\");\r\nDEBUG */\r\n                        v.unsatisfiable = true;\r\n                        continue;\r\n                    }\r\n                    if (v.slack() >= 0) {\r\n/* DEBUG\r\n                        console.log(\"violated constraint indirectly satisfied: \" + v);\r\nDEBUG */\r\n                        // v was satisfied by the above split!\r\n                        this.inactive.push(v);\r\n                    } else {\r\n/* DEBUG\r\n                        console.log(\"merge after split:\");\r\nDEBUG */\r\n                        this.bs.merge(v);\r\n                    }\r\n                }\r\n/* DEBUG\r\n                this.bs.contains(v.left.block);\r\n                this.bs.contains(v.right.block);\r\n                this.checkInactive();\r\nDEBUG */\r\n            }\r\n/* DEBUG\r\n            this.checkSatisfied();\r\nDEBUG */\r\n        }\r\n\r\n        // repeatedly build and split block structure until we converge to an optimal solution\r\n        solve(): number {\r\n            this.satisfy();\r\n            var lastcost = Number.MAX_VALUE, cost = this.bs.cost();\r\n            while (Math.abs(lastcost - cost) > 0.0001) {\r\n                this.satisfy();\r\n                lastcost = cost;\r\n                cost = this.bs.cost();\r\n            }\r\n            return cost;\r\n        }\r\n    }\r\n    /**\r\n      * Remove overlap between spans while keeping their centers as close as possible to the specified desiredCenters.\r\n      * Lower and upper bounds will be respected if the spans physically fit between them\r\n      * (otherwise they'll be moved and their new position returned).\r\n      * If no upper/lower bound is specified then the bounds of the moved spans will be returned.\r\n      * returns a new center for each span.\r\n      */\r\n    export function removeOverlapInOneDimension(spans: { size: number, desiredCenter: number }[], lowerBound?: number, upperBound?: number)\r\n        : { newCenters: number[], lowerBound: number, upperBound: number }\r\n    {\r\n        const vs: Variable[] = spans.map(s => new Variable(s.desiredCenter));\r\n        const cs: Constraint[] = [];\r\n        const n = spans.length;\r\n        for (var i = 0; i < n - 1; i++) {\r\n            const left = spans[i], right = spans[i + 1];\r\n            cs.push(new Constraint(vs[i], vs[i + 1], (left.size + right.size) / 2));\r\n        }\r\n        const leftMost = vs[0],\r\n            rightMost = vs[n - 1],\r\n            leftMostSize = spans[0].size / 2,\r\n            rightMostSize = spans[n - 1].size / 2;\r\n        let vLower: Variable = null, vUpper: Variable = null;\r\n        if (lowerBound) {\r\n            vLower = new Variable(lowerBound, leftMost.weight * 1000);\r\n            vs.push(vLower);\r\n            cs.push(new Constraint(vLower, leftMost, leftMostSize));\r\n        }\r\n        if (upperBound) {\r\n            vUpper = new Variable(upperBound, rightMost.weight * 1000);\r\n            vs.push(vUpper);\r\n            cs.push(new Constraint(rightMost, vUpper, rightMostSize));\r\n        }\r\n        var solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        return {\r\n            newCenters: vs.slice(0, spans.length).map(v => v.position()),\r\n            lowerBound: vLower ? vLower.position() : leftMost.position() - leftMostSize,\r\n            upperBound: vUpper ? vUpper.position() : rightMost.position() + rightMostSize\r\n        };\r\n    }\r\n","    //Based on js_es:\r\n    //\r\n    //https://github.com/vadimg/js_bintrees\r\n    //\r\n    //Copyright (C) 2011 by Vadim Graboys\r\n    //\r\n    //Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    //of this software and associated documentation files (the \"Software\"), to deal\r\n    //in the Software without restriction, including without limitation the rights\r\n    //to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    //copies of the Software, and to permit persons to whom the Software is\r\n    //furnished to do so, subject to the following conditions:\r\n    //\r\n    //The above copyright notice and this permission notice shall be included in\r\n    //all copies or substantial portions of the Software.\r\n    //\r\n    //THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    //IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    //FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    //AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    //LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    //OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n    //THE SOFTWARE.\r\n    export class TreeBase {\r\n        _root;\r\n        size;\r\n        _comparator;\r\n        // removes all nodes from the tree\r\n        clear() {\r\n            this._root = null;\r\n            this.size = 0;\r\n        };\r\n\r\n        // returns node data if found, null otherwise\r\n        find(data) {\r\n            var res = this._root;\r\n\r\n            while (res !== null) {\r\n                var c = this._comparator(data, res.data);\r\n                if (c === 0) {\r\n                    return res.data;\r\n                }\r\n                else {\r\n                    res = res.get_child(c > 0);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        // returns iterator to node if found, null otherwise\r\n        findIter = function (data) {\r\n            var res = this._root;\r\n            var iter = this.iterator();\r\n\r\n            while (res !== null) {\r\n                var c = this._comparator(data, res.data);\r\n                if (c === 0) {\r\n                    iter._cursor = res;\r\n                    return iter;\r\n                }\r\n                else {\r\n                    iter._ancestors.push(res);\r\n                    res = res.get_child(c > 0);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        // Returns an interator to the tree node immediately before (or at) the element\r\n        lowerBound(data) {\r\n            return this._bound(data, this._comparator);\r\n        };\r\n\r\n        // Returns an interator to the tree node immediately after (or at) the element\r\n        upperBound(data) {\r\n            var cmp = this._comparator;\r\n\r\n            function reverse_cmp(a, b) {\r\n                return cmp(b, a);\r\n            }\r\n\r\n            return this._bound(data, reverse_cmp);\r\n        };\r\n\r\n        // returns null if tree is empty\r\n        min() {\r\n            var res = this._root;\r\n            if (res === null) {\r\n                return null;\r\n            }\r\n\r\n            while (res.left !== null) {\r\n                res = res.left;\r\n            }\r\n\r\n            return res.data;\r\n        };\r\n\r\n        // returns null if tree is empty\r\n        max() {\r\n            var res = this._root;\r\n            if (res === null) {\r\n                return null;\r\n            }\r\n\r\n            while (res.right !== null) {\r\n                res = res.right;\r\n            }\r\n\r\n            return res.data;\r\n        };\r\n\r\n        // returns a null iterator\r\n        // call next() or prev() to point to an element\r\n        iterator(): Iterator {\r\n            return new Iterator(this);\r\n        };\r\n\r\n        // calls cb on each node's data, in order\r\n        each(cb) {\r\n            var it = this.iterator(), data;\r\n            while ((data = it.next()) !== null) {\r\n                cb(data);\r\n            }\r\n        };\r\n\r\n        // calls cb on each node's data, in reverse order\r\n        reach(cb) {\r\n            var it = this.iterator(), data;\r\n            while ((data = it.prev()) !== null) {\r\n                cb(data);\r\n            }\r\n        };\r\n\r\n        // used for lowerBound and upperBound\r\n        _bound(data, cmp) {\r\n            var cur = this._root;\r\n            var iter = this.iterator();\r\n\r\n            while (cur !== null) {\r\n                var c = this._comparator(data, cur.data);\r\n                if (c === 0) {\r\n                    iter._cursor = cur;\r\n                    return iter;\r\n                }\r\n                iter._ancestors.push(cur);\r\n                cur = cur.get_child(c > 0);\r\n            }\r\n\r\n            for (var i = iter._ancestors.length - 1; i >= 0; --i) {\r\n                cur = iter._ancestors[i];\r\n                if (cmp(data, cur.data) > 0) {\r\n                    iter._cursor = cur;\r\n                    iter._ancestors.length = i;\r\n                    return iter;\r\n                }\r\n            }\r\n\r\n            iter._ancestors.length = 0;\r\n            return iter;\r\n        };\r\n    }\r\n    export class Iterator {\r\n        _tree;\r\n        _ancestors;\r\n        _cursor;\r\n        constructor(tree) {\r\n            this._tree = tree;\r\n            this._ancestors = [];\r\n            this._cursor = null;\r\n        }\r\n\r\n        data() {\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        // if null-iterator, returns first node\r\n        // otherwise, returns next node\r\n        next() {\r\n            if (this._cursor === null) {\r\n                var root = this._tree._root;\r\n                if (root !== null) {\r\n                    this._minNode(root);\r\n                }\r\n            }\r\n            else {\r\n                if (this._cursor.right === null) {\r\n                    // no greater node in subtree, go up to parent\r\n                    // if coming from a right child, continue up the stack\r\n                    var save;\r\n                    do {\r\n                        save = this._cursor;\r\n                        if (this._ancestors.length) {\r\n                            this._cursor = this._ancestors.pop();\r\n                        }\r\n                        else {\r\n                            this._cursor = null;\r\n                            break;\r\n                        }\r\n                    } while (this._cursor.right === save);\r\n                }\r\n                else {\r\n                    // get the next node from the subtree\r\n                    this._ancestors.push(this._cursor);\r\n                    this._minNode(this._cursor.right);\r\n                }\r\n            }\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        // if null-iterator, returns last node\r\n        // otherwise, returns previous node\r\n        prev() {\r\n            if (this._cursor === null) {\r\n                var root = this._tree._root;\r\n                if (root !== null) {\r\n                    this._maxNode(root);\r\n                }\r\n            }\r\n            else {\r\n                if (this._cursor.left === null) {\r\n                    var save;\r\n                    do {\r\n                        save = this._cursor;\r\n                        if (this._ancestors.length) {\r\n                            this._cursor = this._ancestors.pop();\r\n                        }\r\n                        else {\r\n                            this._cursor = null;\r\n                            break;\r\n                        }\r\n                    } while (this._cursor.left === save);\r\n                }\r\n                else {\r\n                    this._ancestors.push(this._cursor);\r\n                    this._maxNode(this._cursor.left);\r\n                }\r\n            }\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        _minNode(start) {\r\n            while (start.left !== null) {\r\n                this._ancestors.push(start);\r\n                start = start.left;\r\n            }\r\n            this._cursor = start;\r\n        };\r\n\r\n        _maxNode(start) {\r\n            while (start.right !== null) {\r\n                this._ancestors.push(start);\r\n                start = start.right;\r\n            }\r\n            this._cursor = start;\r\n        };\r\n    }\r\n\r\n    class Node {\r\n        data;\r\n        left;\r\n        right;\r\n        red;\r\n        constructor(data) {\r\n            this.data = data;\r\n            this.left = null;\r\n            this.right = null;\r\n            this.red = true;\r\n        }\r\n\r\n        get_child(dir) {\r\n            return dir ? this.right : this.left;\r\n        };\r\n\r\n        set_child(dir, val) {\r\n            if (dir) {\r\n                this.right = val;\r\n            }\r\n            else {\r\n                this.left = val;\r\n            }\r\n        };\r\n    }\r\n\r\n    export class RBTree<T> extends TreeBase {\r\n\r\n        _root;\r\n        _comparator;\r\n        size;\r\n        constructor(comparator: (a: T, b: T) => number) {\r\n            super();\r\n            this._root = null;\r\n            this._comparator = comparator;\r\n            this.size = 0;\r\n        }\r\n\r\n        // returns true if inserted, false if duplicate\r\n        insert(data) {\r\n            var ret = false;\r\n\r\n            if (this._root === null) {\r\n                // empty tree\r\n                this._root = new Node(data);\r\n                ret = true;\r\n                this.size++;\r\n            }\r\n            else {\r\n                var head = new Node(undefined); // fake tree root\r\n\r\n                var dir = false;\r\n                var last = false;\r\n\r\n                // setup\r\n                var gp = null; // grandparent\r\n                var ggp = head; // grand-grand-parent\r\n                var p = null; // parent\r\n                var node = this._root;\r\n                ggp.right = this._root;\r\n\r\n                // search down\r\n                while (true) {\r\n                    if (node === null) {\r\n                        // insert new node at the bottom\r\n                        node = new Node(data);\r\n                        p.set_child(dir, node);\r\n                        ret = true;\r\n                        this.size++;\r\n                    }\r\n                    else if (RBTree.is_red(node.left) && RBTree.is_red(node.right)) {\r\n                        // color flip\r\n                        node.red = true;\r\n                        node.left.red = false;\r\n                        node.right.red = false;\r\n                    }\r\n\r\n                    // fix red violation\r\n                    if (RBTree.is_red(node) && RBTree.is_red(p)) {\r\n                        var dir2 = ggp.right === gp;\r\n\r\n                        if (node === p.get_child(last)) {\r\n                            ggp.set_child(dir2, RBTree.single_rotate(gp, !last));\r\n                        }\r\n                        else {\r\n                            ggp.set_child(dir2, RBTree.double_rotate(gp, !last));\r\n                        }\r\n                    }\r\n\r\n                    var cmp = this._comparator(node.data, data);\r\n\r\n                    // stop if found\r\n                    if (cmp === 0) {\r\n                        break;\r\n                    }\r\n\r\n                    last = dir;\r\n                    dir = cmp < 0;\r\n\r\n                    // update helpers\r\n                    if (gp !== null) {\r\n                        ggp = gp;\r\n                    }\r\n                    gp = p;\r\n                    p = node;\r\n                    node = node.get_child(dir);\r\n                }\r\n\r\n                // update root\r\n                this._root = head.right;\r\n            }\r\n\r\n            // make root black\r\n            this._root.red = false;\r\n\r\n            return ret;\r\n        };\r\n\r\n        // returns true if removed, false if not found\r\n        remove(data) {\r\n            if (this._root === null) {\r\n                return false;\r\n            }\r\n\r\n            var head = new Node(undefined); // fake tree root\r\n            var node = head;\r\n            node.right = this._root;\r\n            var p = null; // parent\r\n            var gp = null; // grand parent\r\n            var found = null; // found item\r\n            var dir = true;\r\n\r\n            while (node.get_child(dir) !== null) {\r\n                var last = dir;\r\n\r\n                // update helpers\r\n                gp = p;\r\n                p = node;\r\n                node = node.get_child(dir);\r\n\r\n                var cmp = this._comparator(data, node.data);\r\n\r\n                dir = cmp > 0;\r\n\r\n                // save found node\r\n                if (cmp === 0) {\r\n                    found = node;\r\n                }\r\n\r\n                // push the red node down\r\n                if (!RBTree.is_red(node) && !RBTree.is_red(node.get_child(dir))) {\r\n                    if (RBTree.is_red(node.get_child(!dir))) {\r\n                        var sr = RBTree.single_rotate(node, dir);\r\n                        p.set_child(last, sr);\r\n                        p = sr;\r\n                    }\r\n                    else if (!RBTree.is_red(node.get_child(!dir))) {\r\n                        var sibling = p.get_child(!last);\r\n                        if (sibling !== null) {\r\n                            if (!RBTree.is_red(sibling.get_child(!last)) && !RBTree.is_red(sibling.get_child(last))) {\r\n                                // color flip\r\n                                p.red = false;\r\n                                sibling.red = true;\r\n                                node.red = true;\r\n                            }\r\n                            else {\r\n                                var dir2 = gp.right === p;\r\n\r\n                                if (RBTree.is_red(sibling.get_child(last))) {\r\n                                    gp.set_child(dir2, RBTree.double_rotate(p, last));\r\n                                }\r\n                                else if (RBTree.is_red(sibling.get_child(!last))) {\r\n                                    gp.set_child(dir2, RBTree.single_rotate(p, last));\r\n                                }\r\n\r\n                                // ensure correct coloring\r\n                                var gpc = gp.get_child(dir2);\r\n                                gpc.red = true;\r\n                                node.red = true;\r\n                                gpc.left.red = false;\r\n                                gpc.right.red = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace and remove if found\r\n            if (found !== null) {\r\n                found.data = node.data;\r\n                p.set_child(p.right === node, node.get_child(node.left === null));\r\n                this.size--;\r\n            }\r\n\r\n            // update root and make it black\r\n            this._root = head.right;\r\n            if (this._root !== null) {\r\n                this._root.red = false;\r\n            }\r\n\r\n            return found !== null;\r\n        };\r\n\r\n        static is_red(node) {\r\n            return node !== null && node.red;\r\n        }\r\n\r\n        static single_rotate(root, dir) {\r\n            var save = root.get_child(!dir);\r\n\r\n            root.set_child(!dir, save.get_child(dir));\r\n            save.set_child(dir, root);\r\n\r\n            root.red = true;\r\n            save.red = false;\r\n\r\n            return save;\r\n        }\r\n\r\n        static double_rotate(root, dir) {\r\n            root.set_child(!dir, RBTree.single_rotate(root.get_child(!dir), !dir));\r\n            return RBTree.single_rotate(root, dir);\r\n        }\r\n    }\r\n","import {Constraint, Variable, Solver} from './vpsc'\r\nimport {RBTree} from './rbtree'\r\nimport {Point} from './geom'\r\n\r\n    export interface Leaf {\r\n        bounds: Rectangle;\r\n        variable: Variable;\r\n    }\r\n\r\n    export interface ProjectionGroup {\r\n        bounds: Rectangle;\r\n        padding: number;\r\n        stiffness: number;\r\n        leaves: Leaf[];\r\n        groups: ProjectionGroup[];\r\n        minVar: Variable;\r\n        maxVar: Variable;\r\n    }\r\n\r\n    export function computeGroupBounds(g: ProjectionGroup): Rectangle {\r\n        g.bounds = typeof g.leaves !== \"undefined\" ?\r\n            g.leaves.reduce((r: Rectangle, c) => c.bounds.union(r), Rectangle.empty()) :\r\n            Rectangle.empty();\r\n        if (typeof g.groups !== \"undefined\")\r\n            g.bounds = <Rectangle>g.groups.reduce((r: Rectangle, c) => computeGroupBounds(c).union(r), g.bounds);\r\n        g.bounds = g.bounds.inflate(g.padding);\r\n        return g.bounds;\r\n    }\r\n\r\n    export class Rectangle {\r\n        constructor(\r\n            public x: number,\r\n            public X: number,\r\n            public y: number,\r\n            public Y: number) { }\r\n\r\n        static empty(): Rectangle { return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY); }\r\n\r\n        cx(): number { return (this.x + this.X) / 2; }\r\n\r\n        cy(): number { return (this.y + this.Y) / 2; }\r\n\r\n        overlapX(r: Rectangle): number {\r\n            var ux = this.cx(), vx = r.cx();\r\n            if (ux <= vx && r.x < this.X) return this.X - r.x;\r\n            if (vx <= ux && this.x < r.X) return r.X - this.x;\r\n            return 0;\r\n        }\r\n\r\n        overlapY(r: Rectangle): number {\r\n            var uy = this.cy(), vy = r.cy();\r\n            if (uy <= vy && r.y < this.Y) return this.Y - r.y;\r\n            if (vy <= uy && this.y < r.Y) return r.Y - this.y;\r\n            return 0;\r\n        }\r\n\r\n        setXCentre(cx: number): void {\r\n            var dx = cx - this.cx();\r\n            this.x += dx;\r\n            this.X += dx;\r\n        }\r\n\r\n        setYCentre(cy: number): void {\r\n            var dy = cy - this.cy();\r\n            this.y += dy;\r\n            this.Y += dy;\r\n        }\r\n\r\n        width(): number {\r\n            return this.X - this.x;\r\n        }\r\n\r\n        height(): number {\r\n            return this.Y - this.y;\r\n        }\r\n\r\n        union(r: Rectangle): Rectangle {\r\n            return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\r\n        }\r\n\r\n        /**\r\n         * return any intersection points between the given line and the sides of this rectangle\r\n         * @method lineIntersection\r\n         * @param x1 number first x coord of line\r\n         * @param y1 number first y coord of line\r\n         * @param x2 number second x coord of line\r\n         * @param y2 number second y coord of line\r\n         * @return any intersection points found\r\n         */\r\n        lineIntersections(x1: number, y1: number, x2: number, y2: number): Array<Point> {\r\n            var sides = [[this.x, this.y, this.X, this.y],\r\n                    [this.X, this.y, this.X, this.Y],\r\n                    [this.X, this.Y, this.x, this.Y],\r\n                [this.x, this.Y, this.x, this.y]];\r\n            var intersections = [];\r\n            for (var i = 0; i < 4; ++i) {\r\n                var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\r\n                if (r !== null) intersections.push({ x: r.x, y: r.y });\r\n            }\r\n            return intersections;\r\n        }\r\n\r\n        /**\r\n         * return any intersection points between a line extending from the centre of this rectangle to the given point,\r\n         *  and the sides of this rectangle\r\n         * @method lineIntersection\r\n         * @param x2 number second x coord of line\r\n         * @param y2 number second y coord of line\r\n         * @return any intersection points found\r\n         */\r\n        rayIntersection(x2: number, y2: number): Point {\r\n            var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\r\n            return ints.length > 0 ? ints[0] : null;\r\n        }\r\n\r\n        vertices(): Point[] {\r\n            return [\r\n                { x: this.x, y: this.y },\r\n                { x: this.X, y: this.y },\r\n                { x: this.X, y: this.Y },\r\n                { x: this.x, y: this.Y }];\r\n        }\r\n\r\n        static lineIntersection(\r\n            x1: number, y1: number,\r\n            x2: number, y2: number,\r\n            x3: number, y3: number,\r\n            x4: number, y4: number): Point {\r\n            var dx12 = x2 - x1, dx34 = x4 - x3,\r\n                dy12 = y2 - y1, dy34 = y4 - y3,\r\n                denominator = dy34 * dx12 - dx34 * dy12;\r\n            if (denominator == 0) return null;\r\n            var dx31 = x1 - x3, dy31 = y1 - y3,\r\n                numa = dx34 * dy31 - dy34 * dx31,\r\n                a = numa / denominator,\r\n                numb = dx12 * dy31 - dy12 * dx31,\r\n                b = numb / denominator;\r\n            if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\r\n                return {\r\n                    x: x1 + a * dx12,\r\n                    y: y1 + a * dy12\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n\r\n        inflate(pad: number): Rectangle {\r\n            return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the endpoints of a line that connects the centre of two rectangles.\r\n     * @param {Rectangle} [source] The source Rectangle.\r\n     * @param {Rectangle} [target] The target Rectangle.\r\n     * @param {number} [ah] The size of the arrow head, a distance to shorten the\r\n     *                      line by.\r\n     * @return An object with three point properties, the intersection with the\r\n     *         source rectangle (sourceIntersection), the intersection with then\r\n     *         target rectangle (targetIntersection), and the point an arrow\r\n     *         head of the specified size would need to start (arrowStart).\r\n     */\r\n    export function makeEdgeBetween(source: Rectangle, target: Rectangle, ah: number)\r\n        : { sourceIntersection: Point; targetIntersection: Point; arrowStart: Point } {\r\n        const si = source.rayIntersection(target.cx(), target.cy()) || { x: source.cx(), y: source.cy() },\r\n            ti = target.rayIntersection(source.cx(), source.cy()) || { x: target.cx(), y: target.cy() },\r\n            dx = ti.x - si.x,\r\n            dy = ti.y - si.y,\r\n            l = Math.sqrt(dx * dx + dy * dy), al = l - ah;\r\n        return {\r\n            sourceIntersection: si,\r\n            targetIntersection: ti,\r\n            arrowStart: { x: si.x + al * dx / l, y: si.y + al * dy / l }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the intersection of a line from the given point to the centre\r\n     * of the target rectangle where it intersects the rectanngle.\r\n     * @param [source] The source point.\r\n     * @param {Rectangle} [target] The target Rectangle.\r\n     * @param {number} [ah] The size of the arrow head, a distance to shorten the\r\n     *                      line by.\r\n     * @return The point an arrow head of the specified size would need to start.\r\n     */\r\n    export function makeEdgeTo(s: { x: number; y: number }, target: Rectangle, ah: number): Point {\r\n        var ti = target.rayIntersection(s.x, s.y);\r\n        if (!ti) ti = { x: target.cx(), y: target.cy() };\r\n        var dx = ti.x - s.x,\r\n            dy = ti.y - s.y,\r\n            l = Math.sqrt(dx * dx + dy * dy);\r\n        return { x: ti.x - ah * dx / l, y: ti.y - ah * dy / l };\r\n    }\r\n\r\n    class Node {\r\n        prev: RBTree<Node>;\r\n        next: RBTree<Node>;\r\n\r\n        constructor(public v: Variable, public r: Rectangle, public pos: number) {\r\n            this.prev = makeRBTree();\r\n            this.next = makeRBTree();\r\n        }\r\n    }\r\n\r\n    class Event {\r\n        constructor(public isOpen: boolean, public v: Node, public pos: number) {}\r\n    }\r\n\r\n    function compareEvents(a: Event, b: Event): number {\r\n        if (a.pos > b.pos) {\r\n            return 1;\r\n        }\r\n        if (a.pos < b.pos) {\r\n            return -1;\r\n        }\r\n        if (a.isOpen) {\r\n            // open must come before close\r\n            return -1;\r\n        }\r\n        if (b.isOpen) {\r\n            // open must come before close\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function makeRBTree(): RBTree<Node> {\r\n        return new RBTree<Node>((a, b) => a.pos - b.pos);\r\n    }\r\n\r\n    interface RectAccessors {\r\n        getCentre: (r: Rectangle) => number;\r\n        getOpen: (r: Rectangle) => number;\r\n        getClose: (r: Rectangle) => number;\r\n        getSize: (r: Rectangle) => number;\r\n        makeRect: (open: number, close: number, center: number, size: number) => Rectangle;\r\n        findNeighbours: (v: Node, scanline: RBTree<Node>) => void;\r\n    }\r\n\r\n    var xRect: RectAccessors = {\r\n        getCentre: r=> r.cx(),\r\n        getOpen: r=> r.y,\r\n        getClose: r=> r.Y,\r\n        getSize: r=> r.width(),\r\n        makeRect: (open, close, center, size) => new Rectangle(center - size / 2, center + size / 2, open, close) ,\r\n        findNeighbours: findXNeighbours\r\n    };\r\n\r\n    var yRect: RectAccessors = {\r\n        getCentre: r=> r.cy(),\r\n        getOpen: r=> r.x,\r\n        getClose: r=> r.X,\r\n        getSize: r=> r.height(),\r\n        makeRect: (open, close, center, size) => new Rectangle(open, close, center - size / 2, center + size / 2),\r\n        findNeighbours: findYNeighbours\r\n    };\r\n\r\n    function generateGroupConstraints(root: ProjectionGroup, f: RectAccessors, minSep: number, isContained: boolean = false): Constraint[]\r\n    {\r\n        var padding = root.padding,\r\n            gn = typeof root.groups !== 'undefined' ? root.groups.length : 0,\r\n            ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0,\r\n            childConstraints: Constraint[] = !gn ? []\r\n            : root.groups.reduce((ccs: Constraint[], g) => ccs.concat(generateGroupConstraints(g, f, minSep, true)), []),\r\n            n = (isContained ? 2 : 0) + ln + gn,\r\n            vs: Variable[] = new Array(n),\r\n            rs: Rectangle[] = new Array(n),\r\n            i = 0,\r\n            add = (r, v) => { rs[i] = r; vs[i++] = v };\r\n        if (isContained) {\r\n            // if this group is contained by another, then we add two dummy vars and rectangles for the borders\r\n            var b: Rectangle = root.bounds,\r\n                c = f.getCentre(b), s = f.getSize(b) / 2,\r\n                open = f.getOpen(b), close = f.getClose(b),\r\n                min = c - s + padding / 2, max = c + s - padding / 2;\r\n            root.minVar.desiredPosition = min;\r\n            add(f.makeRect(open, close, min, padding), root.minVar);\r\n            root.maxVar.desiredPosition = max;\r\n            add(f.makeRect(open, close, max, padding), root.maxVar);\r\n        }\r\n        if (ln) root.leaves.forEach(l => add(l.bounds, l.variable));\r\n        if (gn) root.groups.forEach(g => {\r\n            var b: Rectangle = g.bounds;\r\n            add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\r\n        });\r\n        var cs = generateConstraints(rs, vs, f, minSep);\r\n        if (gn) {\r\n            vs.forEach(v => { v.cOut = [], v.cIn = [] });\r\n            cs.forEach(c => { c.left.cOut.push(c), c.right.cIn.push(c) });\r\n            root.groups.forEach(g => {\r\n                var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\r\n                g.minVar.cIn.forEach(c => c.gap += gapAdjustment);\r\n                g.minVar.cOut.forEach(c => { c.left = g.maxVar; c.gap += gapAdjustment; });\r\n            });\r\n        }\r\n        return childConstraints.concat(cs);\r\n    }\r\n\r\n    function generateConstraints(rs: Rectangle[], vars: Variable[],\r\n        rect: RectAccessors, minSep: number): Constraint[]\r\n    {\r\n        var i, n = rs.length;\r\n        var N = 2 * n;\r\n        console.assert(vars.length >= n);\r\n        var events = new Array<Event>(N);\r\n        for (i = 0; i < n; ++i) {\r\n            var r = rs[i];\r\n            var v = new Node(vars[i], r, rect.getCentre(r));\r\n            events[i] = new Event(true, v, rect.getOpen(r));\r\n            events[i + n] = new Event(false, v, rect.getClose(r));\r\n        }\r\n        events.sort(compareEvents);\r\n        var cs = new Array<Constraint>();\r\n        var scanline = makeRBTree();\r\n        for (i = 0; i < N; ++i) {\r\n            var e = events[i];\r\n            var v = e.v;\r\n            if (e.isOpen) {\r\n                scanline.insert(v);\r\n                rect.findNeighbours(v, scanline);\r\n            } else {\r\n                // close event\r\n                scanline.remove(v);\r\n                var makeConstraint = (l, r) => {\r\n                    var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\r\n                    cs.push(new Constraint(l.v, r.v, sep));\r\n                };\r\n                var visitNeighbours = (forward, reverse, mkcon) => {\r\n                    var u, it = v[forward].iterator();\r\n                    while ((u = it[forward]()) !== null) {\r\n                        mkcon(u, v);\r\n                        u[reverse].remove(v);\r\n                    }\r\n                };\r\n                visitNeighbours(\"prev\", \"next\", (u, v) => makeConstraint(u, v));\r\n                visitNeighbours(\"next\", \"prev\", (u, v) => makeConstraint(v, u));\r\n            }\r\n        }\r\n        console.assert(scanline.size === 0);\r\n        return cs;\r\n    }\r\n\r\n    function findXNeighbours(v: Node, scanline: RBTree<Node>): void {\r\n        var f = (forward, reverse) => {\r\n            var it = scanline.findIter(v);\r\n            var u;\r\n            while ((u = it[forward]()) !== null) {\r\n                var uovervX = u.r.overlapX(v.r);\r\n                if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\r\n                    v[forward].insert(u);\r\n                    u[reverse].insert(v);\r\n                }\r\n                if (uovervX <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        f(\"next\", \"prev\");\r\n        f(\"prev\", \"next\");\r\n    }\r\n\r\n    function findYNeighbours(v: Node, scanline: RBTree<Node>): void {\r\n        var f = (forward, reverse) => {\r\n            var u = scanline.findIter(v)[forward]();\r\n            if (u !== null && u.r.overlapX(v.r) > 0) {\r\n                v[forward].insert(u);\r\n                u[reverse].insert(v);\r\n            }\r\n        }\r\n        f(\"next\", \"prev\");\r\n        f(\"prev\", \"next\");\r\n    }\r\n\r\n    export function generateXConstraints(rs: Rectangle[], vars: Variable[]): Constraint[] {\r\n        return generateConstraints(rs, vars, xRect, 1e-6);\r\n    }\r\n\r\n    export function generateYConstraints(rs: Rectangle[], vars: Variable[]): Constraint[] {\r\n        return generateConstraints(rs, vars, yRect, 1e-6);\r\n    }\r\n\r\n    export function generateXGroupConstraints(root: ProjectionGroup): Constraint[] {\r\n        return generateGroupConstraints(root, xRect, 1e-6);\r\n    }\r\n\r\n    export function generateYGroupConstraints(root: ProjectionGroup): Constraint[] {\r\n        return generateGroupConstraints(root, yRect, 1e-6);\r\n    }\r\n\r\n    export function removeOverlaps(rs: Rectangle[]): void {\r\n        var vs = rs.map(r => new Variable(r.cx()));\r\n        var cs = generateXConstraints(rs, vs);\r\n        var solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach((v, i) => rs[i].setXCentre(v.position()));\r\n        vs = rs.map(r=> new Variable(r.cy()));\r\n        cs = generateYConstraints(rs, vs);\r\n        solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach((v, i) => rs[i].setYCentre(v.position()));\r\n    }\r\n\r\n    export interface GraphNode extends Leaf {\r\n        fixed: boolean;\r\n        fixedWeight?: number;\r\n        width: number;\r\n        height: number;\r\n        x: number;\r\n        y: number;\r\n        px: number;\r\n        py: number;\r\n    }\r\n\r\n    export class IndexedVariable extends Variable {\r\n        constructor(public index: number, w: number) {\r\n            super(0, w);\r\n        }\r\n    }\r\n\r\n    export class Projection {\r\n        private xConstraints: Constraint[];\r\n        private yConstraints: Constraint[];\r\n        private variables: Variable[];\r\n\r\n        constructor(private nodes: GraphNode[],\r\n            private groups: ProjectionGroup[],\r\n            private rootGroup: ProjectionGroup = null,\r\n            constraints: any[]= null,\r\n            private avoidOverlaps: boolean = false)\r\n        {\r\n            this.variables = nodes.map((v, i) => {\r\n                return v.variable = new IndexedVariable(i, 1);\r\n            });\r\n\r\n            if (constraints) this.createConstraints(constraints);\r\n\r\n            if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\r\n                nodes.forEach(v => {\r\n\t\t\t\t\tif (!v.width || !v.height)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//If undefined, default to nothing\r\n\t\t\t\t\t\tv.bounds = new Rectangle(v.x, v.x, v.y, v.y);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n                    var w2 = v.width / 2, h2 = v.height / 2;\r\n                    v.bounds = new Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\r\n                });\r\n                computeGroupBounds(rootGroup);\r\n                var i = nodes.length;\r\n                groups.forEach(g => {\r\n                    this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                    this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        private createSeparation(c: any) : Constraint {\r\n            return new Constraint(\r\n                this.nodes[c.left].variable,\r\n                this.nodes[c.right].variable,\r\n                c.gap,\r\n                typeof c.equality !== \"undefined\" ? c.equality : false);\r\n        }\r\n\r\n        // simple satisfaction of alignment constraints to ensure initial feasibility\r\n        private makeFeasible(c: any) {\r\n            if (!this.avoidOverlaps) return;\r\n            // sort nodes in constraint by position (along \"guideline\")\r\n            var axis = 'x', dim = 'width';\r\n            if (c.axis === 'x') axis = 'y', dim = 'height';\r\n            var vs: GraphNode[] = c.offsets.map(o => this.nodes[o.node]).sort((a, b) => a[axis] - b[axis]);\r\n            var p: GraphNode = null;\r\n            vs.forEach(v => {\r\n                // if two nodes overlap then shove the second one along\r\n                if (p) {\r\n                    let nextPos = p[axis] + p[dim];\r\n                    if (nextPos > v[axis]) {\r\n                        v[axis] = nextPos;\r\n                    }\r\n                }\r\n                p = v;\r\n            });\r\n        }\r\n\r\n        private createAlignment(c: any) {\r\n            var u = this.nodes[c.offsets[0].node].variable;\r\n            this.makeFeasible(c);\r\n            var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\r\n            c.offsets.slice(1).forEach(o => {\r\n                var v = this.nodes[o.node].variable;\r\n                cs.push(new Constraint(u, v, o.offset, true));\r\n            });\r\n        }\r\n\r\n        private createConstraints(constraints: any[]) {\r\n            var isSep = c => typeof c.type === 'undefined' || c.type === 'separation';\r\n            this.xConstraints = constraints\r\n                .filter(c => c.axis === \"x\" && isSep(c))\r\n                .map(c => this.createSeparation(c));\r\n            this.yConstraints = constraints\r\n                .filter(c => c.axis === \"y\" && isSep(c))\r\n                .map(c => this.createSeparation(c));\r\n            constraints\r\n                .filter(c => c.type === 'alignment')\r\n                .forEach(c => this.createAlignment(c));\r\n        }\r\n\r\n        private setupVariablesAndBounds(x0: number[], y0: number[], desired: number[], getDesired: (v: GraphNode) => number) {\r\n            this.nodes.forEach((v, i) => {\r\n                if (v.fixed) {\r\n                    v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\r\n                    desired[i] = getDesired(v);\r\n                } else {\r\n                    v.variable.weight = 1;\r\n                }\r\n                var w = (v.width || 0) / 2, h = (v.height || 0) / 2;\r\n                var ix = x0[i], iy = y0[i];\r\n                v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\r\n            });\r\n        }\r\n\r\n        xProject(x0: number[], y0: number[], x: number[]) {\r\n            if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints)) return;\r\n            this.project(x0, y0, x0, x, v=> v.px, this.xConstraints, generateXGroupConstraints,\r\n                v => v.bounds.setXCentre(x[(<IndexedVariable>v.variable).index] = v.variable.position()),\r\n                g => {\r\n                    var xmin = x[(<IndexedVariable>g.minVar).index] = g.minVar.position();\r\n                    var xmax = x[(<IndexedVariable>g.maxVar).index] = g.maxVar.position();\r\n                    var p2 = g.padding / 2;\r\n                    g.bounds.x = xmin - p2;\r\n                    g.bounds.X = xmax + p2;\r\n                });\r\n        }\r\n\r\n        yProject(x0: number[], y0: number[], y: number[]) {\r\n            if (!this.rootGroup && !this.yConstraints) return;\r\n            this.project(x0, y0, y0, y, v=> v.py, this.yConstraints, generateYGroupConstraints,\r\n                v => v.bounds.setYCentre(y[(<IndexedVariable>v.variable).index] = v.variable.position()),\r\n                g => {\r\n                    var ymin = y[(<IndexedVariable>g.minVar).index] = g.minVar.position();\r\n                    var ymax = y[(<IndexedVariable>g.maxVar).index] = g.maxVar.position();\r\n                    var p2 = g.padding / 2;\r\n                    g.bounds.y = ymin - p2;;\r\n                    g.bounds.Y = ymax + p2;\r\n                });\r\n        }\r\n\r\n        projectFunctions(): { (x0: number[], y0: number[], r: number[]): void }[]{\r\n            return [\r\n                (x0, y0, x) => this.xProject(x0, y0, x),\r\n                (x0, y0, y) => this.yProject(x0, y0, y)\r\n            ];\r\n        }\r\n\r\n        private project(x0: number[], y0: number[], start: number[], desired: number[],\r\n            getDesired: (v: GraphNode) => number,\r\n            cs: Constraint[],\r\n            generateConstraints: (g: ProjectionGroup) => Constraint[],\r\n            updateNodeBounds: (v: GraphNode) => any,\r\n            updateGroupBounds: (g: ProjectionGroup) => any)\r\n        {\r\n            this.setupVariablesAndBounds(x0, y0, desired, getDesired);\r\n            if (this.rootGroup && this.avoidOverlaps) {\r\n                computeGroupBounds(this.rootGroup);\r\n                cs = cs.concat(generateConstraints(this.rootGroup));\r\n            }\r\n            this.solve(this.variables, cs, start, desired);\r\n            this.nodes.forEach(updateNodeBounds);\r\n            if (this.rootGroup && this.avoidOverlaps) {\r\n                this.groups.forEach(updateGroupBounds);\r\n                computeGroupBounds(this.rootGroup);\r\n            }\r\n        }\r\n\r\n        private solve(vs: Variable[], cs: Constraint[], starting: number[], desired: number[]) {\r\n            var solver = new Solver(vs, cs);\r\n            solver.setStartingPositions(starting);\r\n            solver.setDesiredPositions(desired);\r\n            solver.solve();\r\n        }\r\n    }\r\n","\r\nexport class PairingHeap<T> {\r\n    private subheaps : PairingHeap<T>[];\r\n    // from: https://gist.github.com/nervoussystem\r\n    //{elem:object, subheaps:[array of heaps]}\r\n    constructor(public elem: T) {\r\n        this.subheaps = [];\r\n    }\r\n\r\n    public toString(selector) : string {\r\n        var str = \"\", needComma = false;\r\n        for (var i = 0; i < this.subheaps.length; ++i) {\r\n            var subheap: PairingHeap<T> = this.subheaps[i];\r\n            if (!subheap.elem) {\r\n                needComma = false;\r\n                continue;\r\n            }\r\n            if (needComma) {\r\n                str = str + \",\";\r\n            }\r\n            str = str + subheap.toString(selector);\r\n            needComma = true;\r\n        }\r\n        if (str !== \"\") {\r\n            str = \"(\" + str + \")\";\r\n        }\r\n        return (this.elem ? selector(this.elem) : \"\") + str;\r\n    }\r\n\r\n    public forEach(f) {\r\n        if (!this.empty()) {\r\n            f(this.elem, this);\r\n            this.subheaps.forEach(s => s.forEach(f));\r\n        }\r\n    }\r\n\r\n    public count(): number {\r\n        return this.empty() ? 0 : 1 + this.subheaps.reduce((n: number, h: PairingHeap<T>) => {\r\n            return n + h.count();\r\n        }, 0);\r\n    }\r\n\r\n    public min() : T {\r\n        return this.elem;\r\n    }\r\n\r\n    public empty() : boolean {\r\n        return this.elem == null;\r\n    }\r\n\r\n    public contains(h: PairingHeap<T>): boolean {\r\n        if (this === h) return true;\r\n        for (var i = 0; i < this.subheaps.length; i++) {\r\n            if (this.subheaps[i].contains(h)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public isHeap(lessThan: (a: T, b: T) => boolean): boolean {\r\n        return this.subheaps.every(h=> lessThan(this.elem, h.elem) && h.isHeap(lessThan));\r\n    }\r\n\r\n    public insert(obj : T, lessThan) : PairingHeap<T> {\r\n        return this.merge(new PairingHeap<T>(obj), lessThan);\r\n    }\r\n\r\n    public merge(heap2: PairingHeap<T>, lessThan): PairingHeap<T> {\r\n        if (this.empty()) return heap2;\r\n        else if (heap2.empty()) return this;\r\n        else if (lessThan(this.elem, heap2.elem)) {\r\n            this.subheaps.push(heap2);\r\n            return this;\r\n        } else {\r\n            heap2.subheaps.push(this);\r\n            return heap2;\r\n        }\r\n    }\r\n\r\n    public removeMin(lessThan: (a: T, b: T) => boolean): PairingHeap<T> {\r\n        if (this.empty()) return null;\r\n        else return this.mergePairs(lessThan);\r\n    }\r\n\r\n    public mergePairs(lessThan: (a: T, b: T) => boolean) : PairingHeap<T> {\r\n        if (this.subheaps.length == 0) return new PairingHeap<T>(null);\r\n        else if (this.subheaps.length == 1) { return this.subheaps[0]; }\r\n        else {\r\n            var firstPair = this.subheaps.pop().merge(this.subheaps.pop(), lessThan);\r\n            var remaining = this.mergePairs(lessThan);\r\n            return firstPair.merge(remaining, lessThan);\r\n        }\r\n    }\r\n    public decreaseKey(subheap: PairingHeap<T>, newValue: T, setHeapNode: (e: T, h: PairingHeap<T>)=>void, lessThan: (a: T, b: T) => boolean): PairingHeap<T> {\r\n        var newHeap = subheap.removeMin(lessThan);\r\n        //reassign subheap values to preserve tree\r\n        subheap.elem = newHeap.elem;\r\n        subheap.subheaps = newHeap.subheaps;\r\n        if (setHeapNode !== null && newHeap.elem !== null) {\r\n            setHeapNode(subheap.elem, subheap);\r\n        }\r\n        var pairingNode = new PairingHeap(newValue);\r\n        if (setHeapNode !== null) {\r\n            setHeapNode(newValue, pairingNode);\r\n        }\r\n        return this.merge(pairingNode, lessThan);\r\n    }\r\n}\r\n\r\n/**\r\n * @class PriorityQueue a min priority queue backed by a pairing heap\r\n */\r\nexport class PriorityQueue<T> {\r\n    private root : PairingHeap<T>;\r\n    constructor(private lessThan: (a: T, b: T) => boolean) { }\r\n    /**\r\n     * @method top\r\n     * @return the top element (the min element as defined by lessThan)\r\n     */\r\n    public top() : T {\r\n        if (this.empty()) { return null; }\r\n        return this.root.elem;\r\n    }\r\n    /**\r\n     * @method push\r\n     * put things on the heap\r\n     */\r\n    public push(...args: T[]): PairingHeap<T> {\r\n        var pairingNode;\r\n        for (var i = 0, arg; arg=args[i]; ++i) {\r\n            pairingNode = new PairingHeap(arg);\r\n            this.root = this.empty() ?\r\n                pairingNode : this.root.merge(pairingNode, this.lessThan);\r\n        }\r\n        return pairingNode;\r\n    }\r\n    /**\r\n     * @method empty\r\n     * @return true if no more elements in queue\r\n     */\r\n    public empty(): boolean {\r\n        return !this.root || !this.root.elem;\r\n    }\r\n    /**\r\n     * @method isHeap check heap condition (for testing)\r\n     * @return true if queue is in valid state\r\n     */\r\n    public isHeap(): boolean {\r\n        return this.root.isHeap(this.lessThan);\r\n    }\r\n    /**\r\n     * @method forEach apply f to each element of the queue\r\n     * @param f function to apply\r\n     */\r\n    public forEach(f) {\r\n        this.root.forEach(f);\r\n    }\r\n    /**\r\n     * @method pop remove and return the min element from the queue\r\n     */\r\n    public pop(): T {\r\n        if (this.empty()) {\r\n            return null;\r\n        }\r\n        var obj = this.root.min();\r\n        this.root = this.root.removeMin(this.lessThan);\r\n        return obj;\r\n    }\r\n    /**\r\n     * @method reduceKey reduce the key value of the specified heap node\r\n     */\r\n    public reduceKey(heapNode: PairingHeap<T>, newKey: T, setHeapNode: (e: T, h: PairingHeap<T>)=>void = null): void {\r\n        this.root = this.root.decreaseKey(heapNode, newKey, setHeapNode, this.lessThan);\r\n    }\r\n    public toString(selector) {\r\n        return this.root.toString(selector);\r\n    }\r\n    /**\r\n     * @method count\r\n     * @return number of elements in queue\r\n     */\r\n    public count() {\r\n        return this.root.count();\r\n    }\r\n}\r\n","import {PairingHeap, PriorityQueue} from './pqueue'\r\n\r\nclass Neighbour {\r\n    constructor(public id: number, public distance: number) { }\r\n}\r\n\r\nclass Node {\r\n    constructor(public id: number) {\r\n        this.neighbours = [];\r\n    }\r\n    neighbours: Neighbour[];\r\n    d: number;\r\n    prev: Node;\r\n    q: PairingHeap<Node>;\r\n}\r\n\r\nclass QueueEntry {\r\n    constructor(public node: Node, public prev: QueueEntry, public d: number) {}\r\n}\r\n\r\n/**\r\n * calculates all-pairs shortest paths or shortest paths from a single node\r\n * @class Calculator\r\n * @constructor\r\n * @param n {number} number of nodes\r\n * @param es {Edge[]} array of edges\r\n */\r\nexport class Calculator<Link> {\r\n    private neighbours: Node[];\r\n\r\n    constructor(public n: number, public es: Link[], getSourceIndex: (l: Link) => number, getTargetIndex: (l: Link) => number, getLength: (l: Link) => number) {\r\n        this.neighbours = new Array(this.n);\r\n        var i = this.n; while (i--) this.neighbours[i] = new Node(i);\r\n\r\n        i = this.es.length; while (i--) {\r\n            var e = this.es[i];\r\n            var u: number = getSourceIndex(e), v: number = getTargetIndex(e);\r\n            var d = getLength(e);\r\n            this.neighbours[u].neighbours.push(new Neighbour(v, d));\r\n            this.neighbours[v].neighbours.push(new Neighbour(u, d));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute shortest paths for graph over n nodes with edges an array of source/target pairs\r\n     * edges may optionally have a length attribute.  1 is the default.\r\n     * Uses Johnson's algorithm.\r\n     *\r\n     * @method DistanceMatrix\r\n     * @return the distance matrix\r\n     */\r\n    DistanceMatrix(): number[][] {\r\n        var D = new Array(this.n);\r\n        for (var i = 0; i < this.n; ++i) {\r\n            D[i] = this.dijkstraNeighbours(i);\r\n        }\r\n        return D;\r\n    }\r\n\r\n    /**\r\n     * get shortest paths from a specified start node\r\n     * @method DistancesFromNode\r\n     * @param start node index\r\n     * @return array of path lengths\r\n     */\r\n    DistancesFromNode(start: number): number[] {\r\n        return this.dijkstraNeighbours(start);\r\n    }\r\n\r\n    PathFromNodeToNode(start: number, end: number): number[] {\r\n        return this.dijkstraNeighbours(start, end);\r\n    }\r\n\r\n    // find shortest path from start to end, with the opportunity at\r\n    // each edge traversal to compute a custom cost based on the\r\n    // previous edge.  For example, to penalise bends.\r\n    PathFromNodeToNodeWithPrevCost(\r\n        start: number,\r\n        end: number,\r\n        prevCost: (u:number,v:number,w:number)=>number): number[]\r\n    {\r\n        var q = new PriorityQueue<QueueEntry>((a, b) => a.d <= b.d),\r\n            u: Node = this.neighbours[start],\r\n            qu: QueueEntry = new QueueEntry(u,null,0),\r\n            visitedFrom = {};\r\n        q.push(qu);\r\n        while(!q.empty()) {\r\n            qu = q.pop();\r\n            u = qu.node;\r\n            if (u.id === end) {\r\n                break;\r\n            }\r\n            var i = u.neighbours.length; while (i--) {\r\n                var neighbour = u.neighbours[i],\r\n                    v = this.neighbours[neighbour.id];\r\n\r\n                // don't double back\r\n                if (qu.prev && v.id === qu.prev.node.id) continue;\r\n\r\n                // don't retraverse an edge if it has already been explored\r\n                // from a lower cost route\r\n                var viduid = v.id + ',' + u.id;\r\n                if(viduid in visitedFrom && visitedFrom[viduid] <= qu.d)\r\n                    continue;\r\n\r\n                var cc = qu.prev ? prevCost(qu.prev.node.id, u.id, v.id) : 0,\r\n                    t = qu.d + neighbour.distance + cc;\r\n\r\n                // store cost of this traversal\r\n                visitedFrom[viduid] = t;\r\n                q.push(new QueueEntry(v, qu, t));\r\n            }\r\n        }\r\n        var path:number[] = [];\r\n        while (qu.prev) {\r\n            qu = qu.prev;\r\n            path.push(qu.node.id);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    private dijkstraNeighbours(start: number, dest: number = -1): number[] {\r\n        var q = new PriorityQueue<Node>((a, b) => a.d <= b.d),\r\n            i = this.neighbours.length,\r\n            d: number[] = new Array(i);\r\n        while (i--) {\r\n            var node: Node = this.neighbours[i];\r\n            node.d = i === start ? 0 : Number.POSITIVE_INFINITY;\r\n            node.q = q.push(node);\r\n        }\r\n        while (!q.empty()) {\r\n            // console.log(q.toString(function (u) { return u.id + \"=\" + (u.d === Number.POSITIVE_INFINITY ? \"\\u221E\" : u.d.toFixed(2) )}));\r\n            var u = q.pop();\r\n            d[u.id] = u.d;\r\n            if (u.id === dest) {\r\n                var path: number[] = [];\r\n                var v = u;\r\n                while (typeof v.prev !== 'undefined') {\r\n                    path.push(v.prev.id);\r\n                    v = v.prev;\r\n                }\r\n                return path;\r\n            }\r\n            i = u.neighbours.length; while (i--) {\r\n                var neighbour = u.neighbours[i];\r\n                var v = this.neighbours[neighbour.id];\r\n                var t = u.d + neighbour.distance;\r\n                if (u.d !== Number.MAX_VALUE && v.d > t) {\r\n                    v.d = t;\r\n                    v.prev = u;\r\n                    q.reduceKey(v.q, v, (e,q)=>e.q = q);\r\n                }\r\n            }\r\n        }\r\n        return d;\r\n    }\r\n}\r\n","import {Rectangle} from './rectangle'\r\n    export class Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\r\n    export class LineSegment {\r\n        constructor(public x1: number, public y1: number, public x2: number, public y2: number) { }\r\n    }\r\n\r\n    export class PolyPoint extends Point {\r\n        polyIndex: number;\r\n    }\r\n\r\n    /** tests if a point is Left|On|Right of an infinite line.\r\n     * @param points P0, P1, and P2\r\n     * @return >0 for P2 left of the line through P0 and P1\r\n     *            =0 for P2 on the line\r\n     *            <0 for P2 right of the line\r\n     */\r\n    export function isLeft(P0: Point, P1: Point, P2: Point): number {\r\n        return (P1.x - P0.x) * (P2.y - P0.y) - (P2.x - P0.x) * (P1.y - P0.y);\r\n    }\r\n\r\n    function above(p: Point, vi: Point, vj: Point): boolean {\r\n        return isLeft(p, vi, vj) > 0;\r\n    }\r\n\r\n    function below(p: Point, vi: Point, vj: Point): boolean {\r\n        return isLeft(p, vi, vj) < 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * returns the convex hull of a set of points using Andrew's monotone chain algorithm\r\n     * see: http://geomalgorithms.com/a10-_hull-1.html#Monotone%20Chain\r\n     * @param S array of points\r\n     * @return the convex hull as an array of points\r\n     */\r\n    export function ConvexHull(S: Point[]): Point[] {\r\n        var P = S.slice(0).sort((a, b) => a.x !== b.x ? b.x - a.x : b.y - a.y);\r\n        var n = S.length, i;\r\n        var minmin = 0;\r\n        var xmin = P[0].x;\r\n        for (i = 1; i < n; ++i) {\r\n            if (P[i].x !== xmin) break;\r\n        }\r\n        var minmax = i - 1;\r\n        var H: Point[] = [];\r\n        H.push(P[minmin]); // push minmin point onto stack\r\n        if (minmax === n - 1) { // degenerate case: all x-coords == xmin\r\n            if (P[minmax].y !== P[minmin].y) // a  nontrivial segment\r\n                H.push(P[minmax]);\r\n        } else {\r\n            // Get the indices of points with max x-coord and min|max y-coord\r\n            var maxmin, maxmax = n - 1;\r\n            var xmax = P[n - 1].x;\r\n            for (i = n - 2; i >= 0; i--)\r\n                if (P[i].x !== xmax) break;\r\n            maxmin = i + 1;\r\n\r\n            // Compute the lower hull on the stack H\r\n            i = minmax;\r\n            while (++i <= maxmin) {\r\n                // the lower line joins P[minmin]  with P[maxmin]\r\n                if (isLeft(P[minmin], P[maxmin], P[i]) >= 0 && i < maxmin)\r\n                    continue; // ignore P[i] above or on the lower line\r\n\r\n                while (H.length > 1) // there are at least 2 points on the stack\r\n                {\r\n                    // test if  P[i] is left of the line at the stack top\r\n                    if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\r\n                        break; // P[i] is a new hull  vertex\r\n                    else\r\n                        H.length -= 1; // pop top point off  stack\r\n                }\r\n                if (i != minmin) H.push(P[i]);\r\n            }\r\n\r\n            // Next, compute the upper hull on the stack H above the bottom hull\r\n            if (maxmax != maxmin) // if  distinct xmax points\r\n                H.push(P[maxmax]); // push maxmax point onto stack\r\n            var bot = H.length; // the bottom point of the upper hull stack\r\n            i = maxmin;\r\n            while (--i >= minmax) {\r\n                // the upper line joins P[maxmax]  with P[minmax]\r\n                if (isLeft(P[maxmax], P[minmax], P[i]) >= 0 && i > minmax)\r\n                    continue; // ignore P[i] below or on the upper line\r\n\r\n                while (H.length > bot) // at least 2 points on the upper stack\r\n                {\r\n                    // test if  P[i] is left of the line at the stack top\r\n                    if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\r\n                        break; // P[i] is a new hull  vertex\r\n                    else\r\n                        H.length -= 1; // pop top point off  stack\r\n                }\r\n                if (i != minmin) H.push(P[i]); // push P[i] onto stack\r\n            }\r\n        }\r\n        return H;\r\n    }\r\n\r\n    // apply f to the points in P in clockwise order around the point p\r\n    export function clockwiseRadialSweep(p: Point, P: Point[], f: (p: Point) => void) {\r\n        P.slice(0).sort(\r\n            (a, b) => Math.atan2(a.y - p.y, a.x - p.x) - Math.atan2(b.y - p.y, b.x - p.x)\r\n            ).forEach(f);\r\n    }\r\n\r\n    function nextPolyPoint(p: PolyPoint, ps: PolyPoint[]): PolyPoint {\r\n        if (p.polyIndex === ps.length - 1) return ps[0];\r\n        return ps[p.polyIndex + 1];\r\n    }\r\n\r\n    function prevPolyPoint(p: PolyPoint, ps: PolyPoint[]): PolyPoint {\r\n        if (p.polyIndex === 0) return ps[ps.length - 1];\r\n        return ps[p.polyIndex - 1];\r\n    }\r\n\r\n    // tangent_PointPolyC(): fast binary search for tangents to a convex polygon\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon\r\n    //    Output: rtan = index of rightmost tangent point V[rtan]\r\n    //            ltan = index of leftmost tangent point V[ltan]\r\n    function tangent_PointPolyC(P: Point, V: Point[]): { rtan: number; ltan: number } {\r\n        // Rtangent_PointPolyC and Ltangent_PointPolyC require polygon to be\r\n        // \"closed\" with the first vertex duplicated at end, so V[n-1] = V[0].\r\n        let Vclosed = V.slice(0);  // Copy V\r\n        Vclosed.push(V[0]);        // Add V[0] at end\r\n\r\n        return { rtan: Rtangent_PointPolyC(P, Vclosed), ltan: Ltangent_PointPolyC(P, Vclosed) };\r\n    }\r\n\r\n\r\n    // Rtangent_PointPolyC(): binary search for convex polygon right tangent\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon with first\r\n    //                vertex duplicated as last, so V[n-1] = V[0]\r\n    //    Return: index \"i\" of rightmost tangent point V[i]\r\n    function Rtangent_PointPolyC(P: Point, V: Point[]): number {\r\n        var n = V.length - 1;\r\n\r\n        // use binary search for large convex polygons\r\n        var a: number, b: number, c: number;            // indices for edge chain endpoints\r\n        var upA: boolean, dnC: boolean;           // test for up direction of edges a and c\r\n\r\n        // rightmost tangent = maximum for the isLeft() ordering\r\n        // test if V[0] is a local maximum\r\n        if (below(P, V[1], V[0]) && !above(P, V[n - 1], V[0]))\r\n            return 0;               // V[0] is the maximum tangent point\r\n\r\n        for (a = 0, b = n; ;) {          // start chain = [0,n] with V[n]=V[0]\r\n            if (b - a === 1)\r\n                if (above(P, V[a], V[b]))\r\n                    return a;\r\n                else\r\n                    return b;\r\n\r\n            c = Math.floor((a + b) / 2);        // midpoint of [a,b], and 0<c<n\r\n            dnC = below(P, V[c + 1], V[c]);\r\n            if (dnC && !above(P, V[c - 1], V[c]))\r\n                return c;          // V[c] is the maximum tangent point\r\n\r\n            // no max yet, so continue with the binary search\r\n            // pick one of the two subchains [a,c] or [c,b]\r\n            upA = above(P, V[a + 1], V[a]);\r\n            if (upA) {                       // edge a points up\r\n                if (dnC)                         // edge c points down\r\n                    b = c;                           // select [a,c]\r\n                else {                           // edge c points up\r\n                    if (above(P, V[a], V[c]))     // V[a] above V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] below V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n            else {                           // edge a points down\r\n                if (!dnC)                        // edge c points up\r\n                    a = c;                           // select [c,b]\r\n                else {                           // edge c points down\r\n                    if (below(P, V[a], V[c]))     // V[a] below V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] above V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Ltangent_PointPolyC(): binary search for convex polygon left tangent\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon with first\r\n    //                vertex duplicated as last, so V[n-1] = V[0]\r\n    //    Return: index \"i\" of leftmost tangent point V[i]\r\n    function Ltangent_PointPolyC(P: Point, V: Point[]): number {\r\n        var n = V.length - 1;\r\n        // use binary search for large convex polygons\r\n        var a: number, b: number, c: number;             // indices for edge chain endpoints\r\n        var dnA: boolean, dnC: boolean;           // test for down direction of edges a and c\r\n\r\n        // leftmost tangent = minimum for the isLeft() ordering\r\n        // test if V[0] is a local minimum\r\n        if (above(P, V[n - 1], V[0]) && !below(P, V[1], V[0]))\r\n            return 0;               // V[0] is the minimum tangent point\r\n\r\n        for (a = 0, b = n; ;) {          // start chain = [0,n] with V[n] = V[0]\r\n            if (b - a === 1)\r\n                if (below(P, V[a], V[b]))\r\n                    return a;\r\n                else\r\n                    return b;\r\n\r\n            c = Math.floor((a + b) / 2);        // midpoint of [a,b], and 0<c<n\r\n            dnC = below(P, V[c + 1], V[c]);\r\n            if (above(P, V[c - 1], V[c]) && !dnC)\r\n                return c;          // V[c] is the minimum tangent point\r\n\r\n            // no min yet, so continue with the binary search\r\n            // pick one of the two subchains [a,c] or [c,b]\r\n            dnA = below(P, V[a + 1], V[a]);\r\n            if (dnA) {                       // edge a points down\r\n                if (!dnC)                        // edge c points up\r\n                    b = c;                           // select [a,c]\r\n                else {                           // edge c points down\r\n                    if (below(P, V[a], V[c]))     // V[a] below V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] above V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n            else {                           // edge a points up\r\n                if (dnC)                         // edge c points down\r\n                    a = c;                           // select [c,b]\r\n                else {                           // edge c points up\r\n                    if (above(P, V[a], V[c]))     // V[a] above V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] below V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // RLtangent_PolyPolyC(): get the RL tangent between two convex polygons\r\n    //    Input:  m = number of vertices in polygon 1\r\n    //            V = array of vertices for convex polygon 1 with V[m]=V[0]\r\n    //            n = number of vertices in polygon 2\r\n    //            W = array of vertices for convex polygon 2 with W[n]=W[0]\r\n    //    Output: *t1 = index of tangent point V[t1] for polygon 1\r\n    //            *t2 = index of tangent point W[t2] for polygon 2\r\n    export function tangent_PolyPolyC(V: Point[], W: Point[], t1: (a: Point, b: Point[]) => number, t2: (a: Point, b: Point[]) => number, cmp1: (a: Point, b: Point, c: Point) => boolean, cmp2: (a: Point, b: Point, c: Point) => boolean): { t1: number; t2: number } {\r\n        var ix1: number, ix2: number;      // search indices for polygons 1 and 2\r\n\r\n        // first get the initial vertex on each polygon\r\n        ix1 = t1(W[0], V);   // right tangent from W[0] to V\r\n        ix2 = t2(V[ix1], W); // left tangent from V[ix1] to W\r\n\r\n        // ping-pong linear search until it stabilizes\r\n        var done = false;                    // flag when done\r\n        while (!done) {\r\n            done = true;                     // assume done until...\r\n            while (true) {\r\n                if (ix1 === V.length - 1) ix1 = 0;\r\n                if (cmp1(W[ix2], V[ix1], V[ix1 + 1])) break;\r\n                ++ix1;                       // get Rtangent from W[ix2] to V\r\n            }\r\n            while (true) {\r\n                if (ix2 === 0) ix2 = W.length - 1;\r\n                if (cmp2(V[ix1], W[ix2], W[ix2 - 1])) break;\r\n                --ix2;                       // get Ltangent from V[ix1] to W\r\n                done = false;                // not done if had to adjust this\r\n            }\r\n        }\r\n        return { t1: ix1, t2: ix2 };\r\n    }\r\n\r\n    export function LRtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        var rl = RLtangent_PolyPolyC(W, V);\r\n        return { t1: rl.t2, t2: rl.t1 };\r\n    }\r\n\r\n    export function RLtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Ltangent_PointPolyC, above, below);\r\n    }\r\n\r\n    export function LLtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Ltangent_PointPolyC, Ltangent_PointPolyC, below, below);\r\n    }\r\n\r\n    export function RRtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Rtangent_PointPolyC, above, above);\r\n    }\r\n\r\n    export class BiTangent {\r\n        constructor(public t1: number, public t2: number) { }\r\n    }\r\n\r\n    export class BiTangents {\r\n        rl: BiTangent;\r\n        lr: BiTangent;\r\n        ll: BiTangent;\r\n        rr: BiTangent;\r\n    }\r\n\r\n    export class TVGPoint extends Point {\r\n        vv: VisibilityVertex;\r\n    }\r\n\r\n    export class VisibilityVertex {\r\n        constructor(\r\n            public id: number,\r\n            public polyid: number,\r\n            public polyvertid: number,\r\n            public p: TVGPoint)\r\n        {\r\n            p.vv = this;\r\n        }\r\n    }\r\n\r\n    export class VisibilityEdge {\r\n        constructor(\r\n            public source: VisibilityVertex,\r\n            public target: VisibilityVertex) { }\r\n        length(): number {\r\n            var dx = this.source.p.x - this.target.p.x;\r\n            var dy = this.source.p.y - this.target.p.y;\r\n            return Math.sqrt(dx * dx + dy * dy);\r\n        }\r\n    }\r\n\r\n    export class TangentVisibilityGraph {\r\n        V: VisibilityVertex[] = [];\r\n        E: VisibilityEdge[] = [];\r\n        constructor(public P: TVGPoint[][], g0?: { V: VisibilityVertex[]; E: VisibilityEdge[] }) {\r\n            if (!g0) {\r\n                var n = P.length;\r\n                // For each node...\r\n                for (var i = 0; i < n; i++) {\r\n                    var p = P[i];\r\n                    // For each node vertex.\r\n                    for (var j = 0; j < p.length; ++j) {\r\n                        var pj = p[j],\r\n                            vv = new VisibilityVertex(this.V.length, i, j, pj);\r\n                        this.V.push(vv);\r\n                        // For the every iteration but the first, generate an\r\n                        // edge from the previous visibility vertex to the\r\n                        // current one.\r\n                        if (j > 0) this.E.push(new VisibilityEdge(p[j - 1].vv, vv));\r\n                    }\r\n                    // Add a visibility edge from the first vertex to the last.\r\n                    if (p.length > 1) this.E.push(new VisibilityEdge(p[0].vv, p[p.length - 1].vv));\r\n                }\r\n                for (var i = 0; i < n - 1; i++) {\r\n                    var Pi = P[i];\r\n                    for (var j = i + 1; j < n; j++) {\r\n                        var Pj = P[j],\r\n                            t = tangents(Pi, Pj);\r\n                        for (var q in t) {\r\n                            var c = t[q],\r\n                                source = Pi[c.t1], target = Pj[c.t2];\r\n                            this.addEdgeIfVisible(source, target, i, j);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.V = g0.V.slice(0);\r\n                this.E = g0.E.slice(0);\r\n            }\r\n        }\r\n        addEdgeIfVisible(u: TVGPoint, v: TVGPoint, i1: number, i2: number) {\r\n            if (!this.intersectsPolys(new LineSegment(u.x, u.y, v.x, v.y), i1, i2)) {\r\n                this.E.push(new VisibilityEdge(u.vv, v.vv));\r\n            }\r\n        }\r\n        addPoint(p: TVGPoint, i1: number): VisibilityVertex {\r\n            var n = this.P.length;\r\n            this.V.push(new VisibilityVertex(this.V.length, n, 0, p));\r\n            for (var i = 0; i < n; ++i) {\r\n                if (i === i1) continue;\r\n                var poly = this.P[i],\r\n                    t = tangent_PointPolyC(p, poly);\r\n                this.addEdgeIfVisible(p, poly[t.ltan], i1, i);\r\n                this.addEdgeIfVisible(p, poly[t.rtan], i1, i);\r\n            }\r\n            return p.vv;\r\n        }\r\n        private intersectsPolys(l: LineSegment, i1: number, i2: number): boolean {\r\n            for (var i = 0, n = this.P.length; i < n; ++i) {\r\n                if (i != i1 && i != i2 && intersects(l, this.P[i]).length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function intersects(l: LineSegment, P: Point[]) {\r\n        var ints = [];\r\n        for (var i = 1, n = P.length; i < n; ++i) {\r\n            var int = Rectangle.lineIntersection(\r\n                l.x1, l.y1,\r\n                l.x2, l.y2,\r\n                P[i - 1].x, P[i - 1].y,\r\n                P[i].x, P[i].y\r\n                );\r\n            if (int) ints.push(int);\r\n        }\r\n        return ints;\r\n    }\r\n\r\n    export function tangents(V: Point[], W: Point[]): BiTangents\r\n    {\r\n        var m = V.length - 1, n = W.length - 1;\r\n        var bt = new BiTangents();\r\n        for (var i = 0; i < m; ++i) {\r\n            for (var j = 0; j < n; ++j) {\r\n                var v1 = V[i == 0 ? m - 1 : i - 1];\r\n                var v2 = V[i];\r\n                var v3 = V[i + 1];\r\n                var w1 = W[j == 0 ? n - 1 : j - 1];\r\n                var w2 = W[j];\r\n                var w3 = W[j + 1];\r\n                var v1v2w2 = isLeft(v1, v2, w2);\r\n                var v2w1w2 = isLeft(v2, w1, w2);\r\n                var v2w2w3 = isLeft(v2, w2, w3);\r\n                var w1w2v2 = isLeft(w1, w2, v2);\r\n                var w2v1v2 = isLeft(w2, v1, v2);\r\n                var w2v2v3 = isLeft(w2, v2, v3);\r\n                if (v1v2w2 >= 0 && v2w1w2 >= 0 && v2w2w3 < 0\r\n                    && w1w2v2 >= 0 && w2v1v2 >= 0 && w2v2v3 < 0) {\r\n                        bt.ll = new BiTangent(i, j);\r\n                } else if (v1v2w2 <= 0 && v2w1w2 <= 0 && v2w2w3 > 0\r\n                    && w1w2v2 <= 0 && w2v1v2 <= 0 && w2v2v3 > 0) {\r\n                        bt.rr = new BiTangent(i, j);\r\n                } else if (v1v2w2 <= 0 && v2w1w2 > 0 && v2w2w3 <= 0\r\n                    && w1w2v2 >= 0 && w2v1v2 < 0 && w2v2v3 >= 0) {\r\n                        bt.rl = new BiTangent(i, j);\r\n                } else if (v1v2w2 >= 0 && v2w1w2 < 0 && v2w2w3 >= 0\r\n                    && w1w2v2 <= 0 && w2v1v2 > 0 && w2v2v3 <= 0) {\r\n                        bt.lr = new BiTangent(i, j);\r\n                }\r\n            }\r\n        }\r\n        return bt;\r\n    }\r\n\r\n    function isPointInsidePoly(p: Point, poly: Point[]): boolean {\r\n        for (var i = 1, n = poly.length; i < n; ++i)\r\n            if (below(poly[i - 1], poly[i], p)) return false;\r\n        return true;\r\n    }\r\n\r\n    function isAnyPInQ(p: Point[], q: Point[]): boolean {\r\n        return !p.every(v => !isPointInsidePoly(v, q));\r\n    }\r\n\r\n    export function polysOverlap(p: Point[], q: Point[]): boolean {\r\n        if (isAnyPInQ(p, q)) return true;\r\n        if (isAnyPInQ(q, p)) return true;\r\n        for (var i = 1, n = p.length; i < n; ++i) {\r\n            var v = p[i], u = p[i - 1];\r\n            if (intersects(new LineSegment(u.x, u.y, v.x, v.y), q).length > 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n","    var packingOptions = {\r\n        PADDING: 10,\r\n        GOLDEN_SECTION: (1 + Math.sqrt(5)) / 2,\r\n        FLOAT_EPSILON: 0.0001,\r\n        MAX_INERATIONS: 100\r\n    };\r\n\r\n    // assign x, y to nodes while using box packing algorithm for disconnected graphs\r\n    export function applyPacking(graphs:Array<any>, w, h, node_size, desired_ratio = 1, centerGraph = true) {\r\n\r\n        var init_x = 0,\r\n            init_y = 0,\r\n\r\n            svg_width = w,\r\n            svg_height = h,\r\n\r\n            desired_ratio = typeof desired_ratio !== 'undefined' ? desired_ratio : 1,\r\n            node_size = typeof node_size !== 'undefined' ? node_size : 0,\r\n\r\n            real_width = 0,\r\n            real_height = 0,\r\n            min_width = 0,\r\n\r\n            global_bottom = 0,\r\n            line = [];\r\n\r\n        if (graphs.length == 0)\r\n            return;\r\n\r\n        /// that would take care of single nodes problem\r\n        // graphs.forEach(function (g) {\r\n        //     if (g.array.length == 1) {\r\n        //         g.array[0].x = 0;\r\n        //         g.array[0].y = 0;\r\n        //     }\r\n        // });\r\n\r\n        calculate_bb(graphs);\r\n        apply(graphs, desired_ratio);\r\n        if(centerGraph) {\r\n            put_nodes_to_right_positions(graphs);\r\n        }\r\n\r\n        // get bounding boxes for all separate graphs\r\n        function calculate_bb(graphs) {\r\n\r\n            graphs.forEach(function (g) {\r\n                calculate_single_bb(g)\r\n            });\r\n\r\n            function calculate_single_bb(graph) {\r\n                var min_x = Number.MAX_VALUE, min_y = Number.MAX_VALUE,\r\n                    max_x = 0, max_y = 0;\r\n\r\n                graph.array.forEach(function (v) {\r\n                    var w = typeof v.width !== 'undefined' ? v.width : node_size;\r\n                    var h = typeof v.height !== 'undefined' ? v.height : node_size;\r\n                    w /= 2;\r\n                    h /= 2;\r\n                    max_x = Math.max(v.x + w, max_x);\r\n                    min_x = Math.min(v.x - w, min_x);\r\n                    max_y = Math.max(v.y + h, max_y);\r\n                    min_y = Math.min(v.y - h, min_y);\r\n                });\r\n\r\n                graph.width = max_x - min_x;\r\n                graph.height = max_y - min_y;\r\n            }\r\n        }\r\n\r\n        //function plot(data, left, right, opt_x, opt_y) {\r\n        //    // plot the cost function\r\n        //    var plot_svg = d3.select(\"body\").append(\"svg\")\r\n        //        .attr(\"width\", function () { return 2 * (right - left); })\r\n        //        .attr(\"height\", 200);\r\n\r\n\r\n        //    var x = d3.time.scale().range([0, 2 * (right - left)]);\r\n\r\n        //    var xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\r\n        //    plot_svg.append(\"g\").attr(\"class\", \"x axis\")\r\n        //        .attr(\"transform\", \"translate(0, 199)\")\r\n        //        .call(xAxis);\r\n\r\n        //    var lastX = 0;\r\n        //    var lastY = 0;\r\n        //    var value = 0;\r\n        //    for (var r = left; r < right; r += 1) {\r\n        //        value = step(data, r);\r\n        //        // value = 1;\r\n\r\n        //        plot_svg.append(\"line\").attr(\"x1\", 2 * (lastX - left))\r\n        //            .attr(\"y1\", 200 - 30 * lastY)\r\n        //            .attr(\"x2\", 2 * r - 2 * left)\r\n        //            .attr(\"y2\", 200 - 30 * value)\r\n        //            .style(\"stroke\", \"rgb(6,120,155)\");\r\n\r\n        //        lastX = r;\r\n        //        lastY = value;\r\n        //    }\r\n\r\n        //    plot_svg.append(\"circle\").attr(\"cx\", 2 * opt_x - 2 * left).attr(\"cy\", 200 - 30 * opt_y)\r\n        //        .attr(\"r\", 5).style('fill', \"rgba(0,0,0,0.5)\");\r\n\r\n        //}\r\n\r\n        // actual assigning of position to nodes\r\n        function put_nodes_to_right_positions(graphs) {\r\n            graphs.forEach(function (g) {\r\n                // calculate current graph center:\r\n                var center = { x: 0, y: 0 };\r\n\r\n                g.array.forEach(function (node) {\r\n                    center.x += node.x;\r\n                    center.y += node.y;\r\n                });\r\n\r\n                center.x /= g.array.length;\r\n                center.y /= g.array.length;\r\n\r\n                // calculate current top left corner:\r\n                var corner = { x: center.x - g.width / 2, y: center.y - g.height / 2 };\r\n                var offset = { x: g.x - corner.x + svg_width / 2 - real_width / 2, y: g.y - corner.y + svg_height / 2 - real_height / 2};\r\n\r\n                // put nodes:\r\n                g.array.forEach(function (node) {\r\n                    node.x += offset.x;\r\n                    node.y += offset.y;\r\n                });\r\n            });\r\n        }\r\n\r\n        // starts box packing algorithm\r\n        // desired ratio is 1 by default\r\n        function apply(data, desired_ratio) {\r\n            var curr_best_f = Number.POSITIVE_INFINITY;\r\n            var curr_best = 0;\r\n            data.sort(function (a, b) { return b.height - a.height; });\r\n\r\n            min_width = data.reduce(function (a, b) {\r\n                return a.width < b.width ? a.width : b.width;\r\n            });\r\n\r\n            var left = x1 = min_width;\r\n            var right = x2 = get_entire_width(data);\r\n            var iterationCounter = 0;\r\n\r\n            var f_x1 = Number.MAX_VALUE;\r\n            var f_x2 = Number.MAX_VALUE;\r\n            var flag = -1; // determines which among f_x1 and f_x2 to recompute\r\n\r\n\r\n            var dx = Number.MAX_VALUE;\r\n            var df = Number.MAX_VALUE;\r\n\r\n            while ((dx > min_width) || df > packingOptions.FLOAT_EPSILON) {\r\n\r\n                if (flag != 1) {\r\n                    var x1 = right - (right - left) / packingOptions.GOLDEN_SECTION;\r\n                    var f_x1 = step(data, x1);\r\n                }\r\n                if (flag != 0) {\r\n                    var x2 = left + (right - left) / packingOptions.GOLDEN_SECTION;\r\n                    var f_x2 = step(data, x2);\r\n                }\r\n\r\n                dx = Math.abs(x1 - x2);\r\n                df = Math.abs(f_x1 - f_x2);\r\n\r\n                if (f_x1 < curr_best_f) {\r\n                    curr_best_f = f_x1;\r\n                    curr_best = x1;\r\n                }\r\n\r\n                if (f_x2 < curr_best_f) {\r\n                    curr_best_f = f_x2;\r\n                    curr_best = x2;\r\n                }\r\n\r\n                if (f_x1 > f_x2) {\r\n                    left = x1;\r\n                    x1 = x2;\r\n                    f_x1 = f_x2;\r\n                    flag = 1;\r\n                } else {\r\n                    right = x2;\r\n                    x2 = x1;\r\n                    f_x2 = f_x1;\r\n                    flag = 0;\r\n                }\r\n\r\n                if (iterationCounter++ > 100) {\r\n                    break;\r\n                }\r\n            }\r\n            // plot(data, min_width, get_entire_width(data), curr_best, curr_best_f);\r\n            step(data, curr_best);\r\n        }\r\n\r\n        // one iteration of the optimization method\r\n        // (gives a proper, but not necessarily optimal packing)\r\n        function step(data, max_width) {\r\n            line = [];\r\n            real_width = 0;\r\n            real_height = 0;\r\n            global_bottom = init_y;\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n                var o = data[i];\r\n                put_rect(o, max_width);\r\n            }\r\n\r\n            return Math.abs(get_real_ratio() - desired_ratio);\r\n        }\r\n\r\n        // looking for a position to one box\r\n        function put_rect(rect, max_width) {\r\n\r\n\r\n            var parent = undefined;\r\n\r\n            for (var i = 0; i < line.length; i++) {\r\n                if ((line[i].space_left >= rect.height) && (line[i].x + line[i].width + rect.width + packingOptions.PADDING - max_width) <= packingOptions.FLOAT_EPSILON) {\r\n                    parent = line[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            line.push(rect);\r\n\r\n            if (parent !== undefined) {\r\n                rect.x = parent.x + parent.width + packingOptions.PADDING;\r\n                rect.y = parent.bottom;\r\n                rect.space_left = rect.height;\r\n                rect.bottom = rect.y;\r\n                parent.space_left -= rect.height + packingOptions.PADDING;\r\n                parent.bottom += rect.height + packingOptions.PADDING;\r\n            } else {\r\n                rect.y = global_bottom;\r\n                global_bottom += rect.height + packingOptions.PADDING;\r\n                rect.x = init_x;\r\n                rect.bottom = rect.y;\r\n                rect.space_left = rect.height;\r\n            }\r\n\r\n            if (rect.y + rect.height - real_height > -packingOptions.FLOAT_EPSILON) real_height = rect.y + rect.height - init_y;\r\n            if (rect.x + rect.width - real_width > -packingOptions.FLOAT_EPSILON) real_width = rect.x + rect.width - init_x;\r\n        };\r\n\r\n        function get_entire_width(data) {\r\n            var width = 0;\r\n            data.forEach(function (d) { return width += d.width + packingOptions.PADDING; });\r\n            return width;\r\n        }\r\n\r\n        function get_real_ratio() {\r\n            return (real_width / real_height);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * connected components of graph\r\n     * returns an array of {}\r\n     */\r\n    export function separateGraphs(nodes, links) {\r\n        var marks = {};\r\n        var ways = {};\r\n        var graphs = [];\r\n        var clusters = 0;\r\n\r\n        for (var i = 0; i < links.length; i++) {\r\n            var link = links[i];\r\n            var n1 = link.source;\r\n            var n2 = link.target;\r\n            if (ways[n1.index])\r\n                ways[n1.index].push(n2);\r\n            else\r\n                ways[n1.index] = [n2];\r\n\r\n            if (ways[n2.index])\r\n                ways[n2.index].push(n1);\r\n            else\r\n                ways[n2.index] = [n1];\r\n        }\r\n\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            if (marks[node.index]) continue;\r\n            explore_node(node, true);\r\n        }\r\n\r\n        function explore_node(n, is_new) {\r\n            if (marks[n.index] !== undefined) return;\r\n            if (is_new) {\r\n                clusters++;\r\n                graphs.push({ array: [] });\r\n            }\r\n            marks[n.index] = clusters;\r\n            graphs[clusters - 1].array.push(n);\r\n            var adjacent = ways[n.index];\r\n            if (!adjacent) return;\r\n\r\n            for (var j = 0; j < adjacent.length; j++) {\r\n                explore_node(adjacent[j], false);\r\n            }\r\n        }\r\n\r\n        return graphs;\r\n    }\r\n","import * as powergraph from './powergraph'\r\nimport {LinkLengthAccessor, symmetricDiffLinkLengths, jaccardLinkLengths, generateDirectedEdgeConstraints} from './linklengths'\r\nimport {Descent} from './descent'\r\nimport {Rectangle, Projection, makeEdgeTo, makeEdgeBetween} from './rectangle'\r\nimport {Calculator} from './shortestpaths'\r\nimport {TangentVisibilityGraph, TVGPoint} from './geom'\r\nimport {separateGraphs, applyPacking} from './handledisconnected'\r\n    /**\r\n     * The layout process fires three events:\r\n     *  - start: layout iterations started\r\n     *  - tick: fired once per iteration, listen to this to animate\r\n     *  - end: layout converged, you might like to zoom-to-fit or something at notification of this event\r\n     */\r\n    export enum EventType { start, tick, end };\r\n    export interface Event {\r\n        type: EventType;\r\n        alpha: number;\r\n        stress?: number;\r\n        listener?: () => void;\r\n    }\r\n    export interface InputNode {\r\n        /**\r\n         * index in nodes array, this is initialized by Layout.start()\r\n         */\r\n        index?: number;\r\n        /**\r\n         * x and y will be computed by layout as the Node's centroid\r\n         */\r\n        x?: number;\r\n        /**\r\n         * x and y will be computed by layout as the Node's centroid\r\n         */\r\n        y?: number;\r\n        /**\r\n         * specify a width and height of the node's bounding box if you turn on avoidOverlaps\r\n         */\r\n        width?: number;\r\n        /**\r\n         * specify a width and height of the node's bounding box if you turn on avoidOverlaps\r\n         */\r\n        height?: number;\r\n        /**\r\n         * selective bit mask.  !=0 means layout will not move.\r\n         */\r\n        fixed?: number;\r\n    }\r\n    export interface Node extends InputNode {\r\n      // Client-passed node may be missing these properties, which will be set\r\n      // upon ingestion\r\n      x: number;\r\n      y: number;\r\n    }\r\n\r\n    export interface Group {\r\n        bounds?: Rectangle;\r\n        leaves?: Node[];\r\n        groups?: Group[];\r\n        padding: number;\r\n    }\r\n\r\n    function isGroup(g: any): g is Group {\r\n        return typeof g.leaves !== 'undefined' || typeof g.groups !== 'undefined';\r\n    }\r\n\r\n    export interface Link<NodeRefType> {\r\n        source: NodeRefType;\r\n        target: NodeRefType;\r\n\r\n        // ideal length the layout should try to achieve for this link\r\n        length?: number;\r\n\r\n        // how hard we should try to satisfy this link's ideal length\r\n        // must be in the range: 0 < weight <= 1\r\n        // if unspecified 1 is the default\r\n        weight?: number;\r\n    }\r\n\r\n    export type LinkNumericPropertyAccessor = (t: Link<Node | number>) => number;\r\n\r\n    export interface LinkLengthTypeAccessor extends LinkLengthAccessor<Link<Node | number>> {\r\n        getType: LinkNumericPropertyAccessor;\r\n    }\r\n    /**\r\n     * Main interface to cola layout.\r\n     * @class Layout\r\n     */\r\n    export class Layout {\r\n        private _canvasSize = [1, 1];\r\n        private _linkDistance: number | LinkNumericPropertyAccessor = 20;\r\n        private _defaultNodeSize: number = 10;\r\n        private _linkLengthCalculator = null;\r\n        private _linkType = null;\r\n        private _avoidOverlaps = false;\r\n        private _handleDisconnected = true;\r\n        private _alpha;\r\n        private _lastStress;\r\n        private _running = false;\r\n        private _nodes = [];\r\n        private _groups = [];\r\n        private _rootGroup = null;\r\n        private _links: Link<Node | number>[] = [];\r\n        private _constraints = [];\r\n        private _distanceMatrix = null;\r\n        private _descent: Descent = null;\r\n        private _directedLinkConstraints = null;\r\n        private _threshold = 0.01;\r\n        private _visibilityGraph = null;\r\n        private _groupCompactness = 1e-6;\r\n\r\n        // sub-class and override this property to replace with a more sophisticated eventing mechanism\r\n        protected event = null;\r\n\r\n        // subscribe a listener to an event\r\n        // sub-class and override this method to replace with a more sophisticated eventing mechanism\r\n        public on(e: EventType | string, listener: (event?: Event) => void): this {\r\n            // override me!\r\n            if (!this.event) this.event = {};\r\n            if (typeof e === 'string') {\r\n                this.event[EventType[e]] = listener;\r\n            } else {\r\n                this.event[e] = listener;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // a function that is notified of events like \"tick\"\r\n        // sub-classes can override this method to replace with a more sophisticated eventing mechanism\r\n        protected trigger(e: Event) {\r\n            if (this.event && typeof this.event[e.type] !== 'undefined') {\r\n                this.event[e.type](e);\r\n            }\r\n        }\r\n\r\n        // a function that kicks off the iteration tick loop\r\n        // it calls tick() repeatedly until tick returns true (is converged)\r\n        // subclass and override it with something fancier (e.g. dispatch tick on a timer)\r\n        protected kick(): void {\r\n            while (!this.tick());\r\n        }\r\n\r\n        /**\r\n         * iterate the layout.  Returns true when layout converged.\r\n         */\r\n        protected tick(): boolean {\r\n            if (this._alpha < this._threshold) {\r\n                this._running = false;\r\n                this.trigger({ type: EventType.end, alpha: this._alpha = 0, stress: this._lastStress });\r\n                return true;\r\n            }\r\n            const n = this._nodes.length,\r\n                  m = this._links.length;\r\n            let o, i;\r\n\r\n            this._descent.locks.clear();\r\n            for (i = 0; i < n; ++i) {\r\n                o = this._nodes[i];\r\n                if (o.fixed) {\r\n                    if (typeof o.px === 'undefined' || typeof o.py === 'undefined') {\r\n                        o.px = o.x;\r\n                        o.py = o.y;\r\n                    }\r\n                    var p = [o.px, o.py];\r\n                    this._descent.locks.add(i, p);\r\n                }\r\n            }\r\n\r\n            let s1 = this._descent.rungeKutta();\r\n            //var s1 = descent.reduceStress();\r\n            if (s1 === 0) {\r\n                this._alpha = 0;\r\n            } else if (typeof this._lastStress !== 'undefined') {\r\n                this._alpha = s1; //Math.abs(Math.abs(this._lastStress / s1) - 1);\r\n            }\r\n            this._lastStress = s1;\r\n\r\n            this.updateNodePositions();\r\n\r\n            this.trigger({ type: EventType.tick, alpha: this._alpha, stress: this._lastStress });\r\n            return false;\r\n        }\r\n\r\n        // copy positions out of descent instance into each of the nodes' center coords\r\n        private updateNodePositions(): void {\r\n            const x = this._descent.x[0], y = this._descent.x[1];\r\n            let o, i = this._nodes.length;\r\n            while (i--) {\r\n                o = this._nodes[i];\r\n                o.x = x[i];\r\n                o.y = y[i];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * the list of nodes.\r\n         * If nodes has not been set, but links has, then we instantiate a nodes list here, of the correct size,\r\n         * before returning it.\r\n         * @property nodes {Array}\r\n         * @default empty list\r\n         */\r\n        nodes(): Array<Node>\r\n        nodes(v: Array<InputNode>): this\r\n        nodes(v?: any): any {\r\n            if (!v) {\r\n                if (this._nodes.length === 0 && this._links.length > 0) {\r\n                    // if we have links but no nodes, create the nodes array now with empty objects for the links to point at.\r\n                    // in this case the links are expected to be numeric indices for nodes in the range 0..n-1 where n is the number of nodes\r\n                    var n = 0;\r\n                    this._links.forEach(function (l) {\r\n                        n = Math.max(n, <number>l.source, <number>l.target);\r\n                    });\r\n                    this._nodes = new Array(++n);\r\n                    for (var i = 0; i < n; ++i) {\r\n                        this._nodes[i] = {};\r\n                    }\r\n                }\r\n                return this._nodes;\r\n            }\r\n            this._nodes = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * a list of hierarchical groups defined over nodes\r\n         * @property groups {Array}\r\n         * @default empty list\r\n         */\r\n        groups(): Array<Group>\r\n        groups(x: Array<Group>): this\r\n        groups(x?: Array<Group>): any {\r\n            if (!x) return this._groups;\r\n            this._groups = x;\r\n            this._rootGroup = {};\r\n            this._groups.forEach(g => {\r\n                if (typeof g.padding === \"undefined\")\r\n                    g.padding = 1;\r\n                if (typeof g.leaves !== \"undefined\") {\r\n                    g.leaves.forEach((v, i) => {\r\n                        if (typeof v === 'number')\r\n                            (g.leaves[i] = this._nodes[v]).parent = g\r\n                    });\r\n                }\r\n                if (typeof g.groups !== \"undefined\") {\r\n                    g.groups.forEach((gi, i) => {\r\n                        if (typeof gi === 'number')\r\n                            (g.groups[i] = this._groups[gi]).parent = g\r\n                    });\r\n                }\r\n            });\r\n            this._rootGroup.leaves = this._nodes.filter(v => typeof v.parent === 'undefined');\r\n            this._rootGroup.groups = this._groups.filter(g => typeof g.parent === 'undefined');\r\n            return this;\r\n        }\r\n\r\n        powerGraphGroups(f: Function): this {\r\n            var g = powergraph.getGroups(this._nodes, this._links, this.linkAccessor, this._rootGroup);\r\n            this.groups(g.groups);\r\n            f(g);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * if true, the layout will not permit overlaps of the node bounding boxes (defined by the width and height properties on nodes)\r\n         * @property avoidOverlaps\r\n         * @type bool\r\n         * @default false\r\n         */\r\n        avoidOverlaps(): boolean\r\n        avoidOverlaps(v: boolean): this\r\n        avoidOverlaps(v?: boolean): any {\r\n            if (!arguments.length) return this._avoidOverlaps;\r\n            this._avoidOverlaps = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * if true, the final step of the start method will be to nicely pack connected components of the graph.\r\n         * works best if start() is called with a reasonable number of iterations specified and\r\n         * each node has a bounding box (defined by the width and height properties on nodes).\r\n         * @property handleDisconnected\r\n         * @type bool\r\n         * @default true\r\n         */\r\n        handleDisconnected(): boolean\r\n        handleDisconnected(v: boolean): this\r\n        handleDisconnected(v?: boolean): any {\r\n            if (!arguments.length) return this._handleDisconnected;\r\n            this._handleDisconnected = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * causes constraints to be generated such that directed graphs are laid out either from left-to-right or top-to-bottom.\r\n         * a separation constraint is generated in the selected axis for each edge that is not involved in a cycle (part of a strongly connected component)\r\n         * @param axis {string} 'x' for left-to-right, 'y' for top-to-bottom\r\n         * @param minSeparation {number|link=>number} either a number specifying a minimum spacing required across all links or a function to return the minimum spacing for each link\r\n         */\r\n        flowLayout(axis: string, minSeparation: number|((t: any)=>number)): this {\r\n            if (!arguments.length) axis = 'y';\r\n            this._directedLinkConstraints = {\r\n                axis: axis,\r\n                getMinSeparation: typeof minSeparation === 'number' ? function () { return minSeparation } : minSeparation\r\n            };\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * links defined as source, target pairs over nodes\r\n         * @property links {array}\r\n         * @default empty list\r\n         */\r\n        links(): Array<Link<Node|number>>\r\n        links(x: Array<Link<Node|number>>): this\r\n        links(x?: Array<Link<Node|number>>): any {\r\n            if (!arguments.length) return this._links;\r\n            this._links = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * list of constraints of various types\r\n         * @property constraints\r\n         * @type {array}\r\n         * @default empty list\r\n         */\r\n        constraints(): Array<any>\r\n        constraints(c: Array<any>): this\r\n        constraints(c?: Array<any>): any {\r\n            if (!arguments.length) return this._constraints;\r\n            this._constraints = c;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Matrix of ideal distances between all pairs of nodes.\r\n         * If unspecified, the ideal distances for pairs of nodes will be based on the shortest path distance between them.\r\n         * @property distanceMatrix\r\n         * @type {Array of Array of Number}\r\n         * @default null\r\n         */\r\n        distanceMatrix(): Array<Array<number>>\r\n        distanceMatrix(d: Array<Array<number>>): this\r\n        distanceMatrix(d?: any): any {\r\n            if (!arguments.length) return this._distanceMatrix;\r\n            this._distanceMatrix = d;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Size of the layout canvas dimensions [x,y]. Currently only used to determine the midpoint which is taken as the starting position\r\n         * for nodes with no preassigned x and y.\r\n         * @property size\r\n         * @type {Array of Number}\r\n         */\r\n        size(): Array<number>\r\n        size(x: Array<number>): this\r\n        size(x?: Array<number>): any {\r\n            if (!x) return this._canvasSize;\r\n            this._canvasSize = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Default size (assume nodes are square so both width and height) to use in packing if node width/height are not specified.\r\n         * @property defaultNodeSize\r\n         * @type {Number}\r\n         */\r\n        defaultNodeSize(): number\r\n        defaultNodeSize(x: number): this\r\n        defaultNodeSize(x?: any): any {\r\n            if (!x) return this._defaultNodeSize;\r\n            this._defaultNodeSize = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * The strength of attraction between the group boundaries to each other.\r\n         * @property defaultNodeSize\r\n         * @type {Number}\r\n         */\r\n        groupCompactness(): number\r\n        groupCompactness(x: number): this\r\n        groupCompactness(x?: any): any {\r\n            if (!x) return this._groupCompactness;\r\n            this._groupCompactness = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * links have an ideal distance, The automatic layout will compute layout that tries to keep links (AKA edges) as close as possible to this length.\r\n         */\r\n        linkDistance(): number\r\n        linkDistance(): LinkNumericPropertyAccessor\r\n        linkDistance(x: number): this\r\n        linkDistance(x: LinkNumericPropertyAccessor): this\r\n        linkDistance(x?: any): any {\r\n            if (!x) {\r\n                return this._linkDistance;\r\n            }\r\n            this._linkDistance = typeof x === \"function\" ? x : +x;\r\n            this._linkLengthCalculator = null;\r\n            return this;\r\n        }\r\n\r\n        linkType(f: Function | number): this {\r\n            this._linkType = f;\r\n            return this;\r\n        }\r\n\r\n        convergenceThreshold(): number\r\n        convergenceThreshold(x: number): this\r\n        convergenceThreshold(x?: number): any {\r\n            if (!x) return this._threshold;\r\n            this._threshold = typeof x === \"function\" ? x : +x;\r\n            return this;\r\n        }\r\n\r\n        alpha(): number\r\n        alpha(x: number): this\r\n        alpha(x?: number): any {\r\n            if (!arguments.length) return this._alpha;\r\n            else {\r\n                x = +x;\r\n                if (this._alpha) { // if we're already running\r\n                    if (x > 0) this._alpha = x; // we might keep it hot\r\n                    else this._alpha = 0; // or, next tick will dispatch \"end\"\r\n                } else if (x > 0) { // otherwise, fire it up!\r\n                    if (!this._running) {\r\n                        this._running = true;\r\n                        this.trigger({ type: EventType.start, alpha: this._alpha = x});\r\n                        this.kick();\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n        }\r\n\r\n        getLinkLength(link: Link<Node | number>): number {\r\n            return typeof this._linkDistance === \"function\" ? +((<LinkNumericPropertyAccessor>this._linkDistance)(link)) : <number>this._linkDistance;\r\n        }\r\n\r\n        static setLinkLength(link: Link<Node|number>, length: number) {\r\n            link.length = length;\r\n        }\r\n\r\n        getLinkType(link: Link<Node | number>): number {\r\n            return typeof this._linkType === \"function\" ? this._linkType(link) : 0;\r\n        }\r\n\r\n        linkAccessor: LinkLengthTypeAccessor = {\r\n            getSourceIndex: Layout.getSourceIndex,\r\n            getTargetIndex: Layout.getTargetIndex,\r\n            setLength: Layout.setLinkLength,\r\n            getType: l => typeof this._linkType === \"function\" ? this._linkType(l) : 0\r\n        };\r\n\r\n        /**\r\n         * compute an ideal length for each link based on the graph structure around that link.\r\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\r\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\r\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: sqrt(|a union b| - |a intersection b|)\r\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\r\n         * don't have to have been assigned before invoking this function.\r\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\r\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\r\n         */\r\n        symmetricDiffLinkLengths(idealLength: number, w: number = 1): this {\r\n            this.linkDistance(l => idealLength * l.length);\r\n            this._linkLengthCalculator = () => symmetricDiffLinkLengths(this._links, this.linkAccessor, w);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * compute an ideal length for each link based on the graph structure around that link.\r\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\r\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\r\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: |a intersection b|/|a union b|\r\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\r\n         * don't have to have been assigned before invoking this function.\r\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\r\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\r\n         */\r\n        jaccardLinkLengths(idealLength: number, w: number = 1): this {\r\n            this.linkDistance(l => idealLength * l.length);\r\n            this._linkLengthCalculator = () => jaccardLinkLengths(this._links, this.linkAccessor, w);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * start the layout process\r\n         * @method start\r\n         * @param {number} [initialUnconstrainedIterations=0] unconstrained initial layout iterations\r\n         * @param {number} [initialUserConstraintIterations=0] initial layout iterations with user-specified constraints\r\n         * @param {number} [initialAllConstraintsIterations=0] initial layout iterations with all constraints including non-overlap\r\n         * @param {number} [gridSnapIterations=0] iterations of \"grid snap\", which pulls nodes towards grid cell centers - grid of size node[0].width - only really makes sense if all nodes have the same width and height\r\n         * @param [keepRunning=true] keep iterating asynchronously via the tick method\r\n         * @param [centerGraph=true] Center graph on restart\r\n         */\r\n        start(\r\n            initialUnconstrainedIterations: number = 0,\r\n            initialUserConstraintIterations: number = 0,\r\n            initialAllConstraintsIterations: number = 0,\r\n            gridSnapIterations: number = 0,\r\n            keepRunning = true,\r\n            centerGraph = true,\r\n        ): this {\r\n            var i: number,\r\n                j: number,\r\n                n = (<Array<any>>this.nodes()).length,\r\n                N = n + 2 * this._groups.length,\r\n                m = this._links.length,\r\n                w = this._canvasSize[0],\r\n                h = this._canvasSize[1];\r\n\r\n            var x = new Array(N), y = new Array(N);\r\n\r\n            var G = null;\r\n\r\n            var ao = this._avoidOverlaps;\r\n\r\n            this._nodes.forEach((v, i) => {\r\n                v.index = i;\r\n                if (typeof v.x === 'undefined') {\r\n                    v.x = w / 2, v.y = h / 2;\r\n                }\r\n                x[i] = v.x, y[i] = v.y;\r\n            });\r\n\r\n            if (this._linkLengthCalculator) this._linkLengthCalculator();\r\n\r\n            //should we do this to clearly label groups?\r\n            //this._groups.forEach((g, i) => g.groupIndex = i);\r\n\r\n            var distances;\r\n            if (this._distanceMatrix) {\r\n                // use the user specified distanceMatrix\r\n                distances = this._distanceMatrix;\r\n            } else {\r\n                // construct an n X n distance matrix based on shortest paths through graph (with respect to edge.length).\r\n                distances = (new Calculator(N, this._links, Layout.getSourceIndex, Layout.getTargetIndex, l=> this.getLinkLength(l))).DistanceMatrix();\r\n\r\n                // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\r\n                // otherwise 2. (\r\n                G = Descent.createSquareMatrix(N, () => 2);\r\n                this._links.forEach(l => {\r\n                    if (typeof l.source == \"number\") l.source = this._nodes[<number>l.source];\r\n                    if (typeof l.target == \"number\") l.target = this._nodes[<number>l.target];\r\n                });\r\n                this._links.forEach(e => {\r\n                    const u = Layout.getSourceIndex(e), v = Layout.getTargetIndex(e);\r\n                    G[u][v] = G[v][u] = e.weight || 1;\r\n                });\r\n            }\r\n\r\n            var D = Descent.createSquareMatrix(N, function (i, j) {\r\n                return distances[i][j];\r\n            });\r\n\r\n            if (this._rootGroup && typeof this._rootGroup.groups !== 'undefined') {\r\n                var i = n;\r\n                var addAttraction = (i, j, strength, idealDistance) => {\r\n                    G[i][j] = G[j][i] = strength;\r\n                    D[i][j] = D[j][i] = idealDistance;\r\n                };\r\n                this._groups.forEach(g => {\r\n                    addAttraction(i, i + 1, this._groupCompactness, 0.1);\r\n\r\n                    // todo: add terms here attracting children of the group to the group dummy nodes\r\n                    //if (typeof g.leaves !== 'undefined')\r\n                    //    g.leaves.forEach(l => {\r\n                    //        addAttraction(l.index, i, 1e-4, 0.1);\r\n                    //        addAttraction(l.index, i + 1, 1e-4, 0.1);\r\n                    //    });\r\n                    //if (typeof g.groups !== 'undefined')\r\n                    //    g.groups.forEach(g => {\r\n                    //        var gid = n + g.groupIndex * 2;\r\n                    //        addAttraction(gid, i, 0.1, 0.1);\r\n                    //        addAttraction(gid + 1, i, 0.1, 0.1);\r\n                    //        addAttraction(gid, i + 1, 0.1, 0.1);\r\n                    //        addAttraction(gid + 1, i + 1, 0.1, 0.1);\r\n                    //    });\r\n\r\n                    x[i] = 0, y[i++] = 0;\r\n                    x[i] = 0, y[i++] = 0;\r\n                });\r\n            } else this._rootGroup = { leaves: this._nodes, groups: [] };\r\n\r\n            var curConstraints = this._constraints || [];\r\n            if (this._directedLinkConstraints) {\r\n                (<any>this.linkAccessor).getMinSeparation = this._directedLinkConstraints.getMinSeparation;\r\n                curConstraints = curConstraints.concat(generateDirectedEdgeConstraints(n, this._links, this._directedLinkConstraints.axis, <any>(this.linkAccessor)));\r\n\r\n                // todo: add containment constraints between group dummy nodes and their children\r\n            }\r\n\r\n            this.avoidOverlaps(false);\r\n            this._descent = new Descent([x, y], D);\r\n\r\n            this._descent.locks.clear();\r\n            for (var i = 0; i < n; ++i) {\r\n                var o = this._nodes[i];\r\n                if (o.fixed) {\r\n                    o.px = o.x;\r\n                    o.py = o.y;\r\n                    var p = [o.x, o.y];\r\n                    this._descent.locks.add(i, p);\r\n                }\r\n            }\r\n            this._descent.threshold = this._threshold;\r\n\r\n            // apply initialIterations without user constraints or nonoverlap constraints\r\n            // if groups are specified, dummy nodes and edges will be added to untangle\r\n            // with respect to group connectivity\r\n            this.initialLayout(initialUnconstrainedIterations, x, y);\r\n\r\n            // apply initialIterations with user constraints but no nonoverlap constraints\r\n            if (curConstraints.length > 0) this._descent.project = new Projection(this._nodes, this._groups, this._rootGroup, curConstraints).projectFunctions();\r\n            this._descent.run(initialUserConstraintIterations);\r\n            this.separateOverlappingComponents(w, h, centerGraph);\r\n\r\n            // subsequent iterations will apply all constraints\r\n            this.avoidOverlaps(ao);\r\n            if (ao) {\r\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\r\n                this._descent.project = new Projection(this._nodes, this._groups, this._rootGroup, curConstraints, true).projectFunctions();\r\n                this._nodes.forEach(function (v, i) { x[i] = v.x, y[i] = v.y; });\r\n            }\r\n\r\n            // allow not immediately connected nodes to relax apart (p-stress)\r\n            this._descent.G = G;\r\n            this._descent.run(initialAllConstraintsIterations);\r\n\r\n            if (gridSnapIterations) {\r\n                this._descent.snapStrength = 1000;\r\n                this._descent.snapGridSize = this._nodes[0].width;\r\n                this._descent.numGridSnapNodes = n;\r\n                this._descent.scaleSnapByMaxH = n != N; // if we have groups then need to scale hessian so grid forces still apply\r\n                var G0 = Descent.createSquareMatrix(N,(i, j) => {\r\n                    if (i >= n || j >= n) return G[i][j];\r\n                    return 0\r\n                });\r\n                this._descent.G = G0;\r\n                this._descent.run(gridSnapIterations);\r\n            }\r\n\r\n            this.updateNodePositions();\r\n            this.separateOverlappingComponents(w, h, centerGraph);\r\n            return keepRunning ? this.resume() : this;\r\n        }\r\n\r\n        private initialLayout(iterations: number, x: number[], y: number[]) {\r\n            if (this._groups.length > 0 && iterations > 0) {\r\n                // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n                // todo: edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n                var n = this._nodes.length;\r\n                var edges = this._links.map(e => <any>{ source: (<Node>e.source).index, target: (<Node>e.target).index });\r\n                var vs = this._nodes.map(v => <any>{ index: v.index });\r\n                this._groups.forEach((g, i) => {\r\n                    vs.push(<any>{ index: g.index = n + i });\r\n                });\r\n                this._groups.forEach((g, i) => {\r\n                    if (typeof g.leaves !== 'undefined')\r\n                        g.leaves.forEach(v => edges.push({ source: g.index, target: v.index }));\r\n                    if (typeof g.groups !== 'undefined')\r\n                        g.groups.forEach(gg => edges.push({ source: g.index, target: gg.index }));\r\n                });\r\n\r\n                // layout the flat graph with dummy nodes and edges\r\n                new Layout()\r\n                    .size(this.size())\r\n                    .nodes(vs)\r\n                    .links(edges)\r\n                    .avoidOverlaps(false)\r\n                    .linkDistance(this.linkDistance())\r\n                    .symmetricDiffLinkLengths(5)\r\n                    .convergenceThreshold(1e-4)\r\n                    .start(iterations, 0, 0, 0, false);\r\n\r\n                this._nodes.forEach(v => {\r\n                    x[v.index] = vs[v.index].x;\r\n                    y[v.index] = vs[v.index].y;\r\n                });\r\n            } else {\r\n                this._descent.run(iterations);\r\n            }\r\n        }\r\n\r\n        // recalculate nodes position for disconnected graphs\r\n        private separateOverlappingComponents(width: number, height: number, centerGraph: boolean = true): void {\r\n            // recalculate nodes position for disconnected graphs\r\n            if (!this._distanceMatrix && this._handleDisconnected) {\r\n                let x = this._descent.x[0], y = this._descent.x[1];\r\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\r\n                var graphs = separateGraphs(this._nodes, this._links);\r\n                applyPacking(graphs, width, height, this._defaultNodeSize, 1, centerGraph);\r\n                this._nodes.forEach((v, i) => {\r\n                    this._descent.x[0][i] = v.x, this._descent.x[1][i] = v.y;\r\n                    if (v.bounds) {\r\n                        v.bounds.setXCentre(v.x);\r\n                        v.bounds.setYCentre(v.y);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        resume(): this {\r\n            return this.alpha(0.1);\r\n        }\r\n\r\n        stop(): this {\r\n            return this.alpha(0);\r\n        }\r\n\r\n        /// find a visibility graph over the set of nodes.  assumes all nodes have a\r\n        /// bounds property (a rectangle) and that no pair of bounds overlaps.\r\n        prepareEdgeRouting(nodeMargin: number = 0) {\r\n            this._visibilityGraph = new TangentVisibilityGraph(\r\n                this._nodes.map(function (v) {\r\n                    return v.bounds.inflate(-nodeMargin).vertices();\r\n                }));\r\n        }\r\n\r\n        /**\r\n         * find a route avoiding node bounds for the given edge.\r\n         * assumes the visibility graph has been created (by prepareEdgeRouting method)\r\n         * and also assumes that nodes have an index property giving their position in the\r\n         * node array.  This index property is created by the start() method.\r\n         * @param [edge] The edge to generate a route for.\r\n         * @param {number} [ah] The size of the arrow head, a distance to shorten the end\r\n         *                      of the edge by.  Defaults to 5.\r\n         */\r\n        routeEdge(edge, ah: number = 5, draw) {\r\n            var lineData = [];\r\n            //if (d.source.id === 10 && d.target.id === 11) {\r\n            //    debugger;\r\n            //}\r\n            var vg2 = new TangentVisibilityGraph(this._visibilityGraph.P, { V: this._visibilityGraph.V, E: this._visibilityGraph.E }),\r\n                port1 = <TVGPoint>{ x: edge.source.x, y: edge.source.y },\r\n                port2 = <TVGPoint>{ x: edge.target.x, y: edge.target.y },\r\n                start = vg2.addPoint(port1, edge.source.index),\r\n                end = vg2.addPoint(port2, edge.target.index);\r\n            vg2.addEdgeIfVisible(port1, port2, edge.source.index, edge.target.index);\r\n            if (typeof draw !== 'undefined') {\r\n                draw(vg2);\r\n            }\r\n            var sourceInd = e => e.source.id, targetInd = e => e.target.id, length = e => e.length(),\r\n                spCalc = new Calculator(vg2.V.length, vg2.E, sourceInd, targetInd, length),\r\n                shortestPath = spCalc.PathFromNodeToNode(start.id, end.id);\r\n            if (shortestPath.length === 1 || shortestPath.length === vg2.V.length) {\r\n                let route = makeEdgeBetween(edge.source.innerBounds, edge.target.innerBounds, ah);\r\n                lineData = [route.sourceIntersection, route.arrowStart];\r\n            } else {\r\n                var n = shortestPath.length - 2,\r\n                    p = vg2.V[shortestPath[n]].p,\r\n                    q = vg2.V[shortestPath[0]].p,\r\n                    lineData = [edge.source.innerBounds.rayIntersection(p.x, p.y)];\r\n                for (var i = n; i >= 0; --i)\r\n                    lineData.push(vg2.V[shortestPath[i]].p);\r\n                lineData.push(makeEdgeTo(q, edge.target.innerBounds, ah));\r\n            }\r\n            //lineData.forEach((v, i) => {\r\n            //    if (i > 0) {\r\n            //        var u = lineData[i - 1];\r\n            //        this._nodes.forEach(function (node) {\r\n            //            if (node.id === getSourceIndex(d) || node.id === getTargetIndex(d)) return;\r\n            //            var ints = node.innerBounds.lineIntersections(u.x, u.y, v.x, v.y);\r\n            //            if (ints.length > 0) {\r\n            //                debugger;\r\n            //            }\r\n            //        })\r\n            //    }\r\n            //})\r\n            return lineData;\r\n        }\r\n\r\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\r\n        static getSourceIndex(e: Link<Node | number>): number {\r\n            return typeof e.source === 'number' ? <number>e.source : (<Node>e.source).index;\r\n        }\r\n\r\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\r\n        static getTargetIndex(e: Link<Node | number>): number {\r\n            return typeof e.target === 'number' ? <number>e.target : (<Node>e.target).index;\r\n        }\r\n\r\n        // Get a string ID for a given link.\r\n        static linkId(e: Link<Node | number>): string {\r\n            return Layout.getSourceIndex(e) + \"-\" + Layout.getTargetIndex(e);\r\n        }\r\n\r\n        // The fixed property has three bits:\r\n        // Bit 1 can be set externally (e.g., d.fixed = true) and show persist.\r\n        // Bit 2 stores the dragging state, from mousedown to mouseup.\r\n        // Bit 3 stores the hover state, from mouseover to mouseout.\r\n        static dragStart(d: Node | Group) {\r\n            if (isGroup(d)) {\r\n                Layout.storeOffset(d, Layout.dragOrigin(d));\r\n            } else {\r\n                Layout.stopNode(d);\r\n                d.fixed |= 2; // set bit 2\r\n            }\r\n        }\r\n\r\n        // we clobber any existing desired positions for nodes\r\n        // in case another tick event occurs before the drag\r\n        private static stopNode(v: Node) {\r\n            (<any>v).px = v.x;\r\n            (<any>v).py = v.y;\r\n        }\r\n\r\n        // we store offsets for each node relative to the centre of the ancestor group\r\n        // being dragged in a pair of properties on the node\r\n        private static storeOffset(d: Group, origin: { x: number, y: number }) {\r\n            if (typeof d.leaves !== 'undefined') {\r\n                d.leaves.forEach(v => {\r\n                    v.fixed |= 2;\r\n                    Layout.stopNode(v);\r\n                    (<any>v)._dragGroupOffsetX = v.x - origin.x;\r\n                    (<any>v)._dragGroupOffsetY = v.y - origin.y;\r\n                });\r\n            }\r\n            if (typeof d.groups !== 'undefined') {\r\n                d.groups.forEach(g => Layout.storeOffset(g, origin));\r\n            }\r\n        }\r\n\r\n        // the drag origin is taken as the centre of the node or group\r\n        static dragOrigin(d: Node | Group): { x: number, y: number } {\r\n            if (isGroup(d)) {\r\n                return {\r\n                    x: d.bounds.cx(),\r\n                    y: d.bounds.cy()\r\n                };\r\n            } else {\r\n                return d;\r\n            }\r\n        }\r\n\r\n        // for groups, the drag translation is propagated down to all of the children of\r\n        // the group.\r\n        static drag(d: Node | Group, position: { x: number, y: number }) {\r\n            if (isGroup(d)) {\r\n                if (typeof d.leaves !== 'undefined') {\r\n                    d.leaves.forEach(v => {\r\n                        d.bounds.setXCentre(position.x);\r\n                        d.bounds.setYCentre(position.y);\r\n                        (<any>v).px = (<any>v)._dragGroupOffsetX + position.x;\r\n                        (<any>v).py = (<any>v)._dragGroupOffsetY + position.y;\r\n                    });\r\n                }\r\n                if (typeof d.groups !== 'undefined') {\r\n                    d.groups.forEach(g => Layout.drag(g, position));\r\n                }\r\n            } else {\r\n                (<any>d).px = position.x;\r\n                (<any>d).py = position.y;\r\n            }\r\n        }\r\n\r\n        // we unset only bits 2 and 3 so that the user can fix nodes with another a different\r\n        // bit such that the lock persists between drags\r\n        static dragEnd(d) {\r\n            if (isGroup(d)) {\r\n                if (typeof d.leaves !== 'undefined') {\r\n                    d.leaves.forEach(v => {\r\n                        Layout.dragEnd(v);\r\n                        delete (<any>v)._dragGroupOffsetX;\r\n                        delete (<any>v)._dragGroupOffsetY;\r\n                    });\r\n                }\r\n                if (typeof d.groups !== 'undefined') {\r\n                    d.groups.forEach(Layout.dragEnd);\r\n                }\r\n            } else {\r\n                d.fixed &= ~6; // unset bits 2 and 3\r\n                //d.fixed = 0;\r\n            }\r\n        }\r\n\r\n        // in d3 hover temporarily locks nodes, currently not used in cola\r\n        static mouseOver(d) {\r\n            d.fixed |= 4; // set bit 3\r\n            d.px = d.x, d.py = d.y; // set velocity to zero\r\n        }\r\n\r\n        // in d3 hover temporarily locks nodes, currently not used in cola\r\n        static mouseOut(d) {\r\n            d.fixed &= ~4; // unset bit 3\r\n        }\r\n    }\r\n","import {Layout, EventType, Event} from './layout'\r\n\r\n    export class LayoutAdaptor extends Layout {\r\n\r\n        // dummy functions in case not defined by client\r\n        trigger(e: Event) {};\r\n        kick() {};\r\n        drag() {};\r\n        on(eventType: EventType | string, listener: () => void) : this { return this; };\r\n\r\n        dragstart: (d:any) => void;\r\n        dragStart: (d:any) => void;\r\n        dragend: (d:any) => void;\r\n        dragEnd: (d:any) => void;\r\n\r\n        constructor( options ) {\r\n            super();\r\n\r\n            // take in implementation as defined by client\r\n\r\n            var self = this;\r\n            var o = options;\r\n\r\n            if ( o.trigger ) {\r\n                this.trigger = o.trigger;\r\n            }\r\n\r\n            if ( o.kick ){\r\n                this.kick = o.kick;\r\n            }\r\n\r\n            if ( o.drag ){\r\n                this.drag = o.drag;\r\n            }\r\n\r\n            if ( o.on ){\r\n                this.on = o.on;\r\n            }\r\n\r\n            this.dragstart = this.dragStart = Layout.dragStart;\r\n            this.dragend = this.dragEnd = Layout.dragEnd;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with any external graph system (e.g. Cytoscape.js):\r\n     */\r\n    export function adaptor( options ): LayoutAdaptor {\r\n        return new LayoutAdaptor( options );\r\n    }\r\n","////<reference path=\"../extern/d3v3.d.ts\"/>\r\n////commented out the reference, because the path ended up in the typings, which\r\n////makes it impossible import in other projects.\r\ndeclare const d3;\r\n\r\n\r\nimport {Layout, EventType, Event} from './layout';\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\n    export class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n        event = d3.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        trigger(e: Event) {\r\n            var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n            this.event[d3event.type](d3event); // via d3 dispatcher, e.g. event.start(e);\r\n        }\r\n\r\n        // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n        kick() {\r\n            d3.timer(() => super.tick());\r\n        }\r\n\r\n        // a function to allow for dragging of nodes\r\n        drag: () => any;\r\n\r\n        constructor() {\r\n            super();\r\n            // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n            var d3layout = this;\r\n            var drag;\r\n            this.drag = function () {\r\n                if (!drag) {\r\n                    var drag = d3.behavior.drag()\r\n                        .origin(Layout.dragOrigin)\r\n                        .on(\"dragstart.d3adaptor\", Layout.dragStart)\r\n                        .on(\"drag.d3adaptor\", d => {\r\n                            Layout.drag(d, <any>d3.event);\r\n                            d3layout.resume(); // restart annealing\r\n                        })\r\n                        .on(\"dragend.d3adaptor\", Layout.dragEnd);\r\n                }\r\n\r\n                if (!arguments.length) return drag;\r\n\r\n                // this is the context of the function, i.e. the d3 selection\r\n                this//.on(\"mouseover.adaptor\", colaMouseover)\r\n                //.on(\"mouseout.adaptor\", colaMouseout)\r\n                    .call(drag);\r\n            }\r\n        }\r\n\r\n        // a function for binding to events on the adapter\r\n        on(eventType: EventType | string, listener: () => void): this {\r\n            if (typeof eventType === 'string') {\r\n                this.event.on(eventType, listener);\r\n            } else {\r\n                this.event.on(EventType[eventType], listener);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with d3:\r\n     * - uses the d3 event system to dispatch layout events such as:\r\n     *   o \"start\" (start layout process)\r\n     *   o \"tick\" (after each layout iteration)\r\n     *   o \"end\" (layout converged and complete).\r\n     * - uses the d3 timer to queue layout iterations.\r\n     * - sets up d3.behavior.drag to drag nodes\r\n     *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n     * returns an instance of the cola.Layout itself with which the user\r\n     * can interact directly.\r\n     */\r\n    export function d3adaptor(): D3StyleLayoutAdaptor {\r\n        return new D3StyleLayoutAdaptor();\r\n    }\r\n","import {dispatch} from 'd3-dispatch'\r\nimport {timer} from 'd3-timer'\r\nimport {drag as d3drag} from 'd3-drag'\r\nimport {Layout, EventType, Event} from './layout'\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\nexport interface D3Context {\r\n    timer: typeof timer; \r\n    drag: typeof d3drag; \r\n    dispatch: typeof dispatch;\r\n    event: any;\r\n}\r\n\r\nexport class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n    event:any;\r\n    trigger(e: Event) {\r\n        var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n        // the dispatcher is actually expecting something of type EventTarget as the second argument\r\n        // so passing the thing above is totally abusing the pattern... not sure what to do about this yet\r\n        this.event.call(d3event.type, <any>d3event); // via d3 dispatcher, e.g. event.start(e);\r\n    }\r\n\r\n    // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n    kick() {\r\n        var t = this.d3Context.timer(() => super.tick() && t.stop());\r\n    }\r\n\r\n    // a function to allow for dragging of nodes\r\n    drag: () => any;\r\n\r\n    constructor(private d3Context: D3Context) {\r\n        super();\r\n        this.event = d3Context.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n        var d3layout = this;\r\n        var drag;\r\n        this.drag = function () {\r\n            if (!drag) {\r\n                var drag = d3Context.drag()\r\n                    .subject(Layout.dragOrigin)\r\n                    .on(\"start.d3adaptor\", Layout.dragStart)\r\n                    .on(\"drag.d3adaptor\", d => {\r\n                        Layout.drag(<any>d, d3Context.event);\r\n                        d3layout.resume(); // restart annealing\r\n                    })\r\n                    .on(\"end.d3adaptor\", Layout.dragEnd);\r\n            }\r\n\r\n            if (!arguments.length) return drag;\r\n\r\n            // this is the context of the function, i.e. the d3 selection\r\n            //this//.on(\"mouseover.adaptor\", colaMouseover)\r\n            //.on(\"mouseout.adaptor\", colaMouseout)\r\n            arguments[0].call(drag);\r\n        }\r\n    }\r\n\r\n    // a function for binding to events on the adapter\r\n    on(eventType: EventType | string, listener: () => void): this {\r\n        if (typeof eventType === 'string') {\r\n            this.event.on(eventType, listener);\r\n        } else {\r\n            this.event.on(EventType[eventType], listener);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import * as d3v3 from './d3v3adaptor'\r\nimport * as d3v4 from './d3v4adaptor'\r\nimport { Layout, EventType, Event } from './layout';\r\n\r\nexport interface D3v3Context { version:string };\r\n\r\nexport interface ID3StyleLayoutAdaptor {\r\n    trigger(e: Event): void;\r\n    kick(): void;\r\n    drag: () => any;\r\n\r\n    on(eventType: EventType | string, listener: () => void): ID3StyleLayoutAdaptor;\r\n}\r\n\r\n\r\n/**\r\n * provides an interface for use with d3:\r\n * Correct way to create way to construct the d3 cola object is to pass the d3 object into the adaptor function, like so:\r\n * \r\n *   `var d3cola = cola.d3adaptor(d3);`\r\n * \r\n * Internally, it will figure out if d3 is version 3 or 4 from the version tag and set up the right event forwarding. Defaults to version 3 if the d3 object is not passed.\r\n * - uses the d3 event system to dispatch layout events such as:\r\n *   o \"start\" (start layout process)\r\n *   o \"tick\" (after each layout iteration)\r\n *   o \"end\" (layout converged and complete).\r\n * - uses the d3 timer to queue layout iterations.\r\n * - sets up d3.behavior.drag to drag nodes\r\n *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n * returns an instance of the cola.Layout itself with which the user\r\n * can interact directly.\r\n */\r\nexport function d3adaptor(d3Context?: d3v4.D3Context | D3v3Context): Layout & ID3StyleLayoutAdaptor {\r\n    if (!d3Context || isD3V3(d3Context)) {\r\n        return new d3v3.D3StyleLayoutAdaptor();\r\n    }\r\n    return new d3v4.D3StyleLayoutAdaptor(d3Context);\r\n}\r\n\r\nfunction isD3V3(d3Context: d3v4.D3Context | D3v3Context): d3Context is D3v3Context {\r\n    const v3exp = /^3\\./;\r\n    return (<any>d3Context).version && (<any>d3Context).version.match(v3exp) !== null;\r\n}\r\n","import {Point} from './geom'\r\nimport {Rectangle} from './rectangle'\r\nimport {Constraint, Solver, Variable} from './vpsc'\r\nimport {Calculator} from './shortestpaths'\r\n    export interface NodeAccessor<Node>{\r\n        getChildren(v:Node) : number[];\r\n        getBounds(v:Node) : Rectangle;\r\n    }\r\n    export class NodeWrapper {\r\n        leaf: boolean;\r\n        parent: NodeWrapper;\r\n        ports: Vert[];\r\n        constructor(public id: number, public rect: Rectangle, public children: number[]) {\r\n            this.leaf = typeof children === 'undefined' || children.length === 0;\r\n        }\r\n    }\r\n    export class Vert {\r\n        constructor(public id: number, public x:number, public y: number, public node: NodeWrapper = null, public line = null) {}\r\n    }\r\n\r\n    export class LongestCommonSubsequence<T> {\r\n        length: number;\r\n        si: number;\r\n        ti: number;\r\n        reversed: boolean;\r\n        constructor(public s: T[], public t: T[]) {\r\n            var mf = LongestCommonSubsequence.findMatch(s, t);\r\n            var tr = t.slice(0).reverse();\r\n            var mr = LongestCommonSubsequence.findMatch(s, tr);\r\n            if (mf.length >= mr.length) {\r\n                this.length = mf.length;\r\n                this.si = mf.si;\r\n                this.ti = mf.ti;\r\n                this.reversed = false;\r\n            } else {\r\n                this.length = mr.length;\r\n                this.si = mr.si;\r\n                this.ti = t.length - mr.ti - mr.length;\r\n                this.reversed = true;\r\n            }\r\n        }\r\n        private static findMatch<T>(s: T[], t: T[]) {\r\n            var m = s.length;\r\n            var n = t.length;\r\n            var match = { length: 0, si: -1, ti: -1 };\r\n            var l = new Array(m);\r\n            for (var i = 0; i < m; i++) {\r\n                l[i] = new Array(n);\r\n                for (var j = 0; j < n; j++)\r\n                    if (s[i] === t[j]) {\r\n                        var v = l[i][j] = (i === 0 || j === 0) ? 1 : l[i - 1][j - 1] + 1;\r\n                        if (v > match.length) {\r\n                            match.length = v;\r\n                            match.si = i - v + 1;\r\n                            match.ti = j - v + 1;\r\n                        };\r\n                    } else l[i][j] = 0;\r\n            }\r\n            return match;\r\n        }\r\n        getSequence(): T[]{\r\n            return this.length >= 0 ? this.s.slice(this.si, this.si + this.length) : [];\r\n        }\r\n    }\r\n    // a horizontal or vertical line of nodes\r\n    export interface GridLine {\r\n        nodes: NodeWrapper[];\r\n        pos: number;\r\n    }\r\n    export class GridRouter<Node> {\r\n        leaves: NodeWrapper[] = null;\r\n        groups: NodeWrapper[];\r\n        nodes: NodeWrapper[];\r\n        cols: GridLine[];\r\n        rows: GridLine[];\r\n        root;\r\n        verts: Vert[];\r\n        edges;\r\n        backToFront;\r\n        obstacles;\r\n        passableEdges;\r\n        private avg(a) { return a.reduce((x, y) => x + y) / a.length }\r\n\r\n        // in the given axis, find sets of leaves overlapping in that axis\r\n        // center of each GridLine is average of all nodes in column\r\n        private getGridLines(axis): GridLine[] {\r\n            var columns = [];\r\n            var ls = this.leaves.slice(0, this.leaves.length);\r\n            while (ls.length > 0) {\r\n                // find a column of all leaves overlapping in axis with the first leaf\r\n                let overlapping = ls.filter(v=> v.rect['overlap' + axis.toUpperCase()](ls[0].rect));\r\n                let col = {\r\n                    nodes: overlapping,\r\n                    pos: this.avg(overlapping.map(v=> v.rect['c' + axis]()))\r\n                };\r\n                columns.push(col);\r\n                col.nodes.forEach(v=> ls.splice(ls.indexOf(v), 1));\r\n            }\r\n            columns.sort((a, b) => a.pos - b.pos)\r\n            return columns;\r\n        }\r\n\r\n        // get the depth of the given node in the group hierarchy\r\n        private getDepth(v) {\r\n            var depth = 0;\r\n            while (v.parent !== this.root) {\r\n                depth++;\r\n                v = v.parent;\r\n            }\r\n            return depth;\r\n        }\r\n\r\n        // medial axes between node centres and also boundary lines for the grid\r\n        private midPoints(a) {\r\n            var gap = a[1] - a[0];\r\n            var mids = [a[0] - gap / 2];\r\n            for (var i = 1; i < a.length; i++) {\r\n                mids.push((a[i] + a[i - 1]) / 2);\r\n            }\r\n            mids.push(a[a.length - 1] + gap / 2);\r\n            return mids;\r\n        }\r\n\r\n        constructor(public originalnodes: Node[], accessor: NodeAccessor<Node>, public groupPadding: number = 12) {\r\n            this.nodes = originalnodes.map((v, i) => new NodeWrapper(i, accessor.getBounds(v), accessor.getChildren(v)));\r\n            this.leaves = this.nodes.filter(v=> v.leaf);\r\n            this.groups = this.nodes.filter(g=> !g.leaf);\r\n            this.cols = this.getGridLines('x');\r\n            this.rows = this.getGridLines('y');\r\n\r\n            // create parents for each node or group that is a member of another's children\r\n            this.groups.forEach(v=>\r\n                v.children.forEach(c=> this.nodes[<number>c].parent = v));\r\n\r\n            // root claims the remaining orphans\r\n            this.root = { children: [] };\r\n            this.nodes.forEach(v=> {\r\n                if (typeof v.parent === 'undefined') {\r\n                    v.parent = this.root;\r\n                    this.root.children.push(v.id);\r\n                }\r\n\r\n                // each node will have grid vertices associated with it,\r\n                // some inside the node and some on the boundary\r\n                // leaf nodes will have exactly one internal node at the center\r\n                // and four boundary nodes\r\n                // groups will have potentially many of each\r\n                v.ports = []\r\n            });\r\n\r\n            // nodes ordered by their position in the group hierarchy\r\n            this.backToFront = this.nodes.slice(0);\r\n            this.backToFront.sort((x, y) => this.getDepth(x) - this.getDepth(y));\r\n\r\n            // compute boundary rectangles for each group\r\n            // has to be done from front to back, i.e. inside groups to outside groups\r\n            // such that each can be made large enough to enclose its interior\r\n            var frontToBackGroups = this.backToFront.slice(0).reverse().filter(g=> !g.leaf);\r\n            frontToBackGroups.forEach(v=> {\r\n                var r = Rectangle.empty();\r\n                v.children.forEach(c=> r = r.union(this.nodes[c].rect));\r\n                v.rect = r.inflate(this.groupPadding);\r\n            });\r\n\r\n            var colMids = this.midPoints(this.cols.map(r=> r.pos));\r\n            var rowMids = this.midPoints(this.rows.map(r=> r.pos));\r\n\r\n            // setup extents of lines\r\n            var rowx = colMids[0], rowX = colMids[colMids.length - 1];\r\n            var coly = rowMids[0], colY = rowMids[rowMids.length - 1];\r\n\r\n            // horizontal lines\r\n            var hlines = this.rows.map(r=> <any>{ x1: rowx, x2: rowX, y1: r.pos, y2: r.pos })\r\n                .concat(rowMids.map(m=> <any>{ x1: rowx, x2: rowX, y1: m, y2: m }));\r\n\r\n            // vertical lines\r\n            var vlines = this.cols.map(c=> <any>{ x1: c.pos, x2: c.pos, y1: coly, y2: colY })\r\n                .concat(colMids.map(m=> <any>{ x1: m, x2: m, y1: coly, y2: colY }));\r\n\r\n            // the full set of lines\r\n            var lines = hlines.concat(vlines);\r\n\r\n            // we record the vertices associated with each line\r\n            lines.forEach(l=> l.verts = []);\r\n\r\n            // the routing graph\r\n            this.verts = [];\r\n            this.edges = [];\r\n\r\n            // create vertices at the crossings of horizontal and vertical grid-lines\r\n            hlines.forEach(h=>\r\n                vlines.forEach(v=> {\r\n                    var p = new Vert(this.verts.length, v.x1, h.y1);\r\n                    h.verts.push(p);\r\n                    v.verts.push(p);\r\n                    this.verts.push(p);\r\n\r\n                    // assign vertices to the nodes immediately under them\r\n                    var i = this.backToFront.length;\r\n                    while (i-- > 0) {\r\n                        var node = this.backToFront[i],\r\n                            r = node.rect;\r\n                        var dx = Math.abs(p.x - r.cx()),\r\n                            dy = Math.abs(p.y - r.cy());\r\n                        if (dx < r.width() / 2 && dy < r.height() / 2) {\r\n                            (<any>p).node = node;\r\n                            break;\r\n                        }\r\n                    }\r\n                })\r\n                );\r\n\r\n            lines.forEach((l, li) => {\r\n                // create vertices at the intersections of nodes and lines\r\n                this.nodes.forEach((v, i) => {\r\n                    v.rect.lineIntersections(l.x1, l.y1, l.x2, l.y2).forEach((intersect, j) => {\r\n                        //console.log(li+','+i+','+j+':'+intersect.x + ',' + intersect.y);\r\n                        var p = new Vert(this.verts.length, intersect.x, intersect.y, v, l);\r\n                        this.verts.push(p);\r\n                        l.verts.push(p);\r\n                        v.ports.push(p);\r\n                    });\r\n                });\r\n\r\n                // split lines into edges joining vertices\r\n                var isHoriz = Math.abs(l.y1 - l.y2) < 0.1;\r\n                var delta = (a, b) => isHoriz ? b.x - a.x : b.y - a.y;\r\n                l.verts.sort(delta);\r\n                for (var i = 1; i < l.verts.length; i++) {\r\n                    var u = l.verts[i - 1], v = l.verts[i];\r\n                    if (u.node && u.node === v.node && u.node.leaf) continue;\r\n                    this.edges.push({ source: u.id, target: v.id, length: Math.abs(delta(u, v)) });\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n\r\n        // find path from v to root including both v and root\r\n        private findLineage(v) {\r\n            var lineage = [v];\r\n            do {\r\n                v = v.parent;\r\n                lineage.push(v);\r\n            } while (v !== this.root);\r\n            return lineage.reverse();\r\n        }\r\n\r\n        // find path connecting a and b through their lowest common ancestor\r\n        private findAncestorPathBetween(a, b) {\r\n            var aa = this.findLineage(a), ba = this.findLineage(b), i = 0;\r\n            while (aa[i] === ba[i]) i++;\r\n            // i-1 to include common ancestor only once (as first element)\r\n            return { commonAncestor: aa[i - 1], lineages: aa.slice(i).concat(ba.slice(i)) };\r\n        }\r\n\r\n        // when finding a path between two nodes a and b, siblings of a and b on the\r\n        // paths from a and b to their least common ancestor are obstacles\r\n        siblingObstacles(a, b) {\r\n            var path = this.findAncestorPathBetween(a, b);\r\n            var lineageLookup = {};\r\n            path.lineages.forEach(v=> lineageLookup[v.id] = {});\r\n            var obstacles = path.commonAncestor.children.filter(v=> !(v in lineageLookup));\r\n\r\n            path.lineages\r\n                .filter(v=> v.parent !== path.commonAncestor)\r\n                .forEach(v=> obstacles = obstacles.concat(v.parent.children.filter(c=> c !== v.id)));\r\n\r\n            return obstacles.map(v=> this.nodes[v]);\r\n        }\r\n\r\n        // for the given routes, extract all the segments orthogonal to the axis x\r\n        // and return all them grouped by x position\r\n        static getSegmentSets(routes, x, y) {\r\n            // vsegments is a list of vertical segments sorted by x position\r\n            var vsegments = [];\r\n            for (var ei = 0; ei < routes.length; ei++) {\r\n                var route = routes[ei];\r\n                for (var si = 0; si < route.length; si++) {\r\n                    var s = <any>route[si];\r\n                    s.edgeid = ei;\r\n                    s.i = si;\r\n                    var sdx = s[1][x] - s[0][x];\r\n                    if (Math.abs(sdx) < 0.1) {\r\n                        vsegments.push(s);\r\n                    }\r\n                }\r\n            }\r\n            vsegments.sort((a, b) => a[0][x] - b[0][x]);\r\n\r\n            // vsegmentsets is a set of sets of segments grouped by x position\r\n            var vsegmentsets = [];\r\n            var segmentset = null;\r\n            for (var i = 0; i < vsegments.length; i++) {\r\n                var s = vsegments[i];\r\n                if (!segmentset || Math.abs(s[0][x] - segmentset.pos) > 0.1) {\r\n                    segmentset = { pos: s[0][x], segments: [] };\r\n                    vsegmentsets.push(segmentset);\r\n                }\r\n                segmentset.segments.push(s);\r\n            }\r\n            return vsegmentsets;\r\n        }\r\n\r\n        // for all segments in this bundle create a vpsc problem such that\r\n        // each segment's x position is a variable and separation constraints\r\n        // are given by the partial order over the edges to which the segments belong\r\n        // for each pair s1,s2 of segments in the open set:\r\n        //   e1 = edge of s1, e2 = edge of s2\r\n        //   if leftOf(e1,e2) create constraint s1.x + gap <= s2.x\r\n        //   else if leftOf(e2,e1) create cons. s2.x + gap <= s1.x\r\n        static nudgeSegs(x: string, y: string, routes, segments, leftOf, gap: number) {\r\n            var n = segments.length;\r\n            if (n <= 1) return;\r\n            var vs = segments.map(s => new Variable(s[0][x]));\r\n            var cs = [];\r\n            for (var i = 0; i < n; i++) {\r\n                for (var j = 0; j < n; j++) {\r\n                    if (i === j) continue;\r\n                    var s1 = segments[i],\r\n                        s2 = segments[j],\r\n                        e1 = s1.edgeid,\r\n                        e2 = s2.edgeid,\r\n                        lind = -1,\r\n                        rind = -1;\r\n                    // in page coordinates (not cartesian) the notion of 'leftof' is flipped in the horizontal axis from the vertical axis\r\n                    // that is, when nudging vertical segments, if they increase in the y(conj) direction the segment belonging to the\r\n                    // 'left' edge actually needs to be nudged to the right\r\n                    // when nudging horizontal segments, if the segments increase in the x direction\r\n                    // then the 'left' segment needs to go higher, i.e. to have y pos less than that of the right\r\n                    if (x == 'x') {\r\n                        if (leftOf(e1, e2)) {\r\n                            //console.log('s1: ' + s1[0][x] + ',' + s1[0][y] + '-' + s1[1][x] + ',' + s1[1][y]);\r\n                            if (s1[0][y] < s1[1][y]) {\r\n                                lind = j, rind = i;\r\n                            } else {\r\n                                lind = i, rind = j;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (leftOf(e1, e2)) {\r\n                            if (s1[0][y] < s1[1][y]) {\r\n                                lind = i, rind = j;\r\n                            } else {\r\n                                lind = j, rind = i;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (lind >= 0) {\r\n                        //console.log(x+' constraint: ' + lind + '<' + rind);\r\n                        cs.push(new Constraint(vs[lind], vs[rind], gap));\r\n                    }\r\n                }\r\n            }\r\n            var solver = new Solver(vs, cs);\r\n            solver.solve();\r\n            vs.forEach((v, i) => {\r\n                var s = segments[i];\r\n                var pos = v.position();\r\n                s[0][x] = s[1][x] = pos;\r\n                var route = routes[s.edgeid];\r\n                if (s.i > 0) route[s.i - 1][1][x] = pos;\r\n                if (s.i < route.length - 1) route[s.i + 1][0][x] = pos;\r\n            });\r\n        }\r\n\r\n        static nudgeSegments(routes, x: string, y: string, leftOf: (e1: number, e2: number) => boolean, gap: number) {\r\n            var vsegmentsets = GridRouter.getSegmentSets(routes, x, y);\r\n            // scan the grouped (by x) segment sets to find co-linear bundles\r\n            for (var i = 0; i < vsegmentsets.length; i++) {\r\n                var ss = vsegmentsets[i];\r\n                var events = [];\r\n                for (var j = 0; j < ss.segments.length; j++) {\r\n                    var s = ss.segments[j];\r\n                    events.push({ type: 0, s: s, pos: Math.min(s[0][y], s[1][y]) });\r\n                    events.push({ type: 1, s: s, pos: Math.max(s[0][y], s[1][y]) });\r\n                }\r\n                events.sort((a, b) => a.pos - b.pos + a.type - b.type);\r\n                var open = [];\r\n                var openCount = 0;\r\n                events.forEach(e=> {\r\n                    if (e.type === 0) {\r\n                        open.push(e.s);\r\n                        openCount++;\r\n                    } else {\r\n                        openCount--;\r\n                    }\r\n                    if (openCount == 0) {\r\n                        GridRouter.nudgeSegs(x, y, routes, open, leftOf, gap);\r\n                        open = [];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // obtain routes for the specified edges, nicely nudged apart\r\n        // warning: edge paths may be reversed such that common paths are ordered consistently within bundles!\r\n        // @param edges list of edges\r\n        // @param nudgeGap how much to space parallel edge segements\r\n        // @param source function to retrieve the index of the source node for a given edge\r\n        // @param target function to retrieve the index of the target node for a given edge\r\n        // @returns an array giving, for each edge, an array of segments, each segment a pair of points in an array\r\n        routeEdges<Edge>(edges: Edge[], nudgeGap: number, source: (e: Edge) => number, target: (e: Edge) => number): Point[][][] {\r\n            var routePaths = edges.map(e=> this.route(source(e), target(e)));\r\n            var order = GridRouter.orderEdges(routePaths);\r\n            var routes = routePaths.map(function (e) { return GridRouter.makeSegments(e); });\r\n            GridRouter.nudgeSegments(routes, 'x', 'y', order, nudgeGap);\r\n            GridRouter.nudgeSegments(routes, 'y', 'x', order, nudgeGap);\r\n            GridRouter.unreverseEdges(routes, routePaths);\r\n            return routes;\r\n        }\r\n\r\n        // path may have been reversed by the subsequence processing in orderEdges\r\n        // so now we need to restore the original order\r\n        static unreverseEdges(routes, routePaths) {\r\n            routes.forEach((segments, i) => {\r\n                var path = routePaths[i];\r\n                if ((<any>path).reversed) {\r\n                    segments.reverse(); // reverse order of segments\r\n                    segments.forEach(function (segment) {\r\n                        segment.reverse();  // reverse each segment\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        static angleBetween2Lines(line1: Point[], line2: Point[]): number {\r\n            var angle1 = Math.atan2(line1[0].y - line1[1].y,\r\n                line1[0].x - line1[1].x);\r\n            var angle2 = Math.atan2(line2[0].y - line2[1].y,\r\n                line2[0].x - line2[1].x);\r\n            var diff = angle1 - angle2;\r\n            if (diff > Math.PI || diff < -Math.PI) {\r\n                diff = angle2 - angle1;\r\n            }\r\n            return diff;\r\n        }\r\n\r\n        // does the path a-b-c describe a left turn?\r\n        private static isLeft(a, b, c) {\r\n            return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) <= 0;\r\n        }\r\n\r\n        // for the given list of ordered pairs, returns a function that (efficiently) looks-up a specific pair to\r\n        // see if it exists in the list\r\n        private static getOrder(pairs: { l: number; r: number }[]): (l: number, r: number) => boolean {\r\n            var outgoing = {};\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                var p = pairs[i];\r\n                if (typeof outgoing[p.l] === 'undefined') outgoing[p.l] = {};\r\n                outgoing[p.l][p.r] = true;\r\n            }\r\n            return (l, r) => typeof outgoing[l] !== 'undefined' && outgoing[l][r];\r\n        }\r\n\r\n        // returns an ordering (a lookup function) that determines the correct order to nudge the\r\n        // edge paths apart to minimize crossings\r\n        static orderEdges(edges) {\r\n            var edgeOrder = [];\r\n            for (var i = 0; i < edges.length - 1; i++) {\r\n                for (var j = i + 1; j < edges.length; j++) {\r\n                    var e = edges[i],\r\n                        f = edges[j],\r\n                        lcs = new LongestCommonSubsequence(e, f);\r\n                    var u, vi, vj;\r\n                    if (lcs.length === 0)\r\n                        continue; // no common subpath\r\n                    if (lcs.reversed) {\r\n                        // if we found a common subpath but one of the edges runs the wrong way,\r\n                        // then reverse f.\r\n                        f.reverse();\r\n                        f.reversed = true;\r\n                        lcs = new LongestCommonSubsequence(e, f);\r\n                    }\r\n                    if ((lcs.si <= 0 || lcs.ti <= 0) &&\r\n                        (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length)) {\r\n                        // the paths do not diverge, so make an arbitrary ordering decision\r\n                        edgeOrder.push({ l: i, r: j });\r\n                        continue;\r\n                    }\r\n                    if (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length) {\r\n                        // if the common subsequence of the\r\n                        // two edges being considered goes all the way to the\r\n                        // end of one (or both) of the lines then we have to\r\n                        // base our ordering decision on the other end of the\r\n                        // common subsequence\r\n                        u = e[lcs.si + 1];\r\n                        vj = e[lcs.si - 1];\r\n                        vi = f[lcs.ti - 1];\r\n                    } else {\r\n                        u = e[lcs.si + lcs.length - 2];\r\n                        vi = e[lcs.si + lcs.length];\r\n                        vj = f[lcs.ti + lcs.length];\r\n                    }\r\n                    if (GridRouter.isLeft(u, vi, vj)) {\r\n                        edgeOrder.push({ l: j, r: i });\r\n                    } else {\r\n                        edgeOrder.push({ l: i, r: j });\r\n                    }\r\n                }\r\n            }\r\n            //edgeOrder.forEach(function (e) { console.log('l:' + e.l + ',r:' + e.r) });\r\n            return GridRouter.getOrder(edgeOrder);\r\n        }\r\n\r\n        // for an orthogonal path described by a sequence of points, create a list of segments\r\n        // if consecutive segments would make a straight line they are merged into a single segment\r\n        // segments are over cloned points, not the original vertices\r\n        static makeSegments(path: Point[]): Point[][] {\r\n            function copyPoint(p: Point) {\r\n                return <Point>{ x: p.x, y: p.y };\r\n            }\r\n            var isStraight = (a, b, c) => Math.abs((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) < 0.001;\r\n            var segments = [];\r\n            var a = copyPoint(path[0]);\r\n            for (var i = 1; i < path.length; i++) {\r\n                var b = copyPoint(path[i]), c = i < path.length - 1 ? path[i + 1] : null;\r\n                if (!c || !isStraight(a, b, c)) {\r\n                    segments.push([a, b]);\r\n                    a = b;\r\n                }\r\n            }\r\n            return segments;\r\n        }\r\n\r\n        // find a route between node s and node t\r\n        // returns an array of indices to verts\r\n        route(s: number, t: number): Point[] {\r\n            var source = this.nodes[<number>s], target = this.nodes[<number>t];\r\n            this.obstacles = this.siblingObstacles(source, target);\r\n\r\n            var obstacleLookup = {};\r\n            this.obstacles.forEach(o => obstacleLookup[o.id] = o);\r\n            this.passableEdges = this.edges.filter(e=> {\r\n                var u = this.verts[e.source],\r\n                    v = this.verts[e.target];\r\n                return !(u.node && u.node.id in obstacleLookup\r\n                    || v.node && v.node.id in obstacleLookup);\r\n            });\r\n\r\n            // add dummy segments linking ports inside source and target\r\n            for (var i = 1; i < source.ports.length; i++) {\r\n                var u = source.ports[0].id;\r\n                var v = source.ports[i].id;\r\n                this.passableEdges.push({\r\n                    source: u,\r\n                    target: v,\r\n                    length: 0\r\n                });\r\n            }\r\n            for (var i = 1; i < target.ports.length; i++) {\r\n                var u = target.ports[0].id;\r\n                var v = target.ports[i].id;\r\n                this.passableEdges.push({\r\n                    source: u,\r\n                    target: v,\r\n                    length: 0\r\n                });\r\n            }\r\n\r\n            var getSource = e=> e.source,\r\n                getTarget = e=> e.target,\r\n                getLength = e=> e.length;\r\n\r\n            var shortestPathCalculator = new Calculator(this.verts.length, this.passableEdges, getSource, getTarget, getLength);\r\n            var bendPenalty = (u, v, w) => {\r\n                var a = this.verts[u], b = this.verts[v], c = this.verts[w];\r\n                var dx = Math.abs(c.x - a.x), dy = Math.abs(c.y - a.y);\r\n                // don't count bends from internal node edges\r\n                if (a.node === source && a.node === b.node || b.node === target && b.node === c.node)\r\n                    return 0;\r\n                return dx > 1 && dy > 1 ? 1000 : 0;\r\n            };\r\n\r\n            // get shortest path\r\n            var shortestPath = shortestPathCalculator.PathFromNodeToNodeWithPrevCost(\r\n                source.ports[0].id, target.ports[0].id,\r\n                bendPenalty);\r\n\r\n            // shortest path is reversed and does not include the target port\r\n            var pathPoints = shortestPath.reverse().map(vi => this.verts[vi]);\r\n            pathPoints.push(this.nodes[target.id].ports[0]);\r\n\r\n            // filter out any extra end points that are inside the source or target (i.e. the dummy segments above)\r\n            return pathPoints.filter((v, i) =>\r\n                !(i < pathPoints.length - 1 && pathPoints[i + 1].node === source && v.node === source\r\n                    || i > 0 && v.node === target && pathPoints[i - 1].node === target));\r\n        }\r\n\r\n        static getRoutePath(route: Point[][], cornerradius: number, arrowwidth: number, arrowheight: number): { routepath: string; arrowpath: string } {\r\n            var result = {\r\n                routepath: 'M ' + route[0][0].x + ' ' + route[0][0].y + ' ',\r\n                arrowpath: ''\r\n            };\r\n            if (route.length > 1) {\r\n                for (var i = 0; i < route.length; i++) {\r\n                    var li = route[i];\r\n                    var x = li[1].x, y = li[1].y;\r\n                    var dx = x - li[0].x;\r\n                    var dy = y - li[0].y;\r\n                    if (i < route.length - 1) {\r\n                        if (Math.abs(dx) > 0) {\r\n                            x -= dx / Math.abs(dx) * cornerradius;\r\n                        } else {\r\n                            y -= dy / Math.abs(dy) * cornerradius;\r\n                        }\r\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                        var l = route[i + 1];\r\n                        var x0 = l[0].x, y0 = l[0].y;\r\n                        var x1 = l[1].x;\r\n                        var y1 = l[1].y;\r\n                        dx = x1 - x0;\r\n                        dy = y1 - y0;\r\n                        var angle = GridRouter.angleBetween2Lines(li, l) < 0 ? 1 : 0;\r\n                        //console.log(cola.GridRouter.angleBetween2Lines(li, l))\r\n                        var x2, y2;\r\n                        if (Math.abs(dx) > 0) {\r\n                            x2 = x0 + dx / Math.abs(dx) * cornerradius;\r\n                            y2 = y0;\r\n                        } else {\r\n                            x2 = x0;\r\n                            y2 = y0 + dy / Math.abs(dy) * cornerradius;\r\n                        }\r\n                        var cx = Math.abs(x2 - x);\r\n                        var cy = Math.abs(y2 - y);\r\n                        result.routepath += 'A ' + cx + ' ' + cy + ' 0 0 ' + angle + ' ' + x2 + ' ' + y2 + ' ';\r\n                    } else {\r\n                        var arrowtip = [x, y];\r\n                        var arrowcorner1, arrowcorner2;\r\n                        if (Math.abs(dx) > 0) {\r\n                            x -= dx / Math.abs(dx) * arrowheight;\r\n                            arrowcorner1 = [x, y + arrowwidth];\r\n                            arrowcorner2 = [x, y - arrowwidth];\r\n                        } else {\r\n                            y -= dy / Math.abs(dy) * arrowheight;\r\n                            arrowcorner1 = [x + arrowwidth, y];\r\n                            arrowcorner2 = [x - arrowwidth, y];\r\n                        }\r\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                        if (arrowheight > 0) {\r\n                            result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                            + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var li = route[0];\r\n                var x = li[1].x, y = li[1].y;\r\n                var dx = x - li[0].x;\r\n                var dy = y - li[0].y;\r\n                var arrowtip = [x, y];\r\n                var arrowcorner1, arrowcorner2;\r\n                if (Math.abs(dx) > 0) {\r\n                    x -= dx / Math.abs(dx) * arrowheight;\r\n                    arrowcorner1 = [x, y + arrowwidth];\r\n                    arrowcorner2 = [x, y - arrowwidth];\r\n                } else {\r\n                    y -= dy / Math.abs(dy) * arrowheight;\r\n                    arrowcorner1 = [x + arrowwidth, y];\r\n                    arrowcorner2 = [x - arrowwidth, y];\r\n                }\r\n                result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                if (arrowheight > 0) {\r\n                    result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                    + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n","import {Calculator} from './shortestpaths'\r\nimport {Descent} from './descent'\r\nimport {Projection, GraphNode, Rectangle} from './rectangle'\r\nimport {Variable} from './vpsc'\r\nimport {jaccardLinkLengths, LinkLengthAccessor} from './linklengths'\r\n\r\nexport class Link3D {\r\n        length: number;\r\n        constructor(public source: number, public target: number) { }\r\n        actualLength(x: number[][]) {\r\n            return Math.sqrt(\r\n                x.reduce((c: number, v: number[]) => {\r\n                    const dx = v[this.target] - v[this.source];\r\n                    return c + dx * dx;\r\n                }, 0));\r\n        }\r\n    }\r\n    export class Node3D implements GraphNode {\r\n        // if fixed, layout will not move the node from its specified starting position\r\n        fixed: boolean;\r\n        width: number;\r\n        height: number;\r\n        px: number;\r\n        py: number;\r\n        bounds: Rectangle;\r\n        variable: Variable;\r\n        constructor(\r\n            public x: number = 0,\r\n            public y: number = 0,\r\n            public z: number = 0) { }\r\n    }\r\n    export class Layout3D {\r\n        static dims = ['x', 'y', 'z'];\r\n        static k = Layout3D.dims.length;\r\n        result: number[][];\r\n        constraints: any[] = null;\r\n\r\n        constructor(public nodes: Node3D[], public links: Link3D[], public idealLinkLength: number = 1) {\r\n            this.result = new Array(Layout3D.k);\r\n            for (var i = 0; i < Layout3D.k; ++i) {\r\n                this.result[i] = new Array(nodes.length);\r\n            }\r\n            nodes.forEach((v, i) => {\r\n                for (var dim of Layout3D.dims) {\r\n                    if (typeof v[dim] == 'undefined') v[dim] = Math.random();\r\n                }\r\n                this.result[0][i] = v.x;\r\n                this.result[1][i] = v.y;\r\n                this.result[2][i] = v.z;\r\n            });\r\n        };\r\n\r\n        linkLength(l: Link3D): number {\r\n            return l.actualLength(this.result);\r\n        }\r\n\r\n        useJaccardLinkLengths: boolean = true;\r\n\r\n        descent: Descent;\r\n        start(iterations: number = 100): Layout3D {\r\n            const n = this.nodes.length;\r\n\r\n            var linkAccessor = new LinkAccessor();\r\n\r\n            if (this.useJaccardLinkLengths)\r\n                jaccardLinkLengths(this.links, linkAccessor, 1.5);\r\n\r\n            this.links.forEach(e => e.length *= this.idealLinkLength);\r\n\r\n            // Create the distance matrix that Cola needs\r\n            const distanceMatrix = (new Calculator(n, this.links,\r\n                e=> e.source, e=> e.target, e => e.length)).DistanceMatrix();\r\n\r\n            const D = Descent.createSquareMatrix(n, (i, j) => distanceMatrix[i][j]);\r\n\r\n            // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\r\n            // otherwise 2.\r\n            var G = Descent.createSquareMatrix(n, function () { return 2 });\r\n            this.links.forEach(({ source, target }) => G[source][target] = G[target][source] = 1);\r\n\r\n            this.descent = new Descent(this.result, D);\r\n            this.descent.threshold = 1e-3;\r\n            this.descent.G = G;\r\n            //let constraints = this.links.map(e=> <any>{\r\n            //    axis: 'y', left: e.source, right: e.target, gap: e.length*1.5\r\n            //});\r\n            if (this.constraints)\r\n                this.descent.project = new Projection(<GraphNode[]>this.nodes, null, null, this.constraints).projectFunctions();\r\n\r\n            for (var i = 0; i < this.nodes.length; i++) {\r\n                var v = this.nodes[i];\r\n                if (v.fixed) {\r\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\r\n                }\r\n            }\r\n\r\n            this.descent.run(iterations);\r\n            return this;\r\n        }\r\n\r\n        tick(): number {\r\n            this.descent.locks.clear();\r\n            for (var i = 0; i < this.nodes.length; i++) {\r\n                var v = this.nodes[i];\r\n                if (v.fixed) {\r\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\r\n                }\r\n            }\r\n            return this.descent.rungeKutta();\r\n        }\r\n    }\r\n\r\n    class LinkAccessor implements LinkLengthAccessor<any> {\r\n        getSourceIndex(e: any): number { return e.source; }\r\n        getTargetIndex(e: any): number { return e.target; }\r\n        getLength(e: any): number { return e.length; }\r\n        setLength(e: any, l: number) { e.length = l; }\r\n    }\r\n","import {Node, Link, Layout} from './layout'\r\nimport {GridRouter} from './gridrouter'\r\nimport {Point} from './geom'\r\n\r\n/**\r\n * @property nudgeGap spacing between parallel edge segments\r\n * @property margin space around nodes\r\n * @property groupMargin space around groups\r\n */\r\nexport function gridify(pgLayout, nudgeGap: number, margin: number, groupMargin: number) {\r\n    pgLayout.cola.start(0, 0, 0, 10, false);\r\n    let gridrouter = route(pgLayout.cola.nodes(), pgLayout.cola.groups(), margin, groupMargin);\r\n    return gridrouter.routeEdges<any>(pgLayout.powerGraph.powerEdges, nudgeGap, e=> e.source.routerNode.id, e=> e.target.routerNode.id);\r\n}\r\n\r\nfunction route(nodes, groups, margin: number, groupMargin: number) {\r\n    nodes.forEach(d => {\r\n        d.routerNode = <any>{\r\n            name: d.name,\r\n            bounds: d.bounds.inflate(-margin)\r\n        };\r\n    });\r\n    groups.forEach(d => {\r\n        d.routerNode = <any>{\r\n            bounds: d.bounds.inflate(-groupMargin),\r\n            children: (typeof d.groups !== 'undefined' ? d.groups.map(c=> nodes.length + c.id) : [])\r\n                .concat(typeof d.leaves !== 'undefined' ? d.leaves.map(c=> c.index) : [])\r\n        };\r\n    });\r\n    let gridRouterNodes = nodes.concat(groups).map((d, i) => {\r\n        d.routerNode.id = i;\r\n        return d.routerNode;\r\n    });\r\n    return new GridRouter(gridRouterNodes, {\r\n        getChildren: (v: any) => v.children,\r\n        getBounds: v => v.bounds\r\n    }, margin - groupMargin);\r\n}\r\n\r\nexport function powerGraphGridLayout(\r\n    graph: { nodes: Node[], links: Link<Node>[] },\r\n    size: number[],\r\n    grouppadding: number)\r\n{\r\n    // compute power graph\r\n    var powerGraph;\r\n    graph.nodes.forEach((v,i) => (<any>v).index = i);\r\n    new Layout()\r\n        .avoidOverlaps(false)\r\n        .nodes(graph.nodes)\r\n        .links(graph.links)\r\n        .powerGraphGroups(function (d) {\r\n            powerGraph = d;\r\n            powerGraph.groups.forEach(v=> v.padding = grouppadding);\r\n        });\r\n\r\n    // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n    // power edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n    var n = graph.nodes.length;\r\n    var edges = [];\r\n    var vs = graph.nodes.slice(0);\r\n    vs.forEach((v, i) => (<any>v).index = i);\r\n    powerGraph.groups.forEach(g => {\r\n        var sourceInd = g.index = g.id + n;\r\n        vs.push(g);\r\n        if (typeof g.leaves !== 'undefined')\r\n            g.leaves.forEach(v => edges.push({ source: sourceInd, target: v.index }));\r\n        if (typeof g.groups !== 'undefined')\r\n            g.groups.forEach(gg => edges.push({ source: sourceInd, target: gg.id + n }));\r\n    });\r\n    powerGraph.powerEdges.forEach(e=> {\r\n        edges.push({ source: e.source.index, target: e.target.index });\r\n    });\r\n\r\n    // layout the flat graph with dummy nodes and edges\r\n    new Layout()\r\n        .size(size)\r\n        .nodes(vs)\r\n        .links(edges)\r\n        .avoidOverlaps(false)\r\n        .linkDistance(30)\r\n        .symmetricDiffLinkLengths(5)\r\n        .convergenceThreshold(1e-4)\r\n        .start(100, 0, 0, 0, false);\r\n\r\n    // final layout taking node positions from above as starting positions\r\n    // subject to group containment constraints\r\n    // and then gridifying the layout\r\n    return {\r\n        cola:\r\n            new Layout()\r\n            .convergenceThreshold(1e-3)\r\n            .size(size)\r\n            .avoidOverlaps(true)\r\n            .nodes(graph.nodes)\r\n            .links(graph.links)\r\n        //.flowLayout('y', 30)\r\n            .groupCompactness(1e-4)\r\n            .linkDistance(30)\r\n            .symmetricDiffLinkLengths(5)\r\n            .powerGraphGroups(function (d) {\r\n                powerGraph = d;\r\n                powerGraph.groups.forEach(function (v) {\r\n                    v.padding = grouppadding\r\n                });\r\n            }).start(50, 0, 100, 0, false),\r\n        powerGraph: powerGraph\r\n    };\r\n}\r\n","export * from './src/adaptor'\r\nexport * from './src/d3adaptor'\r\nexport * from './src/descent'\r\nexport * from './src/geom'\r\nexport * from './src/gridrouter'\r\nexport * from './src/handledisconnected'\r\nexport * from './src/layout'\r\nexport * from './src/layout3d'\r\nexport * from './src/linklengths'\r\nexport * from './src/powergraph'\r\nexport * from './src/pqueue'\r\nexport * from './src/rbtree'\r\nexport * from './src/rectangle'\r\nexport * from './src/shortestpaths'\r\nexport * from './src/vpsc'\r\nexport * from './src/batch'\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"webcola\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"webcola\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeCola\"] = factory(require(\"webcola\"));\n\telse\n\t\troot[\"cytoscapeCola\"] = factory(root[\"webcola\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar assign = __webpack_require__(1);\nvar defaults = __webpack_require__(2);\nvar cola = __webpack_require__(5) || (typeof window !== 'undefined' ? window.cola : null);\nvar raf = __webpack_require__(4);\nvar isString = function isString(o) {\n  return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof('');\n};\nvar isNumber = function isNumber(o) {\n  return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof(0);\n};\nvar isObject = function isObject(o) {\n  return o != null && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof({});\n};\nvar isFunction = function isFunction(o) {\n  return o != null && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof(function () {});\n};\nvar nop = function nop() {};\n\nvar getOptVal = function getOptVal(val, ele) {\n  if (isFunction(val)) {\n    var fn = val;\n    return fn.apply(ele, [ele]);\n  } else {\n    return val;\n  }\n};\n\n// constructor\n// options : object containing layout options\nfunction ColaLayout(options) {\n  this.options = assign({}, defaults, options);\n}\n\n// runs the layout\nColaLayout.prototype.run = function () {\n  var layout = this;\n  var options = this.options;\n\n  layout.manuallyStopped = false;\n\n  var cy = options.cy; // cy is automatically populated for us in the constructor\n  var eles = options.eles;\n  var nodes = eles.nodes();\n  var edges = eles.edges();\n  var ready = false;\n\n  var isParent = function isParent(ele) {\n    return ele.isParent();\n  };\n\n  var parentNodes = nodes.filter(isParent);\n\n  var nonparentNodes = nodes.subtract(parentNodes);\n\n  var bb = options.boundingBox || { x1: 0, y1: 0, w: cy.width(), h: cy.height() };\n  if (bb.x2 === undefined) {\n    bb.x2 = bb.x1 + bb.w;\n  }\n  if (bb.w === undefined) {\n    bb.w = bb.x2 - bb.x1;\n  }\n  if (bb.y2 === undefined) {\n    bb.y2 = bb.y1 + bb.h;\n  }\n  if (bb.h === undefined) {\n    bb.h = bb.y2 - bb.y1;\n  }\n\n  var updateNodePositions = function updateNodePositions() {\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var dimensions = node.layoutDimensions(options);\n      var scratch = node.scratch('cola');\n\n      // update node dims\n      if (!scratch.updatedDims) {\n        var padding = getOptVal(options.nodeSpacing, node);\n\n        scratch.width = dimensions.w + 2 * padding;\n        scratch.height = dimensions.h + 2 * padding;\n      }\n    }\n\n    nodes.positions(function (node) {\n      var scratch = node.scratch().cola;\n      var retPos = void 0;\n\n      if (!node.grabbed() && nonparentNodes.contains(node)) {\n        retPos = {\n          x: bb.x1 + scratch.x,\n          y: bb.y1 + scratch.y\n        };\n\n        if (!isNumber(retPos.x) || !isNumber(retPos.y)) {\n          retPos = undefined;\n        }\n      }\n\n      return retPos;\n    });\n\n    nodes.updateCompoundBounds(); // because the way this layout sets positions is buggy for some reason; ref #878\n\n    if (!ready) {\n      onReady();\n      ready = true;\n    }\n\n    if (options.fit) {\n      cy.fit(options.padding);\n    }\n  };\n\n  var onDone = function onDone() {\n    if (options.ungrabifyWhileSimulating) {\n      grabbableNodes.grabify();\n    }\n\n    cy.off('destroy', destroyHandler);\n\n    nodes.off('grab free position', grabHandler);\n    nodes.off('lock unlock', lockHandler);\n\n    // trigger layoutstop when the layout stops (e.g. finishes)\n    layout.one('layoutstop', options.stop);\n    layout.trigger({ type: 'layoutstop', layout: layout });\n  };\n\n  var onReady = function onReady() {\n    // trigger layoutready when each node has had its position set at least once\n    layout.one('layoutready', options.ready);\n    layout.trigger({ type: 'layoutready', layout: layout });\n  };\n\n  var ticksPerFrame = options.refresh;\n\n  if (options.refresh < 0) {\n    ticksPerFrame = 1;\n  } else {\n    ticksPerFrame = Math.max(1, ticksPerFrame); // at least 1\n  }\n\n  var adaptor = layout.adaptor = cola.adaptor({\n    trigger: function trigger(e) {\n      // on sim event\n      var TICK = cola.EventType ? cola.EventType.tick : null;\n      var END = cola.EventType ? cola.EventType.end : null;\n\n      switch (e.type) {\n        case 'tick':\n        case TICK:\n          if (options.animate) {\n            updateNodePositions();\n          }\n          break;\n\n        case 'end':\n        case END:\n          updateNodePositions();\n          if (!options.infinite) {\n            onDone();\n          }\n          break;\n      }\n    },\n\n    kick: function kick() {\n      // kick off the simulation\n      //let skip = 0;\n\n      var firstTick = true;\n\n      var inftick = function inftick() {\n        if (layout.manuallyStopped) {\n          onDone();\n\n          return true;\n        }\n\n        var ret = adaptor.tick();\n\n        if (!options.infinite && !firstTick) {\n          adaptor.convergenceThreshold(options.convergenceThreshold);\n        }\n\n        firstTick = false;\n\n        if (ret && options.infinite) {\n          // resume layout if done\n          adaptor.resume(); // resume => new kick\n        }\n\n        return ret; // allow regular finish b/c of new kick\n      };\n\n      var multitick = function multitick() {\n        // multiple ticks in a row\n        var ret = void 0;\n\n        for (var i = 0; i < ticksPerFrame && !ret; i++) {\n          ret = ret || inftick(); // pick up true ret vals => sim done\n        }\n\n        return ret;\n      };\n\n      if (options.animate) {\n        var frame = function frame() {\n          if (multitick()) {\n            return;\n          }\n\n          raf(frame);\n        };\n\n        raf(frame);\n      } else {\n        while (!inftick()) {\n          // keep going...\n        }\n      }\n    },\n\n    on: nop, // dummy; not needed\n\n    drag: nop // not needed for our case\n  });\n  layout.adaptor = adaptor;\n\n  // if set no grabbing during layout\n  var grabbableNodes = nodes.filter(':grabbable');\n  if (options.ungrabifyWhileSimulating) {\n    grabbableNodes.ungrabify();\n  }\n\n  var destroyHandler = void 0;\n  cy.one('destroy', destroyHandler = function destroyHandler() {\n    layout.stop();\n  });\n\n  // handle node dragging\n  var grabHandler = void 0;\n  nodes.on('grab free position', grabHandler = function grabHandler(e) {\n    var node = this;\n    var scrCola = node.scratch().cola;\n    var pos = node.position();\n    var nodeIsTarget = e.cyTarget === node || e.target === node;\n\n    if (!nodeIsTarget) {\n      return;\n    }\n\n    switch (e.type) {\n      case 'grab':\n        adaptor.dragstart(scrCola);\n        break;\n      case 'free':\n        adaptor.dragend(scrCola);\n        break;\n      case 'position':\n        // only update when different (i.e. manual .position() call or drag) so we don't loop needlessly\n        if (scrCola.px !== pos.x - bb.x1 || scrCola.py !== pos.y - bb.y1) {\n          scrCola.px = pos.x - bb.x1;\n          scrCola.py = pos.y - bb.y1;\n        }\n        break;\n    }\n  });\n\n  var lockHandler = void 0;\n  nodes.on('lock unlock', lockHandler = function lockHandler() {\n    var node = this;\n    var scrCola = node.scratch().cola;\n\n    scrCola.fixed = node.locked();\n\n    if (node.locked()) {\n      adaptor.dragstart(scrCola);\n    } else {\n      adaptor.dragend(scrCola);\n    }\n  });\n\n  // add nodes to cola\n  adaptor.nodes(nonparentNodes.map(function (node, i) {\n    var padding = getOptVal(options.nodeSpacing, node);\n    var pos = node.position();\n    var dimensions = node.layoutDimensions(options);\n\n    var struct = node.scratch().cola = {\n      x: options.randomize && !node.locked() || pos.x === undefined ? Math.round(Math.random() * bb.w) : pos.x,\n      y: options.randomize && !node.locked() || pos.y === undefined ? Math.round(Math.random() * bb.h) : pos.y,\n      width: dimensions.w + 2 * padding,\n      height: dimensions.h + 2 * padding,\n      index: i,\n      fixed: node.locked()\n    };\n\n    return struct;\n  }));\n\n  // the constraints to be added on nodes\n  var constraints = [];\n\n  if (options.alignment) {\n    // then set alignment constraints\n\n    if (options.alignment.vertical) {\n      var verticalAlignments = options.alignment.vertical;\n      verticalAlignments.forEach(function (alignment) {\n        var offsetsX = [];\n        alignment.forEach(function (nodeData) {\n          var node = nodeData.node;\n          var scrCola = node.scratch().cola;\n          var index = scrCola.index;\n          offsetsX.push({\n            node: index,\n            offset: nodeData.offset ? nodeData.offset : 0\n          });\n        });\n        constraints.push({\n          type: 'alignment',\n          axis: 'x',\n          offsets: offsetsX\n        });\n      });\n    }\n\n    if (options.alignment.horizontal) {\n      var horizontalAlignments = options.alignment.horizontal;\n      horizontalAlignments.forEach(function (alignment) {\n        var offsetsY = [];\n        alignment.forEach(function (nodeData) {\n          var node = nodeData.node;\n          var scrCola = node.scratch().cola;\n          var index = scrCola.index;\n          offsetsY.push({\n            node: index,\n            offset: nodeData.offset ? nodeData.offset : 0\n          });\n        });\n        constraints.push({\n          type: 'alignment',\n          axis: 'y',\n          offsets: offsetsY\n        });\n      });\n    }\n  }\n\n  // if gapInequalities variable is set add each inequality constraint to list of constraints\n  if (options.gapInequalities) {\n    options.gapInequalities.forEach(function (inequality) {\n\n      // for the constraints to be passed to cola layout adaptor use indices of nodes,\n      // not the nodes themselves\n      var leftIndex = inequality.left.scratch().cola.index;\n      var rightIndex = inequality.right.scratch().cola.index;\n\n      constraints.push({\n        axis: inequality.axis,\n        left: leftIndex,\n        right: rightIndex,\n        gap: inequality.gap,\n        equality: inequality.equality\n      });\n    });\n  }\n\n  // add constraints if any\n  if (constraints.length > 0) {\n    adaptor.constraints(constraints);\n  }\n\n  // add compound nodes to cola\n  adaptor.groups(parentNodes.map(function (node, i) {\n    // add basic group incl leaf nodes\n    var optPadding = getOptVal(options.nodeSpacing, node);\n    var getPadding = function getPadding(d) {\n      return parseFloat(node.style('padding-' + d));\n    };\n\n    var pleft = getPadding('left') + optPadding;\n    var pright = getPadding('right') + optPadding;\n    var ptop = getPadding('top') + optPadding;\n    var pbottom = getPadding('bottom') + optPadding;\n\n    node.scratch().cola = {\n      index: i,\n\n      padding: Math.max(pleft, pright, ptop, pbottom),\n\n      // leaves should only contain direct descendants (children),\n      // not the leaves of nested compound nodes or any nodes that are compounds themselves\n      leaves: node.children().intersection(nonparentNodes).map(function (child) {\n        return child[0].scratch().cola.index;\n      }),\n\n      fixed: node.locked()\n    };\n\n    return node;\n  }).map(function (node) {\n    // add subgroups\n    node.scratch().cola.groups = node.children().intersection(parentNodes).map(function (child) {\n      return child.scratch().cola.index;\n    });\n\n    return node.scratch().cola;\n  }));\n\n  // get the edge length setting mechanism\n  var length = void 0;\n  var lengthFnName = void 0;\n  if (options.edgeLength != null) {\n    length = options.edgeLength;\n    lengthFnName = 'linkDistance';\n  } else if (options.edgeSymDiffLength != null) {\n    length = options.edgeSymDiffLength;\n    lengthFnName = 'symmetricDiffLinkLengths';\n  } else if (options.edgeJaccardLength != null) {\n    length = options.edgeJaccardLength;\n    lengthFnName = 'jaccardLinkLengths';\n  } else {\n    length = 100;\n    lengthFnName = 'linkDistance';\n  }\n\n  var lengthGetter = function lengthGetter(link) {\n    return link.calcLength;\n  };\n\n  // add the edges to cola\n  adaptor.links(edges.stdFilter(function (edge) {\n    return nonparentNodes.contains(edge.source()) && nonparentNodes.contains(edge.target());\n  }).map(function (edge) {\n    var c = edge.scratch().cola = {\n      source: edge.source()[0].scratch().cola.index,\n      target: edge.target()[0].scratch().cola.index\n    };\n\n    if (length != null) {\n      c.calcLength = getOptVal(length, edge);\n    }\n\n    return c;\n  }));\n\n  adaptor.size([bb.w, bb.h]);\n\n  if (length != null) {\n    adaptor[lengthFnName](lengthGetter);\n  }\n\n  // set the flow of cola\n  if (options.flow) {\n    var flow = void 0;\n    var defAxis = 'y';\n    var defMinSep = 50;\n\n    if (isString(options.flow)) {\n      flow = {\n        axis: options.flow,\n        minSeparation: defMinSep\n      };\n    } else if (isNumber(options.flow)) {\n      flow = {\n        axis: defAxis,\n        minSeparation: options.flow\n      };\n    } else if (isObject(options.flow)) {\n      flow = options.flow;\n\n      flow.axis = flow.axis || defAxis;\n      flow.minSeparation = flow.minSeparation != null ? flow.minSeparation : defMinSep;\n    } else {\n      // e.g. options.flow: true\n      flow = {\n        axis: defAxis,\n        minSeparation: defMinSep\n      };\n    }\n\n    adaptor.flowLayout(flow.axis, flow.minSeparation);\n  }\n\n  layout.trigger({ type: 'layoutstart', layout: layout });\n\n  adaptor.avoidOverlaps(options.avoidOverlap).handleDisconnected(options.handleDisconnected).start(options.unconstrIter, options.userConstIter, options.allConstIter);\n\n  if (!options.infinite) {\n    setTimeout(function () {\n      if (!layout.manuallyStopped) {\n        adaptor.stop();\n      }\n    }, options.maxSimulationTime);\n  }\n\n  return this; // chaining\n};\n\n// called on continuous layouts to stop them before they finish\nColaLayout.prototype.stop = function () {\n  if (this.adaptor) {\n    this.manuallyStopped = true;\n    this.adaptor.stop();\n  }\n\n  return this; // chaining\n};\n\nmodule.exports = ColaLayout;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Simple, internal Object.assign() polyfill for options objects etc.\n\nmodule.exports = Object.assign != null ? Object.assign.bind(Object) : function (tgt) {\n  for (var _len = arguments.length, srcs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    srcs[_key - 1] = arguments[_key];\n  }\n\n  srcs.filter(function (src) {\n    return src != null;\n  }).forEach(function (src) {\n    Object.keys(src).forEach(function (k) {\n      return tgt[k] = src[k];\n    });\n  });\n\n  return tgt;\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// default layout options\nvar defaults = {\n  animate: true, // whether to show the layout as it's running\n  refresh: 1, // number of ticks per frame; higher is faster but more jerky\n  maxSimulationTime: 4000, // max length in ms to run the layout\n  ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n  fit: true, // on every layout reposition of nodes, fit the viewport\n  padding: 30, // padding around the simulation\n  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n  nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n\n  // layout event callbacks\n  ready: function ready() {}, // on layoutready\n  stop: function stop() {}, // on layoutstop\n\n  // positioning options\n  randomize: false, // use random node positions at beginning of layout\n  avoidOverlap: true, // if true, prevents overlap of node bounding boxes\n  handleDisconnected: true, // if true, avoids disconnected components from overlapping\n  convergenceThreshold: 0.01, // when the alpha value (system energy) falls below this value, the layout stops\n  nodeSpacing: function nodeSpacing(node) {\n    return 10;\n  }, // extra spacing around nodes\n  flow: undefined, // use DAG/tree flow layout if specified, e.g. { axis: 'y', minSeparation: 30 }\n  alignment: undefined, // relative alignment constraints on nodes, e.g. function( node ){ return { x: 0, y: 1 } }\n  gapInequalities: undefined, // list of inequality constraints for the gap between the nodes, e.g. [{\"axis\":\"y\", \"left\":node1, \"right\":node2, \"gap\":25}]\n\n  // different methods of specifying edge length\n  // each can be a constant numerical value or a function like `function( edge ){ return 2; }`\n  edgeLength: undefined, // sets edge length directly in simulation\n  edgeSymDiffLength: undefined, // symmetric diff edge length in simulation\n  edgeJaccardLength: undefined, // jaccard edge length in simulation\n\n  // iterations of cola algorithm; uses default values on undefined\n  unconstrIter: undefined, // unconstrained initial layout iterations\n  userConstIter: undefined, // initial layout iterations with user-specified constraints\n  allConstIter: undefined, // initial layout iterations with all constraints including non-overlap\n\n  // infinite layout options\n  infinite: false // overrides all other options for a forces-all-the-time mode\n};\n\nmodule.exports = defaults;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar impl = __webpack_require__(0);\n\n// registers the extension on a cytoscape lib ref\nvar register = function register(cytoscape) {\n  if (!cytoscape) {\n    return;\n  } // can't register if cytoscape unspecified\n\n  cytoscape('layout', 'cola', impl); // register with cytoscape.js\n};\n\nif (typeof cytoscape !== 'undefined') {\n  // expose to global cytoscape (i.e. window.cytoscape)\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar raf = void 0;\n\nif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) !== ( true ? \"undefined\" : _typeof(undefined))) {\n  raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (fn) {\n    return setTimeout(fn, 16);\n  };\n} else {\n  // if not available, all you get is immediate calls\n  raf = function raf(cb) {\n    cb();\n  };\n}\n\nmodule.exports = raf;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ })\n/******/ ]);\n});","/**\n@license\nCopyright 2019 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport '@material/mwc-ripple/mwc-ripple';\n\nimport {FormElement} from '@material/mwc-base/form-element';\nimport {Ripple} from '@material/mwc-ripple/mwc-ripple';\nimport {RippleHandlers} from '@material/mwc-ripple/ripple-handlers';\nimport {eventOptions, html, internalProperty, property, PropertyValues, query, queryAsync} from 'lit-element';\nimport {classMap} from 'lit-html/directives/class-map';\nimport {ifDefined} from 'lit-html/directives/if-defined';\n\n/** @soyCompatible */\nexport class CheckboxBase extends FormElement {\n  @query('.mdc-checkbox') protected mdcRoot!: HTMLElement;\n\n  @query('input') protected formElement!: HTMLInputElement;\n\n  @property({type: Boolean, reflect: true}) checked = false;\n\n  @property({type: Boolean}) indeterminate = false;\n\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  @property({type: String}) value = '';\n\n  /**\n   * Touch target extends beyond visual boundary of a component by default.\n   * Set to `true` to remove touch target added to the component.\n   * @see https://material.io/design/usability/accessibility.html\n   */\n  @property({type: Boolean}) reducedTouchTarget = false;\n\n  @internalProperty() protected animationClass = '';\n\n  @internalProperty() protected shouldRenderRipple = false;\n\n  @internalProperty() protected focused = false;\n\n  @queryAsync('mwc-ripple') ripple!: Promise<Ripple|null>;\n\n  // MDC Foundation is unused\n  protected mdcFoundationClass = undefined;\n\n  protected mdcFoundation = undefined;\n\n  protected createAdapter() {\n    return {};\n  }\n\n  protected update(changedProperties: PropertyValues) {\n    const oldIndeterminate = changedProperties.get('indeterminate');\n    const oldChecked = changedProperties.get('checked');\n    const oldDisabled = changedProperties.get('disabled');\n    if (oldIndeterminate !== undefined || oldChecked !== undefined ||\n        oldDisabled !== undefined) {\n      const oldState = this.calculateAnimationStateName(\n          !!oldChecked, !!oldIndeterminate, !!oldDisabled);\n      const newState = this.calculateAnimationStateName(\n          this.checked, this.indeterminate, this.disabled);\n      this.animationClass = `${oldState}-${newState}`;\n    }\n    super.update(changedProperties);\n  }\n\n  protected calculateAnimationStateName(\n      checked: boolean, indeterminate: boolean, disabled: boolean): string {\n    if (disabled) {\n      return 'disabled';\n    } else if (indeterminate) {\n      return 'indeterminate';\n    } else if (checked) {\n      return 'checked';\n    } else {\n      return 'unchecked';\n    }\n  }\n\n  private rippleElement: Ripple|null = null;\n\n  protected rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this.shouldRenderRipple = true;\n    this.ripple.then((v) => this.rippleElement = v);\n    return this.ripple;\n  });\n\n  // TODO(dfreedm): Make this use selected as a param after Polymer/internal#739\n  /** @soyTemplate */\n  protected renderRipple() {\n    const selected = this.indeterminate || this.checked;\n    return this.shouldRenderRipple ? html`\n        <mwc-ripple\n          .accent=\"${selected}\"\n          .disabled=\"${this.disabled}\"\n          unbounded>\n        </mwc-ripple>` :\n                                     '';\n  }\n\n  /**\n   * @soyTemplate\n   * @soyAttributes checkboxAttributes: input\n   * @soyClasses checkboxClasses: .mdc-checkbox\n   */\n  protected render() {\n    const selected = this.indeterminate || this.checked;\n    /* eslint-disable eqeqeq */\n    // tslint:disable:triple-equals\n    /** @classMap */\n    const classes = {\n      'mdc-checkbox--disabled': this.disabled,\n      'mdc-checkbox--selected': selected,\n      'mdc-checkbox--touch': !this.reducedTouchTarget,\n      'mdc-checkbox--focused': this.focused,\n      // transition animiation classes\n      'mdc-checkbox--anim-checked-indeterminate':\n          this.animationClass == 'checked-indeterminate',\n      'mdc-checkbox--anim-checked-unchecked':\n          this.animationClass == 'checked-unchecked',\n      'mdc-checkbox--anim-indeterminate-checked':\n          this.animationClass == 'indeterminate-checked',\n      'mdc-checkbox--anim-indeterminate-unchecked':\n          this.animationClass == 'indeterminate-unchecked',\n      'mdc-checkbox--anim-unchecked-checked':\n          this.animationClass == 'unchecked-checked',\n      'mdc-checkbox--anim-unchecked-indeterminate':\n          this.animationClass == 'unchecked-indeterminate',\n    };\n    // tslint:enable:triple-equals\n    /* eslint-enable eqeqeq */\n    const ariaChecked = this.indeterminate ? 'mixed' : undefined;\n    return html`\n      <div class=\"mdc-checkbox mdc-checkbox--upgraded ${classMap(classes)}\">\n        <input type=\"checkbox\"\n              class=\"mdc-checkbox__native-control\"\n              aria-checked=\"${ifDefined(ariaChecked)}\"\n              data-indeterminate=\"${this.indeterminate ? 'true' : 'false'}\"\n              ?disabled=\"${this.disabled}\"\n              .indeterminate=\"${this.indeterminate}\"\n              .checked=\"${this.checked}\"\n              .value=\"${this.value}\"\n              @change=\"${this._changeHandler}\"\n              @focus=\"${this._handleFocus}\"\n              @blur=\"${this._handleBlur}\"\n              @mousedown=\"${this.handleRippleMouseDown}\"\n              @mouseenter=\"${this.handleRippleMouseEnter}\"\n              @mouseleave=\"${this.handleRippleMouseLeave}\"\n              @touchstart=\"${this.handleRippleTouchStart}\"\n              @touchend=\"${this.handleRippleDeactivate}\"\n              @touchcancel=\"${this.handleRippleDeactivate}\">\n        <div class=\"mdc-checkbox__background\"\n          @animationend=\"${this.resetAnimationClass}\">\n          <svg class=\"mdc-checkbox__checkmark\"\n              viewBox=\"0 0 24 24\">\n            <path class=\"mdc-checkbox__checkmark-path\"\n                  fill=\"none\"\n                  d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path>\n          </svg>\n          <div class=\"mdc-checkbox__mixedmark\"></div>\n        </div>\n        ${this.renderRipple()}\n      </div>`;\n  }\n\n  private _handleFocus() {\n    this.focused = true;\n    this.handleRippleFocus();\n  }\n\n  private _handleBlur() {\n    this.focused = false;\n    this.handleRippleBlur();\n  }\n\n  protected handleRippleMouseDown(event: Event) {\n    const onUp = () => {\n      window.removeEventListener('mouseup', onUp);\n\n      this.handleRippleDeactivate();\n    };\n\n    window.addEventListener('mouseup', onUp);\n    this.rippleHandlers.startPress(event);\n  }\n\n  @eventOptions({passive: true})\n  protected handleRippleTouchStart(event: Event) {\n    this.rippleHandlers.startPress(event);\n  }\n\n  protected handleRippleDeactivate() {\n    this.rippleHandlers.endPress();\n  }\n\n  protected handleRippleMouseEnter() {\n    this.rippleHandlers.startHover();\n  }\n\n  protected handleRippleMouseLeave() {\n    this.rippleHandlers.endHover();\n  }\n\n  protected handleRippleFocus() {\n    this.rippleHandlers.startFocus();\n  }\n\n  protected handleRippleBlur() {\n    this.rippleHandlers.endFocus();\n  }\n\n  private _changeHandler() {\n    this.checked = this.formElement.checked;\n    this.indeterminate = this.formElement.indeterminate;\n  }\n\n  protected resetAnimationClass() {\n    this.animationClass = '';\n  }\n\n  get isRippleActive() {\n    return this.rippleElement?.isActive || false;\n  }\n}\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {css} from 'lit-element';\n\nexport const style = css`.mdc-checkbox{padding:11px;margin-top:0px;margin-bottom:0px;margin-right:0px;margin-left:0px}.mdc-checkbox .mdc-checkbox__ripple::before,.mdc-checkbox .mdc-checkbox__ripple::after{background-color:#000}.mdc-checkbox:hover .mdc-checkbox__ripple::before{opacity:.04}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__ripple::before,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__ripple::before{transition-duration:75ms;opacity:.12}.mdc-checkbox:not(.mdc-ripple-upgraded) .mdc-checkbox__ripple::after{transition:opacity 150ms linear}.mdc-checkbox:not(.mdc-ripple-upgraded):active .mdc-checkbox__ripple::after{transition-duration:75ms;opacity:.12}.mdc-checkbox.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.12}.mdc-checkbox .mdc-checkbox__native-control:checked~.mdc-checkbox__background::before,.mdc-checkbox .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background::before,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background::before{background-color:#018786;background-color:var(--mdc-theme-secondary, #018786)}.mdc-checkbox.mdc-checkbox--selected .mdc-checkbox__ripple::before,.mdc-checkbox.mdc-checkbox--selected .mdc-checkbox__ripple::after{background-color:#018786;background-color:var(--mdc-theme-secondary, #018786)}.mdc-checkbox.mdc-checkbox--selected:hover .mdc-checkbox__ripple::before{opacity:.04}.mdc-checkbox.mdc-checkbox--selected.mdc-ripple-upgraded--background-focused .mdc-checkbox__ripple::before,.mdc-checkbox.mdc-checkbox--selected:not(.mdc-ripple-upgraded):focus .mdc-checkbox__ripple::before{transition-duration:75ms;opacity:.12}.mdc-checkbox.mdc-checkbox--selected:not(.mdc-ripple-upgraded) .mdc-checkbox__ripple::after{transition:opacity 150ms linear}.mdc-checkbox.mdc-checkbox--selected:not(.mdc-ripple-upgraded):active .mdc-checkbox__ripple::after{transition-duration:75ms;opacity:.12}.mdc-checkbox.mdc-checkbox--selected.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.12}.mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected .mdc-checkbox__ripple::before,.mdc-checkbox.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected .mdc-checkbox__ripple::after{background-color:#018786;background-color:var(--mdc-theme-secondary, #018786)}.mdc-checkbox .mdc-checkbox__background{top:11px;left:11px}.mdc-checkbox .mdc-checkbox__background::before{top:-13px;left:-13px;width:40px;height:40px}.mdc-checkbox .mdc-checkbox__native-control{top:0px;right:0px;left:0px;width:40px;height:40px}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unchecked-color, rgba(0, 0, 0, 0.54));background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:#018786;border-color:var(--mdc-checkbox-checked-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-checked-color, var(--mdc-theme-secondary, #018786))}@keyframes mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786{0%{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unchecked-color, rgba(0, 0, 0, 0.54));background-color:transparent}50%{border-color:#018786;border-color:var(--mdc-checkbox-checked-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-checked-color, var(--mdc-theme-secondary, #018786))}}@keyframes mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786{0%,80%{border-color:#018786;border-color:var(--mdc-checkbox-checked-color, var(--mdc-theme-secondary, #018786));background-color:#018786;background-color:var(--mdc-checkbox-checked-color, var(--mdc-theme-secondary, #018786))}100%{border-color:rgba(0, 0, 0, 0.54);border-color:var(--mdc-checkbox-unchecked-color, rgba(0, 0, 0, 0.54));background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FF01878600000000FF018786}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FF01878600000000FF018786}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:rgba(0, 0, 0, 0.38);border-color:var(--mdc-checkbox-disabled-color, rgba(0, 0, 0, 0.38));background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:rgba(0, 0, 0, 0.38);background-color:var(--mdc-checkbox-disabled-color, rgba(0, 0, 0, 0.38))}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:#fff;color:var(--mdc-checkbox-ink-color, #fff)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:#fff;border-color:var(--mdc-checkbox-ink-color, #fff)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:#fff;color:var(--mdc-checkbox-ink-color, #fff)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:#fff;border-color:var(--mdc-checkbox-ink-color, #fff)}.mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}@media screen and (-ms-high-contrast: active){.mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:GrayText;border-color:var(--mdc-checkbox-disabled-color, GrayText);background-color:transparent}.mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:GrayText;background-color:transparent;background-color:var(--mdc-checkbox-disabled-color, transparent)}.mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:GrayText;color:var(--mdc-checkbox-ink-color, GrayText)}.mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:GrayText;border-color:var(--mdc-checkbox-ink-color, GrayText)}.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:transparent;pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__background .mdc-checkbox__background::before{background-color:#000;background-color:var(--mdc-theme-on-surface, #000)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\"\";will-change:opacity,transform;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:focus~.mdc-checkbox__background::before{transform:scale(1);opacity:.12;transition:opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mdc-checkbox--touch .mdc-checkbox__native-control{top:-4px;right:-4px;left:-4px;width:48px;height:48px}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}:host{outline:none;display:inline-block}.mdc-checkbox .mdc-checkbox__background::before{content:none}`;\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {customElement} from 'lit-element';\n\nimport {CheckboxBase} from './mwc-checkbox-base';\nimport {style} from './mwc-checkbox-css';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-checkbox': Checkbox;\n  }\n}\n\n/** @soyCompatible */\n@customElement('mwc-checkbox')\nexport class Checkbox extends CheckboxBase {\n  static styles = style;\n}\n",null],"names":["rbtree_1","vpsc_1","pqueue_1","rectangle_1","linklengths_1","shortestpaths_1","descent_1","handledisconnected_1","geom_1","layout_1","d3v3","d3v4","gridrouter_1","require$$0","this","cytoscape","cola"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAOI;IACI,mBACW,MAAW,EACX,MAAW,EACX,IAAY;QAFZ,WAAM,GAAN,MAAM,CAAK;QACX,WAAM,GAAN,MAAM,CAAK;QACX,SAAI,GAAJ,IAAI,CAAQ;KAAK;IAChC,gBAAC;AAAD,CAAC,IAAA;AALY,8BAAS;AAOtB;IASI,uBAAY,CAAS,EAAE,KAAa,EAAU,YAAoC,EAAE,SAAiB;QAArG,iBAkBC;QAlB6C,iBAAY,GAAZ,YAAY,CAAwB;QAC9E,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;SACxC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;YACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;QACtB,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;YACX,IAAI,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAChD,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAChD,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAC3B,CAAC,CAAC;KACN;IAEO,4CAAoB,GAA5B,UAA6B,KAAK;QAC9B,IAAI,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAC1C,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;YAC/B,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACzB;QACD,IAAI,KAAK,CAAC,MAAM,EAAE;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC1C,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAE5B,IAAI,UAAU,GAAG,EAAE,CAAC;gBACpB,KAAK,IAAI,IAAI,IAAI,KAAK;oBAClB,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC;wBACpE,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;gBAEvC,SAAS,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,IAAI,QAAQ,EAAE,EAAE,IAAI,QAAQ,EAAE,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;aACjH;SACJ;QACD,OAAO,SAAS,CAAC;KACnB;IAGF,6BAAK,GAAL,UAAM,CAAS,EAAE,CAAS,EAAE,CAAa;QAAb,kBAAA,EAAA,KAAa;QACrC,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,EAC3C,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,QAAQ,GAAG,IAAI,SAAS,EAAE,CAAC;QAC/B,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,MAAM,GAAG,UAAC,CAAW,EAAE,CAAS,EAAE,CAAS;YAC3C,CAAC,CAAC,MAAM,CAAC,UAAC,EAAE,EAAE,QAAQ;gBAClB,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC;oBACP,IAAI,GAAG,GAAa,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBACrB,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBACxB,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBACb,CAAC,CAAC,CAAC,CAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC,CAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;iBACxC,CAAC,CAAC;aACN,CAAC,CAAC;SACN,CAAC;QACF,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrB,OAAO,CAAC,CAAC;KACZ;IAEO,kCAAU,GAAlB,UAAmB,CAAa;QAAb,kBAAA,EAAA,KAAa;QAM5B,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;QAClB,IAAI,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACjE,GAAG,EAAE,CAAC;aACT;SACJ;QACD,OAAO,MAAM,CAAC;KACjB;IAED,mCAAW,GAAX;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAExC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC;gBAAE,SAAS;YAGjD,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC;YACrG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC;gBAAE,SAAS;YACjC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;KACJ;IAEO,8BAAM,GAAd,UAAe,CAAS,EAAE,CAAS;QAC/B,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,EAC3C,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;KAClD;IAED,yCAAiB,GAAjB,UAAkB,eAA4B;QAA9C,iBAeC;QAdG,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACzB,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC;YACR,IAAI,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC/B,eAAe,CAAC,IAAI,CAAC,IAAI,SAAS,CAC9B,OAAO,CAAC,CAAC,GAAG,KAAK,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EACvD,OAAO,CAAC,CAAC,GAAG,KAAK,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EACvD,CAAC,CAAC,IAAI,CACT,CAAC,CAAC;SACN,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;KACjB;IAED,gCAAQ,GAAR;QACI,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1C,OAAO,EAAE,CAAC;KACb;IAEM,sBAAQ,GAAf,UAAgB,OAAkB,EAAE,EAAe;QAC/C,OAAO,CAAC,MAAM,CAAC,UAAA,CAAC;YACZ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACf,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SAC1C,CAAC,CAAC;KACN;IACL,oBAAC;AAAD,CAAC,IAAA;AAxJY,sCAAa;AA0J1B,SAAS,QAAQ,CAAC,OAAkB,EAAE,KAAK,EAAE,MAAM;IAC/C,OAAO,CAAC,MAAM,CAAC,UAAA,CAAC;QACZ,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,MAAM;gBAAE,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YACrC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC3B;aAAM;YACH,IAAI,CAAC,GAAG,KAAK,CAAC;YACd,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;YACtB,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;gBACnC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,CAAC,YAAY,EAAE;oBAEhB,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,UAAU;wBACzB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,MAAM;oBAAE,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;gBACrC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAClB;YACD,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;SACnC;KACJ,CAAC,CAAC;AACP,CAAC;AAED;IAGI,gBACW,EAAU,EACV,QAAmC,EACnC,QAAmC,EACnC,QAAqC,EACrC,UAAgB;QAHhB,yBAAA,EAAA,eAAyB,QAAQ,EAAE;QACnC,yBAAA,EAAA,eAAyB,QAAQ,EAAE;QACnC,yBAAA,EAAA,eAA0B,SAAS,EAAE;QAHrC,OAAE,GAAF,EAAE,CAAQ;QACV,aAAQ,GAAR,QAAQ,CAA2B;QACnC,aAAQ,GAAR,QAAQ,CAA2B;QACnC,aAAQ,GAAR,QAAQ,CAA6B;QACrC,eAAU,GAAV,UAAU,CAAM;KAAK;IAEhC,yBAAQ,GAAR,UAAS,EAAe;QAAxB,iBAMC;QALG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAC,EAAE,EAAE,QAAQ;YAC9B,EAAE,CAAC,MAAM,CAAC,UAAA,MAAM;gBACZ,EAAE,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,KAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;aACxD,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IAED,uBAAM,GAAN;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACtC;IAED,yBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACrE;IAED,6BAAY,GAAZ;QACI,OAAO,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,CAAC;KACjD;IACL,aAAC;AAAD,CAAC,IAAA;AA7BY,wBAAM;AA+BnB,SAAS,YAAY,CAAC,CAAM,EAAE,CAAM;IAChC,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,KAAK,IAAI,CAAC,IAAI,CAAC;QAAE,IAAI,CAAC,IAAI,CAAC;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,OAAO,CAAC,CAAC;AACb,CAAC;AAED;IAAA;QACI,UAAK,GAAQ,EAAE,CAAC;KAkCnB;IAjCG,yBAAK,GAAL;QACI,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;KACzC;IACD,gCAAY,GAAZ,UAAa,KAAgB;QACzB,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC7B,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACrD,OAAO,MAAM,CAAC;KACjB;IACD,qCAAiB,GAAjB,UAAkB,KAAgB;QAC9B,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;KAC3C;IACD,4BAAQ,GAAR,UAAS,EAAU;QACf,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;KAC3B;IACD,uBAAG,GAAH,UAAI,CAAS;QACT,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;KACxB;IACD,0BAAM,GAAN,UAAO,CAAS;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;KAC3B;IACD,0BAAM,GAAN,UAAO,CAAsB;QACzB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;YACxB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SACtB;KACJ;IACD,2BAAO,GAAP;QACI,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC;YACT,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE;gBACjB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;KACb;IACL,gBAAC;AAAD,CAAC,IAAA;AAnCY,8BAAS;AAqCtB;IAAA;QACI,SAAI,GAAQ,EAAE,CAAC;QACf,MAAC,GAAW,CAAC,CAAC;KAgDjB;IA/CG,wBAAK,GAAL;QACI,OAAO,IAAI,CAAC,CAAC,CAAC;KACjB;IACD,2BAAQ,GAAR,UAAS,EAAU;QACf,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,aAAa,CAAC,UAAA,CAAC;YAChB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;gBACvB,MAAM,GAAG,IAAI,CAAC;aACjB;SACJ,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;KACjB;IACD,sBAAG,GAAH,UAAI,QAAgB,EAAE,CAAS;QAC3B,IAAI,CAAC,GAAc,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;QACvG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,CAAC,CAAC;KACZ;IACD,yBAAM,GAAN,UAAO,QAAgB,EAAE,CAAS;QAC9B,IAAI,EAAE,GAAc,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACb,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;YAClB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9B;QACD,EAAE,IAAI,CAAC,CAAC,CAAC;KACZ;IACD,yBAAM,GAAN,UAAO,CAA4C;QAC/C,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;YAC5B,CAAC,CAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;SACvD;KACJ;IACD,gCAAa,GAAb,UAAc,CAAsB;QAChC,IAAI,CAAC,MAAM,CAAC,UAAC,EAAE,EAAE,EAAE,IAAK,OAAA,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KACzC;IACD,+BAAY,GAAZ,UAAa,KAAe;QACxB,IAAI,MAAM,GAAa,IAAI,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,UAAC,EAAE,EAAE,EAAE;YACf,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE;gBAClB,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EACnC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;gBAClB,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;oBACpB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;iBACjB;aACJ;SACJ,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;KACjB;IACL,eAAC;AAAD,CAAC,IAAA;AAlDY,4BAAQ;AAwDrB,SAAgB,SAAS,CAAO,KAAY,EAAE,KAAa,EAAE,EAA0B,EAAE,SAAiB;IACtG,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAChB,CAAC,GAAG,IAAI,aAAa,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;IACnD,OAAO,CAAC,CAAC,WAAW,EAAE;QAAC,CAAC;IACxB,IAAI,UAAU,GAAgB,EAAE,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IACxC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC;QAC1B,IAAI,CAAC,GAAG,UAAC,GAAG;YACR,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACf,IAAI,OAAO,CAAC,IAAI,QAAQ;gBAAE,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SAC/C,CAAC;QACF,CAAC,CAAC,QAAQ,CAAC,CAAC;QACZ,CAAC,CAAC,QAAQ,CAAC,CAAC;KACf,CAAC,CAAC;IACH,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;AACjD,CAAC;AAfD,8BAeC;;;;;;ACtUD,SAAS,UAAU,CAAC,CAAM,EAAE,CAAM;IAC9B,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,KAAK,IAAI,CAAC,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3B,KAAK,IAAI,CAAC,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACjC,CAAC;AAGD,SAAS,iBAAiB,CAAC,CAAW,EAAE,CAAW;IAC/C,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,KAAK,IAAI,CAAC,IAAI,CAAC;QAAE,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,WAAW;YAAE,EAAE,CAAC,CAAC;IACtD,OAAO,CAAC,CAAC;AACb,CAAC;AAED,SAAS,aAAa,CAAO,KAAa,EAAE,EAAsB;IAC9D,IAAI,UAAU,GAAG,EAAE,CAAC;IACpB,IAAI,aAAa,GAAG,UAAC,CAAC,EAAE,CAAC;QACrB,IAAI,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,WAAW;YACpC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACvB,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;KACzB,CAAC;IACF,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;QACX,IAAI,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvD,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACvB,CAAC,CAAC;IACH,OAAO,UAAU,CAAC;AACtB,CAAC;AAGD,SAAS,kBAAkB,CAAO,KAAa,EAAE,CAAS,EAAE,CAA6B,EAAE,EAA4B;IACnH,IAAI,UAAU,GAAG,aAAa,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC1C,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;QACX,IAAI,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACpC,CAAC,CAAC;AACP,CAAC;AAKD,SAAgB,wBAAwB,CAAO,KAAa,EAAE,EAA4B,EAAE,CAAa;IAAb,kBAAA,EAAA,KAAa;IACrG,kBAAkB,CAAC,KAAK,EAAE,CAAC,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAA,EAAE,EAAE,CAAC,CAAC;AACtG,CAAC;AAFD,4DAEC;AAKD,SAAgB,kBAAkB,CAAO,KAAa,EAAE,EAA4B,EAAE,CAAa;IAAb,kBAAA,EAAA,KAAa;IAC/F,kBAAkB,CAAC,KAAK,EAAE,CAAC,EAAE,UAAC,CAAC,EAAE,CAAC;QAC9B,OAAA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;KAAA,EAC3G,EAAE,CAAC,CAAC;AACd,CAAC;AAJD,gDAIC;AAoBD,SAAgB,+BAA+B,CAAO,CAAS,EAAE,KAAa,EAAE,IAAY,EACxF,EAAyB;IAEzB,IAAI,UAAU,GAAG,2BAA2B,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAC3D,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,UAAU,CAAC,OAAO,CAAC,UAAC,CAAC,EAAC,CAAC;QACnB,OAAA,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAA,CAAC;KAAA,CAC/B,CAAC;IACF,IAAI,WAAW,GAAU,EAAE,CAAC;IAC5B,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;QACX,IAAI,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,EACpD,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,EAAE;YACT,WAAW,CAAC,IAAI,CAAC;gBACb,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,EAAE;gBACT,GAAG,EAAE,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;aAC9B,CAAC,CAAC;SACN;KACJ,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACvB,CAAC;AAtBD,0EAsBC;AAQD,SAAgB,2BAA2B,CAAO,WAAmB,EAAE,KAAa,EAAE,EAAsB;IACxG,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,UAAU,GAAG,EAAE,CAAC;IACpB,SAAS,aAAa,CAAC,CAAC;QAEpB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,KAAK,EAAE,CAAC;QAC9B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;QAGjB,KAAc,UAAK,EAAL,KAAA,CAAC,CAAC,GAAG,EAAL,cAAK,EAAL,IAAK,EAAE;YAAhB,IAAI,CAAC,SAAA;YACN,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,WAAW,EAAE;gBAEhC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACjB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;aAC9C;iBAAM,IAAI,CAAC,CAAC,OAAO,EAAE;gBAElB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;aAC5C;SACJ;QAGD,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,KAAK,EAAE;YAEvB,IAAI,SAAS,GAAG,EAAE,CAAC;YACnB,OAAO,KAAK,CAAC,MAAM,EAAE;gBACjB,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;gBAChB,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;gBAElB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,KAAK,CAAC;oBAAE,MAAM;aACtB;YAED,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,GAAA,CAAC,CAAC,CAAC;SAC7C;KACJ;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;QAClC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;KAChC;IACD,KAAc,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;QAAhB,IAAI,CAAC,cAAA;QACN,IAAI,GAAC,GAAG,KAAK,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAC/B,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,GAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,KAAc,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;QAAd,IAAI,CAAC,cAAA;QAAW,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,WAAW;YAAE,aAAa,CAAC,CAAC,CAAC,CAAC;KAAA;IAC1E,OAAO,UAAU,CAAC;AACtB,CAAC;AAhDD,kEAgDC;;;;;;AC7JD;IAAA;QACI,UAAK,GAA6B,EAAE,CAAC;KAoCxC;IA7BG,mBAAG,GAAH,UAAI,EAAU,EAAE,CAAW;QAIvB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;KACtB;IAID,qBAAK,GAAL;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;IAKD,uBAAO,GAAP;QACI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK;YAAE,OAAO,KAAK,CAAC;QACvC,OAAO,IAAI,CAAC;KACf;IAKD,qBAAK,GAAL,UAAM,CAAoC;QACtC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;YACtB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;KACJ;IACL,YAAC;AAAD,CAAC,IAAA;AArCY,sBAAK;AAiDlB;IA6DI,iBAAY,CAAa,EAAS,CAAa,EAAS,CAAmB;QAAnB,kBAAA,EAAA,QAAmB;QAAzC,MAAC,GAAD,CAAC,CAAY;QAAS,MAAC,GAAD,CAAC,CAAkB;QA5DpE,cAAS,GAAW,MAAM,CAAC;QA2C3B,qBAAgB,GAAW,CAAC,CAAC;QAC7B,iBAAY,GAAW,GAAG,CAAC;QAC3B,iBAAY,GAAW,IAAI,CAAC;QAC5B,oBAAe,GAAY,KAAK,CAAC;QAEhC,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAE7B,YAAO,GAA0D,IAAI,CAAC;QAWzE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QAClB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACb,OAAO,CAAC,EAAE,EAAE;YACR,CAAC,GAAG,CAAC,CAAC;YACN,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;gBACZ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;oBACxB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;iBACjB;aACJ;SACJ;QACD,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,SAAS;YAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAClD,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,EAAE,EAAE;YACR,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC,GAAG,CAAC,CAAC;YACN,OAAO,CAAC,EAAE,EAAE;gBACR,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;SAC/B;KACJ;IAEa,0BAAkB,GAAhC,UAAiC,CAAS,EAAE,CAAmC;QAC3E,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrB;SACJ;QACD,OAAO,CAAC,CAAC;KACZ;IAEO,2BAAS,GAAjB;QAAA,iBASC;QARG,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YAC7B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;YACzD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACd;QACD,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,OAAO,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,IAAI,KAAI,CAAC,IAAI,GAAG,CAAC,GAAA,CAAC,CAAC;KACxC;IAGM,oCAAkB,GAAzB,UAA0B,CAAa;QAAvC,iBAgGC;QA/FG,IAAI,CAAC,GAAW,IAAI,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC;YAAE,OAAO;QAClB,IAAI,CAAS,CAAC;QAMd,IAAI,CAAC,GAAa,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,EAAE,GAAa,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,GAAG,GAAa,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,IAAI,GAAW,CAAC,CAAC;QACrB,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YAChC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;gBAAE,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxB,IAAI,CAAC,KAAK,CAAC;oBAAE,SAAS;gBAGtB,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,OAAO,YAAY,EAAE,EAAE;oBACnB,IAAI,GAAG,GAAG,CAAC,CAAC;oBACZ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;wBACzB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;qBAC1B;oBACD,IAAI,GAAG,GAAG,IAAI;wBAAE,MAAM;oBACtB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;oBAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;iBACjD;gBACD,IAAI,CAAC,GAAW,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC/C,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBACrC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;wBAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjD,SAAS;iBACZ;gBACD,IAAI,MAAM,GAAG,CAAC,EAAE;oBACZ,MAAM,GAAG,CAAC,CAAC;iBACd;gBACD,IAAI,EAAE,GAAW,CAAC,GAAG,CAAC,CAAC;gBACvB,IAAI,EAAE,GAAW,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;gBACjD,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,IAAI,EAAE,GAAW,CAAC,GAAG,CAAC,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;oBACb,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACpB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;oBACzB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;oBAC1B,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;iBACvE;aACJ;YACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;gBAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAChF;QAED,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,GAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAErC,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;YACvC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;gBACzB,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACd,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACd,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;oBAC7B,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACtD,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;oBACpB,IAAI,IAAI,CAAC,eAAe,EAAE;wBACtB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;wBAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC;qBAC/B;yBAAM;wBACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;wBACvB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;qBACxB;iBACJ;aACJ;SACJ;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAC,CAAC,EAAE,CAAC;gBAClB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;oBACzB,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;oBACxB,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3C;aACJ,CAAC,CAAC;SACN;KASJ;IAEc,eAAO,GAAtB,UAAuB,CAAW,EAAE,CAAW;QAC3C,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACxB,OAAO,CAAC,EAAE;YAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,OAAO,CAAC,CAAC;KACZ;IAGc,qBAAa,GAA5B,UAA6B,CAAa,EAAE,CAAW,EAAE,CAAW;QAChE,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACjB,OAAO,CAAC,EAAE;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/C;IAKM,iCAAe,GAAtB,UAAuB,CAAa;QAChC,IAAI,SAAS,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YAC7B,SAAS,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,WAAW,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;QACD,IAAI,WAAW,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YAAE,OAAO,CAAC,CAAC;QAC1D,OAAO,CAAC,GAAG,SAAS,GAAG,WAAW,CAAC;KACtC;IAEM,8BAAY,GAAnB;QACI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YAC7B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SACrD;QACD,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;KAC/B;IAEc,YAAI,GAAnB,UAAoB,CAAa,EAAE,CAAa;QAC5C,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACrB;SACJ;KACJ;IAQO,gCAAc,GAAtB,UAAuB,EAAc,EAAE,CAAa,EAAE,CAAa,EAAE,QAAgB;QACjF,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAGrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;KAUlD;IAEc,cAAM,GAArB,UAAsB,CAAS,EAAE,CAAS,EAAE,CAAgC;QACxE,IAAI,CAAC,GAAG,CAAC,CAAC;QAAC,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,GAAG,CAAC,CAAC;YAAC,OAAO,CAAC,EAAE,GAAG,CAAC;gBAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACtC;KACJ;IACO,6BAAW,GAAnB,UAAoB,CAAgC;QAChD,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACrC;IAEO,qCAAmB,GAA3B,UAA4B,EAAc,EAAE,CAAa;QAAzD,iBAeC;QAdG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAM1C,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;YAC9D,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAC5C;KACJ;IAEM,qBAAG,GAAV,UAAW,UAAkB;QACzB,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,SAAS,GAAG,KAAK,CAAC;QACjD,OAAO,CAAC,SAAS,IAAI,UAAU,EAAE,GAAG,CAAC,EAAE;YACnC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAC1B,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;YACtD,MAAM,GAAG,CAAC,CAAC;SACd;QACD,OAAO,MAAM,CAAC;KACjB;IAEM,4BAAU,GAAjB;QAAA,iBAeC;QAdG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,WAAW,CAAC,UAAC,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EACjF,CAAC,GAAG,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACzB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;YACd,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACpB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;KACf;IAEc,WAAG,GAAlB,UAAmB,CAAa,EAAE,CAAa,EAAE,CAAa;QAC1D,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC;YACvC,OAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG;SAAA,CAAC,CAAC;KACtD;IAEM,iCAAe,GAAtB,UAAuB,CAAW,EAAE,CAAW,EAAE,QAAgB;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YAC7B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;KACJ;IAEM,+BAAa,GAApB;QACI,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;YACpD,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;oBAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;iBAChB;gBACD,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAAE,SAAS;gBAC3B,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACf,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;aAC1B;SACJ;QACD,OAAO,MAAM,CAAC;KACjB;IArWc,oBAAY,GAAW,KAAK,CAAC;IAsWhD,cAAC;CAhYD,IAgYC;AAhYY,0BAAO;AAmYpB;IAMI,sBAAmB,IAAgB;QAAhB,qBAAA,EAAA,QAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAL3B,MAAC,GAAW,MAAM,CAAC;QACnB,MAAC,GAAW,OAAO,CAAC;QACpB,MAAC,GAAW,UAAU,CAAC;QACvB,UAAK,GAAW,KAAK,CAAC;KAEU;IAGxC,8BAAO,GAAP;QACI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;QACnD,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;KACzC;IAGD,qCAAc,GAAd,UAAe,GAAW,EAAE,GAAW;QACnC,OAAO,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;KAC7C;IACL,mBAAC;AAAD,CAAC,IAAA;AAlBY,oCAAY;;;;;;ACxbzB;IAKI,uBAAmB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAJhC,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;KAEqB;IAEpC,mCAAW,GAAX,UAAY,CAAW;QACnB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;QAC9B,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;QAC5B,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QAClB,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,eAAe,CAAC;QACvC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;KAC3B;IAED,+BAAO,GAAP;QACI,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC;KACxC;IACL,oBAAC;AAAD,CAAC,IAAA;AAnBY,sCAAa;AAqB1B;IAKI,oBAAmB,IAAc,EAAS,KAAe,EAAS,GAAW,EAAS,QAAyB;QAAzB,yBAAA,EAAA,gBAAyB;QAA5F,SAAI,GAAJ,IAAI,CAAU;QAAS,UAAK,GAAL,KAAK,CAAU;QAAS,QAAG,GAAH,GAAG,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAiB;QAH/G,WAAM,GAAY,KAAK,CAAC;QACxB,kBAAa,GAAY,KAAK,CAAC;QAG3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;IAED,0BAAK,GAAL;QACI,OAAO,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS;cACtC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG;kBACnD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;KAChD;IACL,iBAAC;AAAD,CAAC,IAAA;AAjBY,gCAAU;AAmBvB;IAMI,kBAAmB,eAAuB,EAAS,MAAkB,EAAS,KAAiB;QAA5C,uBAAA,EAAA,UAAkB;QAAS,sBAAA,EAAA,SAAiB;QAA5E,oBAAe,GAAf,eAAe,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAY;QAAS,UAAK,GAAL,KAAK,CAAY;QAL/F,WAAM,GAAW,CAAC,CAAC;KAKgF;IAEnG,uBAAI,GAAJ;QACI,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;KACvE;IAED,2BAAQ,GAAR;QACI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC;KAC7E;IAGD,kCAAe,GAAf,UAAgB,IAAc,EAAE,CAA0C;QACtE,IAAI,EAAE,GAAG,UAAC,CAAC,EAAE,IAAI,IAAK,OAAA,CAAC,CAAC,MAAM,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAA,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;KACvC;IACL,eAAC;AAAD,CAAC,IAAA;AAtBY,4BAAQ;AAwBrB;IAMI,eAAY,CAAW;QALvB,SAAI,GAAe,EAAE,CAAC;QAMlB,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;KACvB;IAEO,2BAAW,GAAnB,UAAoB,CAAW;QAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;KACjC;IAGD,sCAAsB,GAAtB;QACI,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;YAC5C,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;KACjC;IAEO,0BAAU,GAAlB,UAAmB,CAAW,EAAE,CAAW,EAAE,UAAiC;QAA9E,iBAcC;QAbG,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,UAAC,CAAC,EAAE,IAAI;YACzB,IAAI,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;YACjD,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,EAAE;gBAClB,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC;aAChB;iBAAM;gBACH,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;gBAC9B,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;aACjB;YACD,UAAU,CAAC,CAAC,CAAC,CAAC;SACjB,CAAC,CAAC;QACH,OAAO,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC;KACzB;IAEO,kCAAkB,GAA1B,UAA2B,CAAW,EAAE,IAAc;QAAtD,iBAMC;QALG,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE,IAAI;YAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7D,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACpC,CAAC,CAAC;KACN;IAGD,wBAAQ,GAAR,UAAS,KAA6B,EAAE,GAAU,EAAE,CAA0B,EAAE,IAAmB;QAAnG,iBAKC;QALmD,kBAAA,EAAA,IAAc,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAAE,qBAAA,EAAA,WAAmB;QAC/F,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE,IAAI;YAC5B,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;SACtC,CAAC,CAAC;KACN;IAKD,yBAAS,GAAT;QACI,IAAI,CAAC,GAAe,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,UAAA,CAAC;YACjC,IAAI,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;SACzD,CAAC,CAAC;QACH,OAAO,CAAC,CAAC;KACZ;IAEO,gCAAgB,GAAxB,UAAyB,EAAY,EAAE,EAAY;QAC/C,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,eAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,IAAI,CAAC;QACb,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,UAAC,CAAC,EAAE,IAAI;YAChC,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;SAC7E,CAAC,CAAC;QACH,OAAO,CAAC,CAAC;KACZ;IAEO,wBAAQ,GAAhB,UAAiB,CAAW,EAAE,IAAc,EAAE,EAAY,EAAE,KAA2C;QAAvG,iBAUC;QATG,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE,IAAI;YAC5B,IAAI,CAAC,QAAQ,KAAK,IAAI,KAAK,EAAE,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,EACnE;gBACI,QAAQ,GAAG,IAAI,CAAC;gBAChB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aAClB;SACJ,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;KACnB;IAID,2CAA2B,GAA3B,UAA4B,CAAW,EAAE,CAAW;QAChD,IAAI,CAAC,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;QACtB,OAAM,CAAC,EAAE,EAAE;YACP,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;gBACxD,OAAO,IAAI,CAAC;SACnB;QACD,OAAO,KAAK,CAAC;KAChB;IAGM,WAAK,GAAZ,UAAa,CAAa;QAKtB,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;QACjB,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;KAC5E;IAEc,sBAAgB,GAA/B,UAAgC,QAAkB;QAC9C,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACrC,OAAO,CAAC,CAAC;KACZ;IAGD,4BAAY,GAAZ,UAAa,EAAY,EAAE,EAAY;QAKnC,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,IAAI,EAAE;YACZ,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SAClD;QAED,OAAO,IAAI,CAAC;KACf;IAED,2BAAW,GAAX,UAAY,CAAQ,EAAE,CAAa,EAAE,IAAY;QAC7C,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YAC3C,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACvB;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;KACjC;IAED,oBAAI,GAAJ;QACI,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAClC,OAAO,CAAC,EAAE,EAAE;YACR,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAChB,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,eAAe,CAAC;YACzC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;SAC3B;QACD,OAAO,GAAG,CAAC;KACd;IASL,YAAC;AAAD,CAAC,IAAA;AAlKY,sBAAK;AAoKlB;IAGI,gBAAmB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAC7B,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACzB,OAAO,CAAC,EAAE,EAAE;YACR,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACjB,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;SAClB;KACJ;IAED,qBAAI,GAAJ;QACI,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAClC,OAAO,CAAC,EAAE;YAAE,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QACvC,OAAO,GAAG,CAAC;KACd;IAED,uBAAM,GAAN,UAAO,CAAQ;QAIX,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAKrB;IAED,uBAAM,GAAN,UAAO,CAAQ;QAKX,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChC,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,SAAS,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;YAClC,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;SAInC;KACJ;IAID,sBAAK,GAAL,UAAM,CAAa;QACf,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;QAIxC,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;QAClD,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;YAC/B,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClB;aAAM;YACH,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClB;KAKJ;IAED,wBAAO,GAAP,UAAQ,CAAgC;QACpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KACxB;IAGD,qCAAoB,GAApB;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,sBAAsB,EAAE,GAAA,CAAC,CAAC;KACrD;IAGD,sBAAK,GAAL,UAAM,QAAsB;QAA5B,iBAeC;QAdG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,oBAAoB,EAAE;gBAClD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBACjB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,EAAE,IAAE,OAAA,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAA,CAAC,CAAC;gBAC5C,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAKpB;SACJ,CAAC,CAAC;KACN;IAoBL,aAAC;AAAD,CAAC,IAAA;AAlHY,wBAAM;AAoHnB;IAOI,gBAAmB,EAAc,EAAS,EAAgB;QAAvC,OAAE,GAAF,EAAE,CAAY;QAAS,OAAE,GAAF,EAAE,CAAc;QACtD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC;YACR,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;SAI3B,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC;YACR,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAIvB,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAK,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;KAClB;IAED,qBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;KACzB;IAID,qCAAoB,GAApB,UAAqB,EAAY;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAK,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KAC7C;IAED,oCAAmB,GAAnB,UAAoB,EAAY;QAC5B,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,eAAe,GAAG,EAAE,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KACxD;IA2BO,6BAAY,GAApB;QACI,IAAI,QAAQ,GAAG,MAAM,CAAC,SAAS,EAC3B,CAAC,GAAe,IAAI,EACpB,CAAC,GAAG,IAAI,CAAC,QAAQ,EACjB,CAAC,GAAG,CAAC,CAAC,MAAM,EACZ,WAAW,GAAG,CAAC,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,CAAC,aAAa;gBAAE,SAAS;YAC9B,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;YACtB,IAAI,CAAC,CAAC,QAAQ,IAAI,KAAK,GAAG,QAAQ,EAAE;gBAChC,QAAQ,GAAG,KAAK,CAAC;gBACjB,CAAC,GAAG,CAAC,CAAC;gBACN,WAAW,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,CAAC,QAAQ;oBAAE,MAAM;aACzB;SACJ;QACD,IAAI,WAAW,KAAK,CAAC;aAChB,QAAQ,GAAG,MAAM,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,EAClE;YACI,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;QACD,OAAO,CAAC,CAAC;KACZ;IAID,wBAAO,GAAP;QACI,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACjC;QAID,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAe,IAAI,CAAC;QACzB,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;YACjG,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;YAM1C,IAAI,EAAE,KAAK,EAAE,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB;iBAAM;gBACH,IAAI,EAAE,CAAC,2BAA2B,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE;oBAEjD,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC;oBACvB,SAAS;iBACZ;gBAED,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC7C,IAAI,KAAK,KAAK,IAAI,EAAE;oBAChB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACzB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACzB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;iBACxC;qBAAM;oBAIH,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC;oBACvB,SAAS;iBACZ;gBACD,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;oBAKhB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACzB;qBAAM;oBAIH,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACpB;aACJ;SAMJ;KAIJ;IAGD,sBAAK,GAAL;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,QAAQ,GAAG,MAAM,CAAC,SAAS,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,MAAM,EAAE;YACvC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,QAAQ,GAAG,IAAI,CAAC;YAChB,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,OAAO,IAAI,CAAC;KACf;IApKM,2BAAoB,GAAG,CAAC,IAAI,CAAC;IAC7B,sBAAe,GAAG,CAAC,KAAK,CAAC;IAoKpC,aAAC;CAzKD,IAyKC;AAzKY,wBAAM;AAiLnB,SAAgB,2BAA2B,CAAC,KAAgD,EAAE,UAAmB,EAAE,UAAmB;IAGlI,IAAM,EAAE,GAAe,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,GAAA,CAAC,CAAC;IACrE,IAAM,EAAE,GAAiB,EAAE,CAAC;IAC5B,IAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;IACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC5B,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5C,EAAE,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;KAC3E;IACD,IAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,EAClB,SAAS,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EACrB,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAChC,aAAa,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAC1C,IAAI,MAAM,GAAa,IAAI,EAAE,MAAM,GAAa,IAAI,CAAC;IACrD,IAAI,UAAU,EAAE;QACZ,MAAM,GAAG,IAAI,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QAC1D,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChB,EAAE,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC;KAC3D;IACD,IAAI,UAAU,EAAE;QACZ,MAAM,GAAG,IAAI,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QAC3D,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChB,EAAE,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,SAAS,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;KAC7D;IACD,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,MAAM,CAAC,KAAK,EAAE,CAAC;IACf,OAAO;QACH,UAAU,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,GAAA,CAAC;QAC5D,UAAU,EAAE,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,GAAG,QAAQ,CAAC,QAAQ,EAAE,GAAG,YAAY;QAC3E,UAAU,EAAE,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,GAAG,aAAa;KAChF,CAAC;AACN,CAAC;AAhCD,kEAgCC;;;;;;;;;;;;;;;;;;;AClhBD;IAAA;QA4BI,aAAQ,GAAG,UAAU,IAAI;YACrB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YACrB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAE3B,OAAO,GAAG,KAAK,IAAI,EAAE;gBACjB,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACT,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;oBACnB,OAAO,IAAI,CAAC;iBACf;qBACI;oBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1B,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC9B;aACJ;YAED,OAAO,IAAI,CAAC;SACf,CAAC;KA+FL;IAvIG,wBAAK,GAAL;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACjB;IAGD,uBAAI,GAAJ,UAAK,IAAI;QACL,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QAErB,OAAO,GAAG,KAAK,IAAI,EAAE;YACjB,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACT,OAAO,GAAG,CAAC,IAAI,CAAC;aACnB;iBACI;gBACD,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC9B;SACJ;QAED,OAAO,IAAI,CAAC;KACf;IAuBD,6BAAU,GAAV,UAAW,IAAI;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KAC9C;IAGD,6BAAU,GAAV,UAAW,IAAI;QACX,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;QAE3B,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC;YACrB,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpB;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;KACzC;IAGD,sBAAG,GAAH;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACrB,IAAI,GAAG,KAAK,IAAI,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QAED,OAAO,GAAG,CAAC,IAAI,KAAK,IAAI,EAAE;YACtB,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;SAClB;QAED,OAAO,GAAG,CAAC,IAAI,CAAC;KACnB;IAGD,sBAAG,GAAH;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACrB,IAAI,GAAG,KAAK,IAAI,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QAED,OAAO,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;YACvB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;SACnB;QAED,OAAO,GAAG,CAAC,IAAI,CAAC;KACnB;IAID,2BAAQ,GAAR;QACI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC7B;IAGD,uBAAI,GAAJ,UAAK,EAAE;QACH,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC;QAC/B,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,MAAM,IAAI,EAAE;YAChC,EAAE,CAAC,IAAI,CAAC,CAAC;SACZ;KACJ;IAGD,wBAAK,GAAL,UAAM,EAAE;QACJ,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC;QAC/B,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,MAAM,IAAI,EAAE;YAChC,EAAE,CAAC,IAAI,CAAC,CAAC;SACZ;KACJ;IAGD,yBAAM,GAAN,UAAO,IAAI,EAAE,GAAG;QACZ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACrB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAE3B,OAAO,GAAG,KAAK,IAAI,EAAE;YACjB,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,OAAO,IAAI,CAAC;aACf;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9B;QAED,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;YAClD,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACzB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC3B,OAAO,IAAI,CAAC;aACf;SACJ;QAED,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;IACL,eAAC;AAAD,CAAC,IAAA;AA5IY,4BAAQ;AA6IrB;IAII,kBAAY,IAAI;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB;IAED,uBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;KAC3D;IAID,uBAAI,GAAJ;QACI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC5B,IAAI,IAAI,KAAK,IAAI,EAAE;gBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvB;SACJ;aACI;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,EAAE;gBAG7B,IAAI,IAAI,CAAC;gBACT,GAAG;oBACC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;oBACpB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;wBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;qBACxC;yBACI;wBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,MAAM;qBACT;iBACJ,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,EAAE;aACzC;iBACI;gBAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrC;SACJ;QACD,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;KAC3D;IAID,uBAAI,GAAJ;QACI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC5B,IAAI,IAAI,KAAK,IAAI,EAAE;gBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvB;SACJ;aACI;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;gBAC5B,IAAI,IAAI,CAAC;gBACT,GAAG;oBACC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;oBACpB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;wBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;qBACxC;yBACI;wBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,MAAM;qBACT;iBACJ,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;aACxC;iBACI;gBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACpC;SACJ;QACD,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;KAC3D;IAED,2BAAQ,GAAR,UAAS,KAAK;QACV,OAAO,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;SACtB;QACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACxB;IAED,2BAAQ,GAAR,UAAS,KAAK;QACV,OAAO,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;YACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;SACvB;QACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACxB;IACL,eAAC;AAAD,CAAC,IAAA;AA9FY,4BAAQ;AAgGrB;IAKI,cAAY,IAAI;QACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;KACnB;IAED,wBAAS,GAAT,UAAU,GAAG;QACT,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;KACvC;IAED,wBAAS,GAAT,UAAU,GAAG,EAAE,GAAG;QACd,IAAI,GAAG,EAAE;YACL,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;SACpB;aACI;YACD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;SACnB;KACJ;IACL,WAAC;AAAD,CAAC,IAAA;AAED;IAA+B,0BAAQ;IAKnC,gBAAY,UAAkC;QAA9C,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC;;KACjB;IAGD,uBAAM,GAAN,UAAO,IAAI;QACP,IAAI,GAAG,GAAG,KAAK,CAAC;QAEhB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;YAErB,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,GAAG,GAAG,IAAI,CAAC;YACX,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;aACI;YACD,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;YAE/B,IAAI,GAAG,GAAG,KAAK,CAAC;YAChB,IAAI,IAAI,GAAG,KAAK,CAAC;YAGjB,IAAI,EAAE,GAAG,IAAI,CAAC;YACd,IAAI,GAAG,GAAG,IAAI,CAAC;YACf,IAAI,CAAC,GAAG,IAAI,CAAC;YACb,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YACtB,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAGvB,OAAO,IAAI,EAAE;gBACT,IAAI,IAAI,KAAK,IAAI,EAAE;oBAEf,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;oBACtB,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBACvB,GAAG,GAAG,IAAI,CAAC;oBACX,IAAI,CAAC,IAAI,EAAE,CAAC;iBACf;qBACI,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBAE5D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;oBAChB,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;iBAC1B;gBAGD,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACzC,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,KAAK,EAAE,CAAC;oBAE5B,IAAI,IAAI,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;wBAC5B,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;qBACxD;yBACI;wBACD,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;qBACxD;iBACJ;gBAED,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAG5C,IAAI,GAAG,KAAK,CAAC,EAAE;oBACX,MAAM;iBACT;gBAED,IAAI,GAAG,GAAG,CAAC;gBACX,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;gBAGd,IAAI,EAAE,KAAK,IAAI,EAAE;oBACb,GAAG,GAAG,EAAE,CAAC;iBACZ;gBACD,EAAE,GAAG,CAAC,CAAC;gBACP,CAAC,GAAG,IAAI,CAAC;gBACT,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAC9B;YAGD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC3B;QAGD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QAEvB,OAAO,GAAG,CAAC;KACd;IAGD,uBAAM,GAAN,UAAO,IAAI;QACP,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;YACrB,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,GAAG,IAAI,CAAC;QACb,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,GAAG,GAAG,IAAI,CAAC;QAEf,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;YACjC,IAAI,IAAI,GAAG,GAAG,CAAC;YAGf,EAAE,GAAG,CAAC,CAAC;YACP,CAAC,GAAG,IAAI,CAAC;YACT,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAE3B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAE5C,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YAGd,IAAI,GAAG,KAAK,CAAC,EAAE;gBACX,KAAK,GAAG,IAAI,CAAC;aAChB;YAGD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC7D,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACrC,IAAI,EAAE,GAAG,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;oBACzC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;oBACtB,CAAC,GAAG,EAAE,CAAC;iBACV;qBACI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC3C,IAAI,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC;oBACjC,IAAI,OAAO,KAAK,IAAI,EAAE;wBAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE;4BAErF,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC;4BACd,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC;4BACnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;yBACnB;6BACI;4BACD,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC;4BAE1B,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE;gCACxC,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;6BACrD;iCACI,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;gCAC9C,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;6BACrD;4BAGD,IAAI,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;4BAC7B,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;4BACf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;4BAChB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;4BACrB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;yBACzB;qBACJ;iBACJ;aACJ;SACJ;QAGD,IAAI,KAAK,KAAK,IAAI,EAAE;YAChB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;QAGD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;SAC1B;QAED,OAAO,KAAK,KAAK,IAAI,CAAC;KACzB;IAEM,aAAM,GAAb,UAAc,IAAI;QACd,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC;KACpC;IAEM,oBAAa,GAApB,UAAqB,IAAI,EAAE,GAAG;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;QAEhC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAE1B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAEjB,OAAO,IAAI,CAAC;KACf;IAEM,oBAAa,GAApB,UAAqB,IAAI,EAAE,GAAG;QAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACvE,OAAO,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAC1C;IACL,aAAC;AAAD,CArMA,CAA+B,QAAQ,GAqMtC;AArMY,wBAAM;;;;;;;;;;;;;;;;;;;AC9R4B;AACpB;AAkB3B,SAAgB,kBAAkB,CAAC,CAAkB;IACjD,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW;QACtC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,CAAY,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAA,EAAE,SAAS,CAAC,KAAK,EAAE,CAAC;QAC1E,SAAS,CAAC,KAAK,EAAE,CAAC;IACtB,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW;QAC/B,CAAC,CAAC,MAAM,GAAc,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,CAAY,EAAE,CAAC,IAAK,OAAA,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAA,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;IACzG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IACvC,OAAO,CAAC,CAAC,MAAM,CAAC;AACpB,CAAC;AARD,gDAQC;AAED;IACI,mBACW,CAAS,EACT,CAAS,EACT,CAAS,EACT,CAAS;QAHT,MAAC,GAAD,CAAC,CAAQ;QACT,MAAC,GAAD,CAAC,CAAQ;QACT,MAAC,GAAD,CAAC,CAAQ;QACT,MAAC,GAAD,CAAC,CAAQ;KAAK;IAElB,eAAK,GAAZ,cAA4B,OAAO,IAAI,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE;IAE3J,sBAAE,GAAF,cAAe,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;IAE9C,sBAAE,GAAF,cAAe,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;IAE9C,4BAAQ,GAAR,UAAS,CAAY;QACjB,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;QAChC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAClD,OAAO,CAAC,CAAC;KACZ;IAED,4BAAQ,GAAR,UAAS,CAAY;QACjB,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;QAChC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAClD,OAAO,CAAC,CAAC;KACZ;IAED,8BAAU,GAAV,UAAW,EAAU;QACjB,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QACxB,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;KAChB;IAED,8BAAU,GAAV,UAAW,EAAU;QACjB,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QACxB,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;KAChB;IAED,yBAAK,GAAL;QACI,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;KAC1B;IAED,0BAAM,GAAN;QACI,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;KAC1B;IAED,yBAAK,GAAL,UAAM,CAAY;QACd,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACpH;IAWD,qCAAiB,GAAjB,UAAkB,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;QAC5D,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YACrC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAChC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YACpC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxB,IAAI,CAAC,GAAG,SAAS,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvG,IAAI,CAAC,KAAK,IAAI;gBAAE,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC1D;QACD,OAAO,aAAa,CAAC;KACxB;IAUD,mCAAe,GAAf,UAAgB,EAAU,EAAE,EAAU;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KAC3C;IAED,4BAAQ,GAAR;QACI,OAAO;YACH,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;YACxB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;YACxB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;YACxB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;SAAC,CAAC;KACjC;IAEM,0BAAgB,GAAvB,UACI,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU;QACtB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAC9B,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAC9B,WAAW,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;QAC5C,IAAI,WAAW,IAAI,CAAC;YAAE,OAAO,IAAI,CAAC;QAClC,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAC9B,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,EAChC,CAAC,GAAG,IAAI,GAAG,WAAW,EACtB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,EAChC,CAAC,GAAG,IAAI,GAAG,WAAW,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACtC,OAAO;gBACH,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI;gBAChB,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI;aACnB,CAAC;SACL;QACD,OAAO,IAAI,CAAC;KACf;IAED,2BAAO,GAAP,UAAQ,GAAW;QACf,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;KAChF;IACL,gBAAC;AAAD,CAAC,IAAA;AAxHY,8BAAS;AAqItB,SAAgB,eAAe,CAAC,MAAiB,EAAE,MAAiB,EAAE,EAAU;IAE5E,IAAM,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAC7F,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAC3F,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAChB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAChB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClD,OAAO;QACH,kBAAkB,EAAE,EAAE;QACtB,kBAAkB,EAAE,EAAE;QACtB,UAAU,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;KAC/D,CAAA;AACL,CAAC;AAZD,0CAYC;AAWD,SAAgB,UAAU,CAAC,CAA2B,EAAE,MAAiB,EAAE,EAAU;IACjF,IAAI,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI,CAAC,EAAE;QAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;IACjD,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EACf,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EACf,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACrC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;AAC5D,CAAC;AAPD,gCAOC;AAED;IAII,cAAmB,CAAW,EAAS,CAAY,EAAS,GAAW;QAApD,MAAC,GAAD,CAAC,CAAU;QAAS,MAAC,GAAD,CAAC,CAAW;QAAS,QAAG,GAAH,GAAG,CAAQ;QACnE,IAAI,CAAC,IAAI,GAAG,UAAU,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,UAAU,EAAE,CAAC;KAC5B;IACL,WAAC;AAAD,CAAC,IAAA;AAED;IACI,eAAmB,MAAe,EAAS,CAAO,EAAS,GAAW;QAAnD,WAAM,GAAN,MAAM,CAAS;QAAS,MAAC,GAAD,CAAC,CAAM;QAAS,QAAG,GAAH,GAAG,CAAQ;KAAI;IAC9E,YAAC;AAAD,CAAC,IAAA;AAED,SAAS,aAAa,CAAC,CAAQ,EAAE,CAAQ;IACrC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;QACf,OAAO,CAAC,CAAC;KACZ;IACD,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;QACf,OAAO,CAAC,CAAC,CAAC;KACb;IACD,IAAI,CAAC,CAAC,MAAM,EAAE;QAEV,OAAO,CAAC,CAAC,CAAC;KACb;IACD,IAAI,CAAC,CAAC,MAAM,EAAE;QAEV,OAAO,CAAC,CAAC;KACZ;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AAED,SAAS,UAAU;IACf,OAAO,IAAIA,aAAM,CAAO,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAA,CAAC,CAAC;AACrD,CAAC;AAWD,IAAI,KAAK,GAAkB;IACvB,SAAS,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,EAAE,EAAE,GAAA;IACrB,OAAO,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,CAAC,GAAA;IAChB,QAAQ,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,CAAC,GAAA;IACjB,OAAO,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,KAAK,EAAE,GAAA;IACtB,QAAQ,EAAE,UAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,IAAK,OAAA,IAAI,SAAS,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,GAAA;IACzG,cAAc,EAAE,eAAe;CAClC,CAAC;AAEF,IAAI,KAAK,GAAkB;IACvB,SAAS,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,EAAE,EAAE,GAAA;IACrB,OAAO,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,CAAC,GAAA;IAChB,QAAQ,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,CAAC,GAAA;IACjB,OAAO,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,EAAE,GAAA;IACvB,QAAQ,EAAE,UAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,IAAK,OAAA,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,GAAA;IACzG,cAAc,EAAE,eAAe;CAClC,CAAC;AAEF,SAAS,wBAAwB,CAAC,IAAqB,EAAE,CAAgB,EAAE,MAAc,EAAE,WAA4B;IAA5B,4BAAA,EAAA,mBAA4B;IAEnH,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EACtB,EAAE,GAAG,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAChE,EAAE,GAAG,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAChE,gBAAgB,GAAiB,CAAC,EAAE,GAAG,EAAE;UACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,GAAiB,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,GAAA,EAAE,EAAE,CAAC,EAC5G,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,EACnC,EAAE,GAAe,IAAI,KAAK,CAAC,CAAC,CAAC,EAC7B,EAAE,GAAgB,IAAI,KAAK,CAAC,CAAC,CAAC,EAC9B,CAAC,GAAG,CAAC,EACL,GAAG,GAAG,UAAC,CAAC,EAAE,CAAC,IAAO,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA,EAAE,CAAC;IAC/C,IAAI,WAAW,EAAE;QAEb,IAAI,CAAC,GAAc,IAAI,CAAC,MAAM,EAC1B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EACxC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAC1C,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,GAAG,CAAC;QAClC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,GAAG,CAAC;QAClC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3D;IACD,IAAI,EAAE;QAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAA,CAAC,CAAC;IAC5D,IAAI,EAAE;QAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;YACzB,IAAI,CAAC,GAAc,CAAC,CAAC,MAAM,CAAC;YAC5B,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;SACxF,CAAC,CAAC;IACH,IAAI,EAAE,GAAG,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IAChD,IAAI,EAAE,EAAE;QACJ,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC,IAAM,CAAC,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE,CAAA,EAAE,CAAC,CAAC;QAC7C,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC,IAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;YACjB,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1D,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,IAAI,aAAa,GAAA,CAAC,CAAC;YAClD,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC,IAAM,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;SAC9E,CAAC,CAAC;KACN;IACD,OAAO,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACvC,CAAC;AAED,SAAS,mBAAmB,CAAC,EAAe,EAAE,IAAgB,EAC1D,IAAmB,EAAE,MAAc;IAEnC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;IACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACd,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;IACjC,IAAI,MAAM,GAAG,IAAI,KAAK,CAAQ,CAAC,CAAC,CAAC;IACjC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QACpB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACzD;IACD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3B,IAAI,EAAE,GAAG,IAAI,KAAK,EAAc,CAAC;IACjC,IAAI,QAAQ,GAAG,UAAU,EAAE,CAAC;IAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QACpB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACZ,IAAI,CAAC,CAAC,MAAM,EAAE;YACV,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;SACpC;aAAM;YAEH,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,cAAc,GAAG,UAAC,CAAC,EAAE,CAAC;gBACtB,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;gBAC/D,EAAE,CAAC,IAAI,CAAC,IAAIC,eAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;aAC1C,CAAC;YACF,IAAI,eAAe,GAAG,UAAC,OAAO,EAAE,OAAO,EAAE,KAAK;gBAC1C,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAClC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,MAAM,IAAI,EAAE;oBACjC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACZ,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACxB;aACJ,CAAC;YACF,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,GAAA,CAAC,CAAC;YAChE,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,GAAA,CAAC,CAAC;SACnE;KACJ;IACD,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;IACpC,OAAO,EAAE,CAAC;AACd,CAAC;AAED,SAAS,eAAe,CAAC,CAAO,EAAE,QAAsB;IACpD,IAAI,CAAC,GAAG,UAAC,OAAO,EAAE,OAAO;QACrB,IAAI,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,CAAC;QACN,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,MAAM,IAAI,EAAE;YACjC,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC9C,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACrB,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACxB;YACD,IAAI,OAAO,IAAI,CAAC,EAAE;gBACd,MAAM;aACT;SACJ;KACJ,CAAA;IACD,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAClB,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtB,CAAC;AAED,SAAS,eAAe,CAAC,CAAO,EAAE,QAAsB;IACpD,IAAI,CAAC,GAAG,UAAC,OAAO,EAAE,OAAO;QACrB,IAAI,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;QACxC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YACrC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACxB;KACJ,CAAA;IACD,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAClB,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtB,CAAC;AAED,SAAgB,oBAAoB,CAAC,EAAe,EAAE,IAAgB;IAClE,OAAO,mBAAmB,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACtD,CAAC;AAFD,oDAEC;AAED,SAAgB,oBAAoB,CAAC,EAAe,EAAE,IAAgB;IAClE,OAAO,mBAAmB,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACtD,CAAC;AAFD,oDAEC;AAED,SAAgB,yBAAyB,CAAC,IAAqB;IAC3D,OAAO,wBAAwB,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACvD,CAAC;AAFD,8DAEC;AAED,SAAgB,yBAAyB,CAAC,IAAqB;IAC3D,OAAO,wBAAwB,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACvD,CAAC;AAFD,8DAEC;AAED,SAAgB,cAAc,CAAC,EAAe;IAC1C,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,IAAIA,aAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAA,CAAC,CAAC;IAC3C,IAAI,EAAE,GAAG,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,IAAIA,WAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,MAAM,CAAC,KAAK,EAAE,CAAC;IACf,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAA,CAAC,CAAC;IACrD,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,IAAIA,aAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAA,CAAC,CAAC;IACtC,EAAE,GAAG,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAClC,MAAM,GAAG,IAAIA,WAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC5B,MAAM,CAAC,KAAK,EAAE,CAAC;IACf,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAA,CAAC,CAAC;AACzD,CAAC;AAXD,wCAWC;AAaD;IAAqC,mCAAQ;IACzC,yBAAmB,KAAa,EAAE,CAAS;QAA3C,YACI,kBAAM,CAAC,EAAE,CAAC,CAAC,SACd;QAFkB,WAAK,GAAL,KAAK,CAAQ;;KAE/B;IACL,sBAAC;AAAD,CAJA,CAAqCA,aAAQ,GAI5C;AAJY,0CAAe;AAM5B;IAKI,oBAAoB,KAAkB,EAC1B,MAAyB,EACzB,SAAiC,EACzC,WAAwB,EAChB,aAA8B;QAJ1C,iBA8BC;QA5BW,0BAAA,EAAA,gBAAiC;QACzC,4BAAA,EAAA,kBAAwB;QAChB,8BAAA,EAAA,qBAA8B;QAJtB,UAAK,GAAL,KAAK,CAAa;QAC1B,WAAM,GAAN,MAAM,CAAmB;QACzB,cAAS,GAAT,SAAS,CAAwB;QAEjC,kBAAa,GAAb,aAAa,CAAiB;QAEtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC;YAC5B,OAAO,CAAC,CAAC,QAAQ,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACjD,CAAC,CAAC;QAEH,IAAI,WAAW;YAAE,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAErD,IAAI,aAAa,IAAI,SAAS,IAAI,OAAO,SAAS,CAAC,MAAM,KAAK,WAAW,EAAE;YACvE,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;gBAC1B,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,EACzB;oBAEC,CAAC,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,OAAO;iBACP;gBACc,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBACxC,CAAC,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;aACpE,CAAC,CAAC;YACH,kBAAkB,CAAC,SAAS,CAAC,CAAC;YAC9B,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;YACrB,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACZ,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,SAAS,KAAK,WAAW,GAAG,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;gBACjH,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,SAAS,KAAK,WAAW,GAAG,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;aACpH,CAAC,CAAC;SACN;KACJ;IAGO,qCAAgB,GAAxB,UAAyB,CAAM;QAC3B,OAAO,IAAIA,eAAU,CACjB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAC3B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAC5B,CAAC,CAAC,GAAG,EACL,OAAO,CAAC,CAAC,QAAQ,KAAK,WAAW,GAAG,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;KAC/D;IAGO,iCAAY,GAApB,UAAqB,CAAM;QAA3B,iBAiBC;QAhBG,IAAI,CAAC,IAAI,CAAC,aAAa;YAAE,OAAO;QAEhC,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,CAAC,IAAI,KAAK,GAAG;YAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,QAAQ,CAAC;QAC/C,IAAI,EAAE,GAAgB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;QAC/F,IAAI,CAAC,GAAc,IAAI,CAAC;QACxB,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC;YAER,IAAI,CAAC,EAAE;gBACH,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;oBACnB,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;iBACrB;aACJ;YACD,CAAC,GAAG,CAAC,CAAC;SACT,CAAC,CAAC;KACN;IAEO,oCAAe,GAAvB,UAAwB,CAAM;QAA9B,iBAQC;QAPG,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;YACxB,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;YACpC,EAAE,CAAC,IAAI,CAAC,IAAIA,eAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;SACjD,CAAC,CAAC;KACN;IAEO,sCAAiB,GAAzB,UAA0B,WAAkB;QAA5C,iBAWC;QAVG,IAAI,KAAK,GAAG,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,CAAC,IAAI,KAAK,YAAY,GAAA,CAAC;QAC1E,IAAI,CAAC,YAAY,GAAG,WAAW;aAC1B,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,GAAA,CAAC;aACvC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,WAAW;aAC1B,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,GAAA,CAAC;aACvC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QACxC,WAAW;aACN,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,WAAW,GAAA,CAAC;aACnC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KAC9C;IAEO,4CAAuB,GAA/B,UAAgC,EAAY,EAAE,EAAY,EAAE,OAAiB,EAAE,UAAoC;QAC/G,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,CAAC,KAAK,EAAE;gBACT,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;gBACzD,OAAO,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;aAC9B;iBAAM;gBACH,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;aACzB;YACD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC;YACpD,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;SAC5D,CAAC,CAAC;KACN;IAED,6BAAQ,GAAR,UAAS,EAAY,EAAE,EAAY,EAAE,CAAW;QAC5C,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC;YAAE,OAAO;QAC1E,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,EAAE,GAAA,EAAE,IAAI,CAAC,YAAY,EAAE,yBAAyB,EAC9E,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAmB,CAAC,CAAC,QAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,GAAA,EACxF,UAAA,CAAC;YACG,IAAI,IAAI,GAAG,CAAC,CAAmB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACtE,IAAI,IAAI,GAAG,CAAC,CAAmB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACtE,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;YACvB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;YACvB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;SAC1B,CAAC,CAAC;KACV;IAED,6BAAQ,GAAR,UAAS,EAAY,EAAE,EAAY,EAAE,CAAW;QAC5C,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,YAAY;YAAE,OAAO;QAClD,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,EAAE,GAAA,EAAE,IAAI,CAAC,YAAY,EAAE,yBAAyB,EAC9E,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAmB,CAAC,CAAC,QAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,GAAA,EACxF,UAAA,CAAC;YACG,IAAI,IAAI,GAAG,CAAC,CAAmB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACtE,IAAI,IAAI,GAAG,CAAC,CAAmB,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACtE,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;YACvB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;YACvB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;SAC1B,CAAC,CAAC;KACV;IAED,qCAAgB,GAAhB;QAAA,iBAKC;QAJG,OAAO;YACH,UAAC,EAAE,EAAE,EAAE,EAAE,CAAC,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAA;YACvC,UAAC,EAAE,EAAE,EAAE,EAAE,CAAC,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAA;SAC1C,CAAC;KACL;IAEO,4BAAO,GAAf,UAAgB,EAAY,EAAE,EAAY,EAAE,KAAe,EAAE,OAAiB,EAC1E,UAAoC,EACpC,EAAgB,EAChB,mBAAyD,EACzD,gBAAuC,EACvC,iBAA8C;QAE9C,IAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QAC1D,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE;YACtC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE;YACtC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;YACvC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACtC;KACJ;IAEO,0BAAK,GAAb,UAAc,EAAc,EAAE,EAAgB,EAAE,QAAkB,EAAE,OAAiB;QACjF,IAAI,MAAM,GAAG,IAAIA,WAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACtC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,EAAE,CAAC;KAClB;IACL,iBAAC;AAAD,CAAC,IAAA;AAlKY,gCAAU;;;;;;ACla3B;IAII,qBAAmB,IAAO;QAAP,SAAI,GAAJ,IAAI,CAAG;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACtB;IAEM,8BAAQ,GAAf,UAAgB,QAAQ;QACpB,IAAI,GAAG,GAAG,EAAE,EAAE,SAAS,GAAG,KAAK,CAAC;QAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAC3C,IAAI,OAAO,GAAmB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACf,SAAS,GAAG,KAAK,CAAC;gBAClB,SAAS;aACZ;YACD,IAAI,SAAS,EAAE;gBACX,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;aACnB;YACD,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACvC,SAAS,GAAG,IAAI,CAAC;SACpB;QACD,IAAI,GAAG,KAAK,EAAE,EAAE;YACZ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACzB;QACD,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;KACvD;IAEM,6BAAO,GAAd,UAAe,CAAC;QACZ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;YACf,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;SAC5C;KACJ;IAEM,2BAAK,GAAZ;QACI,OAAO,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAC,CAAS,EAAE,CAAiB;YAC5E,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;SACxB,EAAE,CAAC,CAAC,CAAC;KACT;IAEM,yBAAG,GAAV;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;IAEM,2BAAK,GAAZ;QACI,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;KAC5B;IAEM,8BAAQ,GAAf,UAAgB,CAAiB;QAC7B,IAAI,IAAI,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAAE,OAAO,IAAI,CAAC;SACjD;QACD,OAAO,KAAK,CAAC;KAChB;IAEM,4BAAM,GAAb,UAAc,QAAiC;QAA/C,iBAEC;QADG,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAA,CAAC,IAAG,OAAA,QAAQ,CAAC,KAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAA,CAAC,CAAC;KACrF;IAEM,4BAAM,GAAb,UAAc,GAAO,EAAE,QAAQ;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,WAAW,CAAI,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;KACxD;IAEM,2BAAK,GAAZ,UAAa,KAAqB,EAAE,QAAQ;QACxC,IAAI,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,KAAK,CAAC;aAC1B,IAAI,KAAK,CAAC,KAAK,EAAE;YAAE,OAAO,IAAI,CAAC;aAC/B,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC;SACf;aAAM;YACH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,OAAO,KAAK,CAAC;SAChB;KACJ;IAEM,+BAAS,GAAhB,UAAiB,QAAiC;QAC9C,IAAI,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,IAAI,CAAC;;YACzB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KACzC;IAEM,gCAAU,GAAjB,UAAkB,QAAiC;QAC/C,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO,IAAI,WAAW,CAAI,IAAI,CAAC,CAAC;aAC1D,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;YAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAAE;aAC3D;YACD,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;YACzE,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,OAAO,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SAC/C;KACJ;IACM,iCAAW,GAAlB,UAAmB,OAAuB,EAAE,QAAW,EAAE,WAA4C,EAAE,QAAiC;QACpI,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAE1C,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC5B,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACpC,IAAI,WAAW,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;YAC/C,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACtC;QACD,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,WAAW,KAAK,IAAI,EAAE;YACtB,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;KAC5C;IACL,kBAAC;AAAD,CAAC,IAAA;AAzGY,kCAAW;AA8GxB;IAEI,uBAAoB,QAAiC;QAAjC,aAAQ,GAAR,QAAQ,CAAyB;KAAK;IAKnD,2BAAG,GAAV;QACI,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;KACzB;IAKM,4BAAI,GAAX;QAAY,cAAY;aAAZ,UAAY,EAAZ,qBAAY,EAAZ,IAAY;YAAZ,yBAAY;;QACpB,IAAI,WAAW,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YACnC,WAAW,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE;gBACpB,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjE;QACD,OAAO,WAAW,CAAC;KACtB;IAKM,6BAAK,GAAZ;QACI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;KACxC;IAKM,8BAAM,GAAb;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC1C;IAKM,+BAAO,GAAd,UAAe,CAAC;QACZ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KACxB;IAIM,2BAAG,GAAV;QACI,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,OAAO,GAAG,CAAC;KACd;IAIM,iCAAS,GAAhB,UAAiB,QAAwB,EAAE,MAAS,EAAE,WAAmD;QAAnD,4BAAA,EAAA,kBAAmD;QACrG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnF;IACM,gCAAQ,GAAf,UAAgB,QAAQ;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACvC;IAKM,6BAAK,GAAZ;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;KAC5B;IACL,oBAAC;AAAD,CAAC,IAAA;AAxEY,sCAAa;;;;;;AC/GyB;AAEnD;IACI,mBAAmB,EAAU,EAAS,QAAgB;QAAnC,OAAE,GAAF,EAAE,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAQ;KAAK;IAC/D,gBAAC;AAAD,CAAC,IAAA;AAED;IACI,cAAmB,EAAU;QAAV,OAAE,GAAF,EAAE,CAAQ;QACzB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;IAKL,WAAC;AAAD,CAAC,IAAA;AAED;IACI,oBAAmB,IAAU,EAAS,IAAgB,EAAS,CAAS;QAArD,SAAI,GAAJ,IAAI,CAAM;QAAS,SAAI,GAAJ,IAAI,CAAY;QAAS,MAAC,GAAD,CAAC,CAAQ;KAAI;IAChF,iBAAC;AAAD,CAAC,IAAA;AASD;IAGI,oBAAmB,CAAS,EAAS,EAAU,EAAE,cAAmC,EAAE,cAAmC,EAAE,SAA8B;QAAtI,MAAC,GAAD,CAAC,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAQ;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAAC,OAAO,CAAC,EAAE;YAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QAE7D,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;QAAC,OAAO,CAAC,EAAE,EAAE;YAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,GAAW,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAW,cAAc,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3D;KACJ;IAUD,mCAAc,GAAd;QACI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YAC7B,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;SACrC;QACD,OAAO,CAAC,CAAC;KACZ;IAQD,sCAAiB,GAAjB,UAAkB,KAAa;QAC3B,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;KACzC;IAED,uCAAkB,GAAlB,UAAmB,KAAa,EAAE,GAAW;QACzC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAC9C;IAKD,mDAA8B,GAA9B,UACI,KAAa,EACb,GAAW,EACX,QAA8C;QAE9C,IAAI,CAAC,GAAG,IAAIC,oBAAa,CAAa,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAA,CAAC,EACvD,CAAC,GAAS,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAChC,EAAE,GAAe,IAAI,UAAU,CAAC,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC,EACzC,WAAW,GAAG,EAAE,CAAC;QACrB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACX,OAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;YACd,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACb,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;YACZ,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE;gBACd,MAAM;aACT;YACD,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;YAAC,OAAO,CAAC,EAAE,EAAE;gBACrC,IAAI,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAC3B,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBAGtC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBAAE,SAAS;gBAIlD,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC/B,IAAG,MAAM,IAAI,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;oBACnD,SAAS;gBAEb,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EACxD,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAGvC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACxB,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aACpC;SACJ;QACD,IAAI,IAAI,GAAY,EAAE,CAAC;QACvB,OAAO,EAAE,CAAC,IAAI,EAAE;YACZ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;YACb,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACzB;QACD,OAAO,IAAI,CAAC;KACf;IAEO,uCAAkB,GAA1B,UAA2B,KAAa,EAAE,IAAiB;QAAjB,qBAAA,EAAA,QAAgB,CAAC;QACvD,IAAI,CAAC,GAAG,IAAIA,oBAAa,CAAO,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAA,CAAC,EACjD,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAC1B,CAAC,GAAa,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/B,OAAO,CAAC,EAAE,EAAE;YACR,IAAI,IAAI,GAAS,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,iBAAiB,CAAC;YACpD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;QACD,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;YAEf,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,EAAE,KAAK,IAAI,EAAE;gBACf,IAAI,IAAI,GAAa,EAAE,CAAC;gBACxB,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,OAAO,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;oBAClC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACrB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;iBACd;gBACD,OAAO,IAAI,CAAC;aACf;YACD,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;YAAC,OAAO,CAAC,EAAE,EAAE;gBACjC,IAAI,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;gBACtC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC;gBACjC,IAAI,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBACrC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACR,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;oBACX,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,CAAC,EAAC,CAAC,IAAG,OAAA,CAAC,CAAC,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;iBACvC;aACJ;SACJ;QACD,OAAO,CAAC,CAAC;KACZ;IACL,iBAAC;AAAD,CAAC,IAAA;AAjIY,gCAAU;;;;;;;;;;;;;;;;;;;AC3Bc;AACjC;IAAA;KAGC;IAAD,YAAC;AAAD,CAAC,IAAA;AAHY,sBAAK;AAKlB;IACI,qBAAmB,EAAU,EAAS,EAAU,EAAS,EAAU,EAAS,EAAU;QAAnE,OAAE,GAAF,EAAE,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAQ;KAAK;IAC/F,kBAAC;AAAD,CAAC,IAAA;AAFY,kCAAW;AAIxB;IAA+B,6BAAK;IAApC;;KAEC;IAAD,gBAAC;AAAD,CAFA,CAA+B,KAAK,GAEnC;AAFY,8BAAS;AAUtB,SAAgB,MAAM,CAAC,EAAS,EAAE,EAAS,EAAE,EAAS;IAClD,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AAFD,wBAEC;AAED,SAAS,KAAK,CAAC,CAAQ,EAAE,EAAS,EAAE,EAAS;IACzC,OAAO,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,SAAS,KAAK,CAAC,CAAQ,EAAE,EAAS,EAAE,EAAS;IACzC,OAAO,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AACjC,CAAC;AASD,SAAgB,UAAU,CAAC,CAAU;IACjC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;IACvE,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IACpB,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QACpB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI;YAAE,MAAM;KAC9B;IACD,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,IAAI,CAAC,GAAY,EAAE,CAAC;IACpB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAClB,IAAI,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE;QAClB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KACzB;SAAM;QAEH,IAAI,MAAM,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YACvB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI;gBAAE,MAAM;QAC/B,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QAGf,CAAC,GAAG,MAAM,CAAC;QACX,OAAO,EAAE,CAAC,IAAI,MAAM,EAAE;YAElB,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM;gBACrD,SAAS;YAEb,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EACnB;gBAEI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;oBAClD,MAAM;;oBAEN,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;aACrB;YACD,IAAI,CAAC,IAAI,MAAM;gBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;QAGD,IAAI,MAAM,IAAI,MAAM;YAChB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACtB,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC;QACnB,CAAC,GAAG,MAAM,CAAC;QACX,OAAO,EAAE,CAAC,IAAI,MAAM,EAAE;YAElB,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM;gBACrD,SAAS;YAEb,OAAO,CAAC,CAAC,MAAM,GAAG,GAAG,EACrB;gBAEI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;oBAClD,MAAM;;oBAEN,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;aACrB;YACD,IAAI,CAAC,IAAI,MAAM;gBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;KACJ;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AA9DD,gCA8DC;AAGD,SAAgB,oBAAoB,CAAC,CAAQ,EAAE,CAAU,EAAE,CAAqB;IAC5E,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CACX,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAA,CAC5E,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AAJD,oDAIC;AAkBD,SAAS,kBAAkB,CAAC,CAAQ,EAAE,CAAU;IAG5C,IAAI,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnB,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC;AAC5F,CAAC;AASD,SAAS,mBAAmB,CAAC,CAAQ,EAAE,CAAU;IAC7C,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAGrB,IAAI,CAAS,EAAE,CAAS,EAAE,CAAS,CAAC;IACpC,IAAI,GAAY,EAAE,GAAY,CAAC;IAI/B,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,OAAO,CAAC,CAAC;IAEb,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAK;QAClB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACX,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,OAAO,CAAC,CAAC;;gBAET,OAAO,CAAC,CAAC;QAEjB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5B,GAAG,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,OAAO,CAAC,CAAC;QAIb,GAAG,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,GAAG,EAAE;YACL,IAAI,GAAG;gBACH,CAAC,GAAG,CAAC,CAAC;iBACL;gBACD,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,CAAC,GAAG,CAAC,CAAC;;oBAEN,CAAC,GAAG,CAAC,CAAC;aACb;SACJ;aACI;YACD,IAAI,CAAC,GAAG;gBACJ,CAAC,GAAG,CAAC,CAAC;iBACL;gBACD,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,CAAC,GAAG,CAAC,CAAC;;oBAEN,CAAC,GAAG,CAAC,CAAC;aACb;SACJ;KACJ;AACL,CAAC;AAQD,SAAS,mBAAmB,CAAC,CAAQ,EAAE,CAAU;IAC7C,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAErB,IAAI,CAAS,EAAE,CAAS,EAAE,CAAS,CAAC;IACpC,IAAI,GAAY,EAAE,GAAY,CAAC;IAI/B,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,OAAO,CAAC,CAAC;IAEb,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAK;QAClB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACX,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,OAAO,CAAC,CAAC;;gBAET,OAAO,CAAC,CAAC;QAEjB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5B,GAAG,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;YAChC,OAAO,CAAC,CAAC;QAIb,GAAG,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,GAAG,EAAE;YACL,IAAI,CAAC,GAAG;gBACJ,CAAC,GAAG,CAAC,CAAC;iBACL;gBACD,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,CAAC,GAAG,CAAC,CAAC;;oBAEN,CAAC,GAAG,CAAC,CAAC;aACb;SACJ;aACI;YACD,IAAI,GAAG;gBACH,CAAC,GAAG,CAAC,CAAC;iBACL;gBACD,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,CAAC,GAAG,CAAC,CAAC;;oBAEN,CAAC,GAAG,CAAC,CAAC;aACb;SACJ;KACJ;AACL,CAAC;AASD,SAAgB,iBAAiB,CAAC,CAAU,EAAE,CAAU,EAAE,EAAoC,EAAE,EAAoC,EAAE,IAA+C,EAAE,IAA+C;IAClO,IAAI,GAAW,EAAE,GAAW,CAAC;IAG7B,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAGpB,IAAI,IAAI,GAAG,KAAK,CAAC;IACjB,OAAO,CAAC,IAAI,EAAE;QACV,IAAI,GAAG,IAAI,CAAC;QACZ,OAAO,IAAI,EAAE;YACT,IAAI,GAAG,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC;gBAAE,GAAG,GAAG,CAAC,CAAC;YAClC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBAAE,MAAM;YAC5C,EAAE,GAAG,CAAC;SACT;QACD,OAAO,IAAI,EAAE;YACT,IAAI,GAAG,KAAK,CAAC;gBAAE,GAAG,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YAClC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBAAE,MAAM;YAC5C,EAAE,GAAG,CAAC;YACN,IAAI,GAAG,KAAK,CAAC;SAChB;KACJ;IACD,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;AAChC,CAAC;AAxBD,8CAwBC;AAED,SAAgB,mBAAmB,CAAC,CAAU,EAAE,CAAU;IACtD,IAAI,EAAE,GAAG,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;AACpC,CAAC;AAHD,kDAGC;AAED,SAAgB,mBAAmB,CAAC,CAAU,EAAE,CAAU;IACtD,OAAO,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3F,CAAC;AAFD,kDAEC;AAED,SAAgB,mBAAmB,CAAC,CAAU,EAAE,CAAU;IACtD,OAAO,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3F,CAAC;AAFD,kDAEC;AAED,SAAgB,mBAAmB,CAAC,CAAU,EAAE,CAAU;IACtD,OAAO,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3F,CAAC;AAFD,kDAEC;AAED;IACI,mBAAmB,EAAU,EAAS,EAAU;QAA7B,OAAE,GAAF,EAAE,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAQ;KAAK;IACzD,gBAAC;AAAD,CAAC,IAAA;AAFY,8BAAS;AAItB;IAAA;KAKC;IAAD,iBAAC;AAAD,CAAC,IAAA;AALY,gCAAU;AAOvB;IAA8B,4BAAK;IAAnC;;KAEC;IAAD,eAAC;AAAD,CAFA,CAA8B,KAAK,GAElC;AAFY,4BAAQ;AAIrB;IACI,0BACW,EAAU,EACV,MAAc,EACd,UAAkB,EAClB,CAAW;QAHX,OAAE,GAAF,EAAE,CAAQ;QACV,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAQ;QAClB,MAAC,GAAD,CAAC,CAAU;QAElB,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC;KACf;IACL,uBAAC;AAAD,CAAC,IAAA;AATY,4CAAgB;AAW7B;IACI,wBACW,MAAwB,EACxB,MAAwB;QADxB,WAAM,GAAN,MAAM,CAAkB;QACxB,WAAM,GAAN,MAAM,CAAkB;KAAK;IACxC,+BAAM,GAAN;QACI,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;KACvC;IACL,qBAAC;AAAD,CAAC,IAAA;AATY,wCAAc;AAW3B;IAGI,gCAAmB,CAAe,EAAE,EAAmD;QAApE,MAAC,GAAD,CAAC,CAAc;QAFlC,MAAC,GAAuB,EAAE,CAAC;QAC3B,MAAC,GAAqB,EAAE,CAAC;QAErB,IAAI,CAAC,EAAE,EAAE;YACL,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;oBAC/B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EACT,EAAE,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;oBACvD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAIhB,IAAI,CAAC,GAAG,CAAC;wBAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;iBAC/D;gBAED,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC;oBAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAClF;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACd,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EACT,CAAC,GAAG,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBACzB,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;wBACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACR,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;wBACzC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBAC/C;iBACJ;aACJ;SACJ;aAAM;YACH,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC1B;KACJ;IACD,iDAAgB,GAAhB,UAAiB,CAAW,EAAE,CAAW,EAAE,EAAU,EAAE,EAAU;QAC7D,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;YACpE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/C;KACJ;IACD,yCAAQ,GAAR,UAAS,CAAW,EAAE,EAAU;QAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;QACtB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxB,IAAI,CAAC,KAAK,EAAE;gBAAE,SAAS;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAChB,CAAC,GAAG,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SACjD;QACD,OAAO,CAAC,CAAC,EAAE,CAAC;KACf;IACO,gDAAe,GAAvB,UAAwB,CAAc,EAAE,EAAU,EAAE,EAAU;QAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YAC3C,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3D,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;IACL,6BAAC;AAAD,CAAC,IAAA;AAhEY,wDAAsB;AAkEnC,SAAS,UAAU,CAAC,CAAc,EAAE,CAAU;IAC1C,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QACtC,IAAI,GAAG,GAAGC,mBAAS,CAAC,gBAAgB,CAChC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EACV,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EACV,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACb,CAAC;QACN,IAAI,GAAG;YAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC3B;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAgB,QAAQ,CAAC,CAAU,EAAE,CAAU;IAE3C,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACvC,IAAI,EAAE,GAAG,IAAI,UAAU,EAAE,CAAC;IAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClB,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAChC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC;mBACrC,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;gBACzC,EAAE,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACnC;iBAAM,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC;mBAC5C,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;gBACzC,EAAE,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACnC;iBAAM,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,CAAC;mBAC5C,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE;gBACzC,EAAE,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACnC;iBAAM,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,CAAC;mBAC5C,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE;gBACzC,EAAE,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACnC;SACJ;KACJ;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAlCD,4BAkCC;AAED,SAAS,iBAAiB,CAAC,CAAQ,EAAE,IAAa;IAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;QACvC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;IACrD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,SAAS,CAAC,CAAU,EAAE,CAAU;IACrC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,GAAA,CAAC,CAAC;AACnD,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU,EAAE,CAAU;IAC/C,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAAE,OAAO,IAAI,CAAC;IACjC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAAE,OAAO,IAAI,CAAC;IACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;QACtC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3B,IAAI,UAAU,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO,IAAI,CAAC;KAClF;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AARD,oCAQC;;;;;;ACpdD,IAAI,cAAc,GAAG;IACjB,OAAO,EAAE,EAAE;IACX,cAAc,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IACtC,aAAa,EAAE,MAAM;IACrB,cAAc,EAAE,GAAG;CACtB,CAAC;AAGF,SAAgB,YAAY,CAAC,MAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,aAAiB,EAAE,WAAkB;IAArC,8BAAA,EAAA,iBAAiB;IAAE,4BAAA,EAAA,kBAAkB;IAElG,IAAI,MAAM,GAAG,CAAC,EACV,MAAM,GAAG,CAAC,EAEV,SAAS,GAAG,CAAC,EACb,UAAU,GAAG,CAAC,EAEd,aAAa,GAAG,OAAO,aAAa,KAAK,WAAW,GAAG,aAAa,GAAG,CAAC,EACxE,SAAS,GAAG,OAAO,SAAS,KAAK,WAAW,GAAG,SAAS,GAAG,CAAC,EAE5D,UAAU,GAAG,CAAC,EACd,WAAW,GAAG,CAAC,EACf,SAAS,GAAG,CAAC,EAEb,aAAa,GAAG,CAAC,EACjB,IAAI,GAAG,EAAE,CAAC;IAEd,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC;QAClB,OAAO;IAUX,YAAY,CAAC,MAAM,CAAC,CAAC;IACrB,KAAK,CAAC,MAAqB,CAAC,CAAC;IAC7B,IAAG,WAAW,EAAE;QACZ,4BAA4B,CAAC,MAAM,CAAC,CAAC;KACxC;IAGD,SAAS,YAAY,CAAC,MAAM;QAExB,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,mBAAmB,CAAC,CAAC,CAAC,CAAA;SACzB,CAAC,CAAC;QAEH,SAAS,mBAAmB,CAAC,KAAK;YAC9B,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,EAAE,KAAK,GAAG,MAAM,CAAC,SAAS,EAClD,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC;YAEzB,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;gBAC3B,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,KAAK,KAAK,WAAW,GAAG,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;gBAC7D,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,SAAS,CAAC;gBAC/D,CAAC,IAAI,CAAC,CAAC;gBACP,CAAC,IAAI,CAAC,CAAC;gBACP,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;gBACjC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;gBACjC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;gBACjC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;aACpC,CAAC,CAAC;YAEH,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;YAC5B,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC;SAChC;KACJ;IAuCD,SAAS,4BAA4B,CAAC,MAAM;QACxC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAEtB,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAE5B,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI;gBAC1B,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;aACtB,CAAC,CAAC;YAEH,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;YAC3B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;YAG3B,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACvE,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,EAAC,CAAC;YAGzH,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI;gBAC1B,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;aACtB,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IAID,SAAS,KAAK,CAAC,IAAI,EAAE,aAAa;QAC9B,IAAI,WAAW,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAC3C,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAE3D,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;YAClC,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;SAChD,CAAC,CAAC;QAEH,IAAI,IAAI,GAAG,EAAE,GAAG,SAAS,CAAC;QAC1B,IAAI,KAAK,GAAG,EAAE,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,gBAAgB,GAAG,CAAC,CAAC;QAEzB,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;QAGd,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;QAC1B,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;QAE1B,OAAO,CAAC,EAAE,GAAG,SAAS,KAAK,EAAE,GAAG,cAAc,CAAC,aAAa,EAAE;YAE1D,IAAI,IAAI,IAAI,CAAC,EAAE;gBACX,IAAI,EAAE,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,cAAc,CAAC,cAAc,CAAC;gBAChE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aAC7B;YACD,IAAI,IAAI,IAAI,CAAC,EAAE;gBACX,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,cAAc,CAAC,cAAc,CAAC;gBAC/D,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aAC7B;YAED,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;YAE3B,IAAI,IAAI,GAAG,WAAW,EAAE;gBACpB,WAAW,GAAG,IAAI,CAAC;gBACnB,SAAS,GAAG,EAAE,CAAC;aAClB;YAED,IAAI,IAAI,GAAG,WAAW,EAAE;gBACpB,WAAW,GAAG,IAAI,CAAC;gBACnB,SAAS,GAAG,EAAE,CAAC;aAClB;YAED,IAAI,IAAI,GAAG,IAAI,EAAE;gBACb,IAAI,GAAG,EAAE,CAAC;gBACV,EAAE,GAAG,EAAE,CAAC;gBACR,IAAI,GAAG,IAAI,CAAC;gBACZ,IAAI,GAAG,CAAC,CAAC;aACZ;iBAAM;gBACH,KAAK,GAAG,EAAE,CAAC;gBACX,EAAE,GAAG,EAAE,CAAC;gBACR,IAAI,GAAG,IAAI,CAAC;gBACZ,IAAI,GAAG,CAAC,CAAC;aACZ;YAED,IAAI,gBAAgB,EAAE,GAAG,GAAG,EAAE;gBAC1B,MAAM;aACT;SACJ;QAED,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KACzB;IAID,SAAS,IAAI,CAAC,IAAI,EAAE,SAAS;QACzB,IAAI,GAAG,EAAE,CAAC;QACV,UAAU,GAAG,CAAC,CAAC;QACf,WAAW,GAAG,CAAC,CAAC;QAChB,aAAa,GAAG,MAAM,CAAC;QAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;SAC1B;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,aAAa,CAAC,CAAC;KACrD;IAGD,SAAS,QAAQ,CAAC,IAAI,EAAE,SAAS;QAG7B,IAAI,MAAM,GAAG,SAAS,CAAC;QAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,OAAO,GAAG,SAAS,KAAK,cAAc,CAAC,aAAa,EAAE;gBACtJ,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjB,MAAM;aACT;SACJ;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEhB,IAAI,MAAM,KAAK,SAAS,EAAE;YACtB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC;YAC1D,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,OAAO,CAAC;YAC1D,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,OAAO,CAAC;SACzD;aAAM;YACH,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC;YACvB,aAAa,IAAI,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,OAAO,CAAC;YACtD,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,GAAG,CAAC,cAAc,CAAC,aAAa;YAAE,WAAW,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACpH,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,cAAc,CAAC,aAAa;YAAE,UAAU,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;KACnH;IAED,SAAS,gBAAgB,CAAC,IAAI;QAC1B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,OAAO,KAAK,IAAI,CAAC,CAAC,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACjF,OAAO,KAAK,CAAC;KAChB;IAED,SAAS,cAAc;QACnB,QAAQ,UAAU,GAAG,WAAW,EAAE;KACrC;AACL,CAAC;AA1PD,oCA0PC;AAMD,SAAgB,cAAc,CAAC,KAAK,EAAE,KAAK;IACvC,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,QAAQ,GAAG,CAAC,CAAC;IAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACrB,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACrB,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;YAExB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACd,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;YAExB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;KAC7B;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YAAE,SAAS;QAChC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC5B;IAED,SAAS,YAAY,CAAC,CAAC,EAAE,MAAM;QAC3B,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,SAAS;YAAE,OAAO;QACzC,IAAI,MAAM,EAAE;YACR,QAAQ,EAAE,CAAC;YACX,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;SAC9B;QACD,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;QAC1B,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SACpC;KACJ;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AA5CD,wCA4CC;;;;;;ACpTqC;AACqF;AAC9F;AAC6C;AACpC;AACa;AACU;AAO7D,IAAY,SAA8B;AAA1C,WAAY,SAAS;IAAG,2CAAK,CAAA;IAAE,yCAAI,CAAA;IAAE,uCAAG,CAAA;AAAC,CAAC,EAA9B,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAAqB;AA+C1C,SAAS,OAAO,CAAC,CAAM;IACnB,OAAO,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,CAAC;AAC9E,CAAC;AAwBD;IAAA;QAAA,iBAkyBC;QAjyBW,gBAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrB,kBAAa,GAAyC,EAAE,CAAC;QACzD,qBAAgB,GAAW,EAAE,CAAC;QAC9B,0BAAqB,GAAG,IAAI,CAAC;QAC7B,cAAS,GAAG,IAAI,CAAC;QACjB,mBAAc,GAAG,KAAK,CAAC;QACvB,wBAAmB,GAAG,IAAI,CAAC;QAG3B,aAAQ,GAAG,KAAK,CAAC;QACjB,WAAM,GAAG,EAAE,CAAC;QACZ,YAAO,GAAG,EAAE,CAAC;QACb,eAAU,GAAG,IAAI,CAAC;QAClB,WAAM,GAA0B,EAAE,CAAC;QACnC,iBAAY,GAAG,EAAE,CAAC;QAClB,oBAAe,GAAG,IAAI,CAAC;QACvB,aAAQ,GAAY,IAAI,CAAC;QACzB,6BAAwB,GAAG,IAAI,CAAC;QAChC,eAAU,GAAG,IAAI,CAAC;QAClB,qBAAgB,GAAG,IAAI,CAAC;QACxB,sBAAiB,GAAG,IAAI,CAAC;QAGvB,UAAK,GAAG,IAAI,CAAC;QAkVvB,iBAAY,GAA2B;YACnC,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,SAAS,EAAE,MAAM,CAAC,aAAa;YAC/B,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,OAAO,KAAI,CAAC,SAAS,KAAK,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAA;SAC7E,CAAC;KAmbL;IAtwBU,mBAAE,GAAT,UAAU,CAAqB,EAAE,QAAiC;QAE9D,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACjC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC;KACf;IAIS,wBAAO,GAAjB,UAAkB,CAAQ;QACtB,IAAI,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;YACzD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;KACJ;IAKS,qBAAI,GAAd;QACI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;YAAC,CAAC;KACxB;IAKS,qBAAI,GAAd;QACI,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YACxF,OAAO,IAAI,CAAC;SACf;QACD,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EACtB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,CAAC;QAET,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACpB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,CAAC,KAAK,EAAE;gBACT,IAAI,OAAO,CAAC,CAAC,EAAE,KAAK,WAAW,IAAI,OAAO,CAAC,CAAC,EAAE,KAAK,WAAW,EAAE;oBAC5D,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;iBACd;gBACD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;QAED,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAEpC,IAAI,EAAE,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACnB;aAAM,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;YAChD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QACrF,OAAO,KAAK,CAAC;KAChB;IAGO,oCAAmB,GAA3B;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC9B,OAAO,CAAC,EAAE,EAAE;YACR,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACd;KACJ;IAWD,sBAAK,GAAL,UAAM,CAAO;QACT,IAAI,CAAC,CAAC,EAAE;YACJ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAGpD,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;oBAC3B,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAU,CAAC,CAAC,MAAM,EAAU,CAAC,CAAC,MAAM,CAAC,CAAC;iBACvD,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBACxB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;iBACvB;aACJ;YACD,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,OAAO,IAAI,CAAC;KACf;IASD,uBAAM,GAAN,UAAO,CAAgB;QAAvB,iBAuBC;QAtBG,IAAI,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC;YAClB,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,WAAW;gBAChC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;YAClB,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;oBAClB,IAAI,OAAO,CAAC,KAAK,QAAQ;wBACrB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAA;iBAChD,CAAC,CAAC;aACN;YACD,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,CAAC;oBACnB,IAAI,OAAO,EAAE,KAAK,QAAQ;wBACtB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,CAAC,CAAA;iBAClD,CAAC,CAAC;aACN;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,GAAA,CAAC,CAAC;QAClF,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,GAAA,CAAC,CAAC;QACnF,OAAO,IAAI,CAAC;KACf;IAED,iCAAgB,GAAhB,UAAiB,CAAW;QACxB,IAAI,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3F,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,OAAO,IAAI,CAAC;KACf;IAUD,8BAAa,GAAb,UAAc,CAAW;QACrB,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;KACf;IAYD,mCAAkB,GAAlB,UAAmB,CAAW;QAC1B,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACvD,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACf;IAQD,2BAAU,GAAV,UAAW,IAAY,EAAE,aAAwC;QAC7D,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,IAAI,GAAG,GAAG,CAAC;QAClC,IAAI,CAAC,wBAAwB,GAAG;YAC5B,IAAI,EAAE,IAAI;YACV,gBAAgB,EAAE,OAAO,aAAa,KAAK,QAAQ,GAAG,cAAc,OAAO,aAAa,CAAA,EAAE,GAAG,aAAa;SAC7G,CAAC;QACF,OAAO,IAAI,CAAC;KACf;IASD,sBAAK,GAAL,UAAM,CAA4B;QAC9B,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,OAAO,IAAI,CAAC;KACf;IAUD,4BAAW,GAAX,UAAY,CAAc;QACtB,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,YAAY,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;KACf;IAWD,+BAAc,GAAd,UAAe,CAAO;QAClB,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC;KACf;IAUD,qBAAI,GAAJ,UAAK,CAAiB;QAClB,IAAI,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC,WAAW,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC;KACf;IASD,gCAAe,GAAf,UAAgB,CAAO;QACnB,IAAI,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;KACf;IASD,iCAAgB,GAAhB,UAAiB,CAAO;QACpB,IAAI,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC,iBAAiB,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;IASD,6BAAY,GAAZ,UAAa,CAAO;QAChB,IAAI,CAAC,CAAC,EAAE;YACJ,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;QACD,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC;KACf;IAED,yBAAQ,GAAR,UAAS,CAAoB;QACzB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC;KACf;IAID,qCAAoB,GAApB,UAAqB,CAAU;QAC3B,IAAI,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC,UAAU,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC;KACf;IAID,sBAAK,GAAL,UAAM,CAAU;QACZ,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,MAAM,CAAC;aACrC;YACD,CAAC,GAAG,CAAC,CAAC,CAAC;YACP,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,GAAG,CAAC;oBAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;oBACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;aACxB;iBAAM,IAAI,CAAC,GAAG,CAAC,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,CAAC;oBAC/D,IAAI,CAAC,IAAI,EAAE,CAAC;iBACf;aACJ;YACD,OAAO,IAAI,CAAC;SACf;KACJ;IAED,8BAAa,GAAb,UAAc,IAAyB;QACnC,OAAO,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,GAAG,EAAgC,IAAI,CAAC,aAAc,CAAC,IAAI,CAAC,CAAC,GAAW,IAAI,CAAC,aAAa,CAAC;KAC7I;IAEM,oBAAa,GAApB,UAAqB,IAAuB,EAAE,MAAc;QACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;IAED,4BAAW,GAAX,UAAY,IAAyB;QACjC,OAAO,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1E;IAmBD,yCAAwB,GAAxB,UAAyB,WAAmB,EAAE,CAAa;QAA3D,iBAIC;QAJ6C,kBAAA,EAAA,KAAa;QACvD,IAAI,CAAC,YAAY,CAAC,UAAA,CAAC,IAAI,OAAA,WAAW,GAAG,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC;QAC/C,IAAI,CAAC,qBAAqB,GAAG,cAAM,OAAAC,oCAAwB,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC,GAAA,CAAC;QAC/F,OAAO,IAAI,CAAC;KACf;IAYD,mCAAkB,GAAlB,UAAmB,WAAmB,EAAE,CAAa;QAArD,iBAIC;QAJuC,kBAAA,EAAA,KAAa;QACjD,IAAI,CAAC,YAAY,CAAC,UAAA,CAAC,IAAI,OAAA,WAAW,GAAG,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC;QAC/C,IAAI,CAAC,qBAAqB,GAAG,cAAM,OAAAA,8BAAkB,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC,GAAA,CAAC;QACzF,OAAO,IAAI,CAAC;KACf;IAYD,sBAAK,GAAL,UACI,8BAA0C,EAC1C,+BAA2C,EAC3C,+BAA2C,EAC3C,kBAA8B,EAC9B,WAAkB,EAClB,WAAkB;QANtB,iBAsJC;QArJG,+CAAA,EAAA,kCAA0C;QAC1C,gDAAA,EAAA,mCAA2C;QAC3C,gDAAA,EAAA,mCAA2C;QAC3C,mCAAA,EAAA,sBAA8B;QAC9B,4BAAA,EAAA,kBAAkB;QAClB,4BAAA,EAAA,kBAAkB;YAEd,CAAS,EAET,CAAC,GAAgB,IAAI,CAAC,KAAK,EAAG,CAAC,MAAM,EACrC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAC/B,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EACtB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EACvB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE;QAE5B,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,GAAG,IAAI,CAAC;QAEb,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAE7B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YACrB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;YACZ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;gBAC5B,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAC5B;YACD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC1B,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,qBAAqB;YAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAK7D,IAAI,SAAS,CAAC;QACd,IAAI,IAAI,CAAC,eAAe,EAAE;YAEtB,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;SACpC;aAAM;YAEH,SAAS,GAAG,CAAC,IAAIC,wBAAU,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,cAAc,EAAE,UAAA,CAAC,IAAG,OAAA,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAA,CAAC,EAAE,cAAc,EAAE,CAAC;YAIvI,CAAC,GAAGC,eAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,cAAM,OAAA,CAAC,GAAA,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACjB,IAAI,OAAO,CAAC,CAAC,MAAM,IAAI,QAAQ;oBAAE,CAAC,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAS,CAAC,CAAC,MAAM,CAAC,CAAC;gBAC1E,IAAI,OAAO,CAAC,CAAC,MAAM,IAAI,QAAQ;oBAAE,CAAC,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAS,CAAC,CAAC,MAAM,CAAC,CAAC;aAC7E,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACjB,IAAM,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;aACrC,CAAC,CAAC;SACN;QAED,IAAI,CAAC,GAAGA,eAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC;YAChD,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1B,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,WAAW,EAAE;YAClE,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,aAAa,GAAG,UAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,aAAa;gBAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;gBAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;aACrC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC;gBAClB,aAAa,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;gBAiBrD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACxB,CAAC,CAAC;SACN;;YAAM,IAAI,CAAC,UAAU,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;QAE7D,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QAC7C,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACzB,IAAI,CAAC,YAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC;YAC3F,cAAc,GAAG,cAAc,CAAC,MAAM,CAACF,2CAA+B,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,GAAQ,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;SAGzJ;QAED,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAIE,eAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxB,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC,KAAK,EAAE;gBACT,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;QACD,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAK1C,IAAI,CAAC,aAAa,CAAC,8BAA8B,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAGzD,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC;YAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAIH,oBAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,gBAAgB,EAAE,CAAC;QACrJ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QACnD,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;QAGtD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,EAAE,EAAE;YACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAIA,oBAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC5H,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACpE;QAGD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAEnD,IAAI,kBAAkB,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,EAAE,GAAGG,eAAO,CAAC,kBAAkB,CAAC,CAAC,EAAC,UAAC,CAAC,EAAE,CAAC;gBACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,OAAO,CAAC,CAAA;aACX,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;QACtD,OAAO,WAAW,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;KAC7C;IAEO,8BAAa,GAArB,UAAsB,UAAkB,EAAE,CAAW,EAAE,CAAW;QAC9D,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE;YAG3C,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,QAAK,EAAE,MAAM,EAAS,CAAC,CAAC,MAAO,CAAC,KAAK,EAAE,MAAM,EAAS,CAAC,CAAC,MAAO,CAAC,KAAK,EAAE,IAAA,CAAC,CAAC;YAC1G,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,QAAK,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,IAAA,CAAC,CAAC;YACvD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;gBACtB,EAAE,CAAC,IAAI,CAAM,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;aAC5C,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;gBACtB,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW;oBAC/B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,GAAA,CAAC,CAAC;gBAC5E,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW;oBAC/B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,GAAA,CAAC,CAAC;aACjF,CAAC,CAAC;YAGH,IAAI,MAAM,EAAE;iBACP,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBACjB,KAAK,CAAC,EAAE,CAAC;iBACT,KAAK,CAAC,KAAK,CAAC;iBACZ,aAAa,CAAC,KAAK,CAAC;iBACpB,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;iBACjC,wBAAwB,CAAC,CAAC,CAAC;iBAC3B,oBAAoB,CAAC,IAAI,CAAC;iBAC1B,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YAEvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACjB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC9B,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SACjC;KACJ;IAGO,8CAA6B,GAArC,UAAsC,KAAa,EAAE,MAAc,EAAE,WAA2B;QAAhG,iBAeC;QAfoE,4BAAA,EAAA,kBAA2B;QAE5F,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,mBAAmB,EAAE;YACnD,IAAI,GAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACjE,IAAI,MAAM,GAAGC,iCAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACtDA,+BAAY,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;gBACrB,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,CAAC,MAAM,EAAE;oBACV,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5B;aACJ,CAAC,CAAC;SACN;KACJ;IAED,uBAAM,GAAN;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAC1B;IAED,qBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxB;IAID,mCAAkB,GAAlB,UAAmB,UAAsB;QAAtB,2BAAA,EAAA,cAAsB;QACrC,IAAI,CAAC,gBAAgB,GAAG,IAAIC,2BAAsB,CAC9C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;SACnD,CAAC,CAAC,CAAC;KACX;IAWD,0BAAS,GAAT,UAAU,IAAI,EAAE,EAAc,EAAE,IAAI;QAApB,mBAAA,EAAA,MAAc;QAC1B,IAAI,QAAQ,GAAG,EAAE,CAAC;QAIlB,IAAI,GAAG,GAAG,IAAIA,2BAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EACrH,KAAK,GAAa,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EACxD,KAAK,GAAa,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EACxD,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAC9C,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjD,GAAG,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzE,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC,GAAG,CAAC,CAAC;SACb;QACD,IAAI,SAAS,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,CAAC,EAAE,GAAA,EAAE,SAAS,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,CAAC,EAAE,GAAA,EAAE,MAAM,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,EAAE,GAAA,EACpF,MAAM,GAAG,IAAIH,wBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,EAC1E,YAAY,GAAG,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/D,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;YACnE,IAAI,KAAK,GAAGF,yBAAe,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAClF,QAAQ,GAAG,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;SAC3D;aAAM;YACH,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,EAC3B,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5B,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5B,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;gBACvB,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,QAAQ,CAAC,IAAI,CAACA,oBAAU,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;SAC7D;QAaD,OAAO,QAAQ,CAAC;KACnB;IAGM,qBAAc,GAArB,UAAsB,CAAsB;QACxC,OAAO,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,GAAW,CAAC,CAAC,MAAM,GAAU,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC;KACnF;IAGM,qBAAc,GAArB,UAAsB,CAAsB;QACxC,OAAO,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,GAAW,CAAC,CAAC,MAAM,GAAU,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC;KACnF;IAGM,aAAM,GAAb,UAAc,CAAsB;QAChC,OAAO,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;KACpE;IAMM,gBAAS,GAAhB,UAAiB,CAAe;QAC5B,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C;aAAM;YACH,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;SAChB;KACJ;IAIc,eAAQ,GAAvB,UAAwB,CAAO;QACrB,CAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QACZ,CAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;KACrB;IAIc,kBAAW,GAA1B,UAA2B,CAAQ,EAAE,MAAgC;QACjE,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;YACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACd,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBACb,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACb,CAAE,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;gBACtC,CAAE,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;aAC/C,CAAC,CAAC;SACN;QACD,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;YACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,GAAA,CAAC,CAAC;SACxD;KACJ;IAGM,iBAAU,GAAjB,UAAkB,CAAe;QAC7B,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,OAAO;gBACH,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;gBAChB,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;aACnB,CAAC;SACL;aAAM;YACH,OAAO,CAAC,CAAC;SACZ;KACJ;IAIM,WAAI,GAAX,UAAY,CAAe,EAAE,QAAkC;QAC3D,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;oBACd,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAChC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAE,CAAC,EAAE,GAAS,CAAE,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC;oBAChD,CAAE,CAAC,EAAE,GAAS,CAAE,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC;iBACzD,CAAC,CAAC;aACN;YACD,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAA,CAAC,CAAC;aACnD;SACJ;aAAM;YACG,CAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;YACnB,CAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;SAC5B;KACJ;IAIM,cAAO,GAAd,UAAe,CAAC;QACZ,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;oBACd,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAClB,OAAa,CAAE,CAAC,iBAAiB,CAAC;oBAClC,OAAa,CAAE,CAAC,iBAAiB,CAAC;iBACrC,CAAC,CAAC;aACN;YACD,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ;aAAM;YACH,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;SAEjB;KACJ;IAGM,gBAAS,GAAhB,UAAiB,CAAC;QACd,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;KAC1B;IAGM,eAAQ,GAAf,UAAgB,CAAC;QACb,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;KACjB;IACL,aAAC;AAAD,CAAC,IAAA;AAlyBY,wBAAM;;;;;;;;;;;;;;;;;;;ACtF0B;AAE7C;IAAmC,iCAAM;IAarC,uBAAa,OAAO;QAApB,YACI,iBAAO,SAyBV;QApBG,IAAI,CAAC,GAAG,OAAO,CAAC;QAEhB,IAAK,CAAC,CAAC,OAAO,EAAG;YACb,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;SAC5B;QAED,IAAK,CAAC,CAAC,IAAI,EAAE;YACT,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;SACtB;QAED,IAAK,CAAC,CAAC,IAAI,EAAE;YACT,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;SACtB;QAED,IAAK,CAAC,CAAC,EAAE,EAAE;YACP,KAAI,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;SAClB;QAED,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAGM,aAAM,CAAC,SAAS,CAAC;QACnD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,GAAGA,aAAM,CAAC,OAAO,CAAC;;KAChD;IApCD,+BAAO,GAAP,UAAQ,CAAQ,KAAI;IACpB,4BAAI,GAAJ,eAAS;IACT,4BAAI,GAAJ,eAAS;IACT,0BAAE,GAAF,UAAG,SAA6B,EAAE,QAAoB,IAAW,OAAO,IAAI,CAAC,EAAE;IAkCnF,oBAAC;AAAD,CAxCA,CAAmCA,aAAM,GAwCxC;AAxCY,sCAAa;AA6C1B,SAAgB,OAAO,CAAE,OAAO;IAC5B,OAAO,IAAI,aAAa,CAAE,OAAO,CAAE,CAAC;AACxC,CAAC;AAFD,0BAEC;;;;;;;;;;;;;;;;;;;AC3C6C;AAG9C;IAA0C,wCAAM;IAgB5C;QAAA,YACI,iBAAO,SAuBV;QAvCD,WAAK,GAAG,EAAE,CAAC,QAAQ,CAACA,gBAAS,CAACA,gBAAS,CAAC,KAAK,CAAC,EAAEA,gBAAS,CAACA,gBAAS,CAAC,IAAI,CAAC,EAAEA,gBAAS,CAACA,gBAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAkBjG,IAAI,QAAQ,GAAG,KAAI,CAAC;QAEpB,KAAI,CAAC,IAAI,GAAG;YACR,IAAI,CAAC,IAAI,EAAE;gBACP,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE;qBACxB,MAAM,CAACA,aAAM,CAAC,UAAU,CAAC;qBACzB,EAAE,CAAC,qBAAqB,EAAEA,aAAM,CAAC,SAAS,CAAC;qBAC3C,EAAE,CAAC,gBAAgB,EAAE,UAAA,CAAC;oBACnBA,aAAM,CAAC,IAAI,CAAC,CAAC,EAAO,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC;iBACrB,CAAC;qBACD,EAAE,CAAC,mBAAmB,EAAEA,aAAM,CAAC,OAAO,CAAC,CAAC;aAChD;YAED,IAAI,CAAC,SAAS,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAC;YAGnC,IAAI;iBAEC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB,CAAA;;KACJ;IArCD,sCAAO,GAAP,UAAQ,CAAQ;QACZ,IAAI,OAAO,GAAG,EAAE,IAAI,EAAEA,gBAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;KACrC;IAGD,mCAAI,GAAJ;QAAA,iBAEC;QADG,EAAE,CAAC,KAAK,CAAC,cAAM,OAAA,iBAAM,IAAI,YAAE,GAAA,CAAC,CAAC;KAChC;IAgCD,iCAAE,GAAF,UAAG,SAA6B,EAAE,QAAoB;QAClD,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACtC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,EAAE,CAACA,gBAAS,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;SACjD;QACD,OAAO,IAAI,CAAC;KACf;IACL,2BAAC;AAAD,CAnDA,CAA0CA,aAAM,GAmD/C;AAnDY,oDAAoB;AAiEjC,SAAgB,SAAS;IACrB,OAAO,IAAI,oBAAoB,EAAE,CAAC;AACtC,CAAC;AAFD,8BAEC;;;;;;;;;;;;;;;;;;;ACzE4C;AAUjD;IAA0C,wCAAM;IAiB5C,8BAAoB,SAAoB;QAAxC,YACI,iBAAO,SAyBV;QA1BmB,eAAS,GAAT,SAAS,CAAW;QAEpC,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC,QAAQ,CAACA,gBAAS,CAACA,gBAAS,CAAC,KAAK,CAAC,EAAEA,gBAAS,CAACA,gBAAS,CAAC,IAAI,CAAC,EAAEA,gBAAS,CAACA,gBAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAGjH,IAAI,QAAQ,GAAG,KAAI,CAAC;QAEpB,KAAI,CAAC,IAAI,GAAG;YACR,IAAI,CAAC,IAAI,EAAE;gBACP,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE;qBACtB,OAAO,CAACA,aAAM,CAAC,UAAU,CAAC;qBAC1B,EAAE,CAAC,iBAAiB,EAAEA,aAAM,CAAC,SAAS,CAAC;qBACvC,EAAE,CAAC,gBAAgB,EAAE,UAAA,CAAC;oBACnBA,aAAM,CAAC,IAAI,CAAM,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;oBACrC,QAAQ,CAAC,MAAM,EAAE,CAAC;iBACrB,CAAC;qBACD,EAAE,CAAC,eAAe,EAAEA,aAAM,CAAC,OAAO,CAAC,CAAC;aAC5C;YAED,IAAI,CAAC,SAAS,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAC;YAKnC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B,CAAA;;KACJ;IAzCD,sCAAO,GAAP,UAAQ,CAAQ;QACZ,IAAI,OAAO,GAAG,EAAE,IAAI,EAAEA,gBAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;QAG5E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAO,OAAO,CAAC,CAAC;KAC/C;IAGD,mCAAI,GAAJ;QAAA,iBAEC;QADG,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAM,OAAA,iBAAM,IAAI,YAAE,IAAI,CAAC,CAAC,IAAI,EAAE,GAAA,CAAC,CAAC;KAChE;IAkCD,iCAAE,GAAF,UAAG,SAA6B,EAAE,QAAoB;QAClD,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACtC;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,EAAE,CAACA,gBAAS,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;SACjD;QACD,OAAO,IAAI,CAAC;KACf;IACL,2BAAC;AAAD,CAtDA,CAA0CA,aAAM,GAsD/C;AAtDY,oDAAoB;;;;;;ACmBjC,SAAgB,SAAS,CAAC,SAAwC;IAC9D,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;QACjC,OAAO,IAAIC,WAAI,CAAC,oBAAoB,EAAE,CAAC;KAC1C;IACD,OAAO,IAAIC,WAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;AACpD,CAAC;AALD,8BAKC;AAED,SAAS,MAAM,CAAC,SAAuC;IACnD,IAAM,KAAK,GAAG,MAAM,CAAC;IACrB,OAAa,SAAU,CAAC,OAAO,IAAU,SAAU,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC;AACtF,CAAC;;;;;;ACzCoC;AACc;AACT;AAKtC;IAII,qBAAmB,EAAU,EAAS,IAAe,EAAS,QAAkB;QAA7D,OAAE,GAAF,EAAE,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAC5E,IAAI,CAAC,IAAI,GAAG,OAAO,QAAQ,KAAK,WAAW,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;KACxE;IACL,kBAAC;AAAD,CAAC,IAAA;AAPY,kCAAW;AAQxB;IACI,cAAmB,EAAU,EAAS,CAAQ,EAAS,CAAS,EAAS,IAAwB,EAAS,IAAW;QAA5C,qBAAA,EAAA,WAAwB;QAAS,qBAAA,EAAA,WAAW;QAAlG,OAAE,GAAF,EAAE,CAAQ;QAAS,MAAC,GAAD,CAAC,CAAO;QAAS,MAAC,GAAD,CAAC,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAoB;QAAS,SAAI,GAAJ,IAAI,CAAO;KAAI;IAC7H,WAAC;AAAD,CAAC,IAAA;AAFY,oBAAI;AAIjB;IAKI,kCAAmB,CAAM,EAAS,CAAM;QAArB,MAAC,GAAD,CAAC,CAAK;QAAS,MAAC,GAAD,CAAC,CAAK;QACpC,IAAI,EAAE,GAAG,wBAAwB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAI,EAAE,GAAG,wBAAwB,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACnD,IAAI,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YAChB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YAChB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;KACJ;IACc,kCAAS,GAAxB,UAA4B,CAAM,EAAE,CAAM;QACtC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACjB,IAAI,KAAK,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBACtB,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBACf,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjE,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;wBAClB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;wBACjB,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrB,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACxB;iBACJ;;oBAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B;QACD,OAAO,KAAK,CAAC;KAChB;IACD,8CAAW,GAAX;QACI,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;KAC/E;IACL,+BAAC;AAAD,CAAC,IAAA;AA3CY,4DAAwB;AAiDrC;IAsDI,oBAAmB,aAAqB,EAAE,QAA4B,EAAS,YAAyB;QAAxG,iBAkHC;QAlH8E,6BAAA,EAAA,iBAAyB;QAArF,kBAAa,GAAb,aAAa,CAAQ;QAAuC,iBAAY,GAAZ,YAAY,CAAa;QArDxG,WAAM,GAAkB,IAAI,CAAC;QAsDzB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,IAAI,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QAC7G,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,IAAI,GAAA,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,CAAC,IAAI,GAAA,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAGnC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;YACjB,OAAA,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,KAAI,CAAC,KAAK,CAAS,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAA,CAAC;SAAA,CAAC,CAAC;QAG9D,IAAI,CAAC,IAAI,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;YAChB,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC;gBACrB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACjC;YAOD,CAAC,CAAC,KAAK,GAAG,EAAE,CAAA;SACf,CAAC,CAAC;QAGH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QAKrE,IAAI,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,CAAC,IAAI,GAAA,CAAC,CAAC;QAChF,iBAAiB,CAAC,OAAO,CAAC,UAAA,CAAC;YACvB,IAAI,CAAC,GAAGR,mBAAS,CAAC,KAAK,EAAE,CAAC;YAC1B,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;YACxD,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;SACzC,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,GAAG,GAAA,CAAC,CAAC,CAAC;QACvD,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,GAAG,GAAA,CAAC,CAAC,CAAC;QAGvD,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAG1D,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,QAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAA,CAAC;aAC5E,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,QAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAA,CAAC,CAAC,CAAC;QAGxE,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,QAAK,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAA,CAAC;aAC5E,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,QAAK,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAA,CAAC,CAAC,CAAC;QAGxE,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAGlC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,KAAK,GAAG,EAAE,GAAA,CAAC,CAAC;QAGhC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAGhB,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;YACZ,OAAA,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACZ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBAChD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAGnB,IAAI,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBAChC,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE;oBACZ,IAAI,IAAI,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAC1B,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;oBAClB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAC3B,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBAChC,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;wBACrC,CAAE,CAAC,IAAI,GAAG,IAAI,CAAC;wBACrB,MAAM;qBACT;iBACJ;aACJ,CAAC;SAAA,CACD,CAAC;QAEN,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,EAAE;YAEhB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;gBACpB,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAC,SAAS,EAAE,CAAC;oBAElE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpE,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACnB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnB,CAAC,CAAC;aACN,CAAC,CAAC;YAGH,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAC1C,IAAI,KAAK,GAAG,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAA,CAAC;YACtD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI;oBAAE,SAAS;gBACzD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAClF;SACJ,CAAC,CAAC;KAIN;IA5JO,wBAAG,GAAX,UAAY,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,GAAA,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA,EAAE;IAItD,iCAAY,GAApB,UAAqB,IAAI;QACrB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAClD,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YAElB,IAAI,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;YACpF,IAAI,GAAG,GAAG;gBACN,KAAK,EAAE,WAAW;gBAClB,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,GAAA,CAAC,CAAC;aAC3D,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAA,CAAC,CAAC;SACtD;QACD,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAA,CAAC,CAAA;QACrC,OAAO,OAAO,CAAC;KAClB;IAGO,6BAAQ,GAAhB,UAAiB,CAAC;QACd,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,OAAO,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,EAAE;YAC3B,KAAK,EAAE,CAAC;YACR,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;SAChB;QACD,OAAO,KAAK,CAAC;KAChB;IAGO,8BAAS,GAAjB,UAAkB,CAAC;QACf,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;KACf;IAuHO,gCAAW,GAAnB,UAAoB,CAAC;QACjB,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,GAAG;YACC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB,QAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE;QAC1B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC5B;IAGO,4CAAuB,GAA/B,UAAgC,CAAC,EAAE,CAAC;QAChC,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9D,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAAE,CAAC,EAAE,CAAC;QAE5B,OAAO,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;KACnF;IAID,qCAAgB,GAAhB,UAAiB,CAAC,EAAE,CAAC;QAArB,iBAWC;QAVG,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAA,CAAC,CAAC;QACpD,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAG,OAAA,EAAE,CAAC,IAAI,aAAa,CAAC,GAAA,CAAC,CAAC;QAE/E,IAAI,CAAC,QAAQ;aACR,MAAM,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,GAAA,CAAC;aAC5C,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,KAAK,CAAC,CAAC,EAAE,GAAA,CAAC,CAAC,GAAA,CAAC,CAAC;QAEzF,OAAO,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KAC3C;IAIM,yBAAc,GAArB,UAAsB,MAAM,EAAE,CAAC,EAAE,CAAC;QAE9B,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;YACvC,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YACvB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;gBACtC,IAAI,CAAC,GAAQ,KAAK,CAAC,EAAE,CAAC,CAAC;gBACvB,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACT,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;oBACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACrB;aACJ;SACJ;QACD,SAAS,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QAG5C,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;gBACzD,UAAU,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;gBAC5C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACjC;YACD,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,YAAY,CAAC;KACvB;IASM,oBAAS,GAAhB,UAAiB,CAAS,EAAE,CAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAW;QACxE,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC;YAAE,OAAO;QACnB,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,IAAIF,aAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxB,IAAI,CAAC,KAAK,CAAC;oBAAE,SAAS;gBACtB,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,EAChB,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,EAChB,EAAE,GAAG,EAAE,CAAC,MAAM,EACd,EAAE,GAAG,EAAE,CAAC,MAAM,EACd,IAAI,GAAG,CAAC,CAAC,EACT,IAAI,GAAG,CAAC,CAAC,CAAC;gBAMd,IAAI,CAAC,IAAI,GAAG,EAAE;oBACV,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;wBAEhB,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACrB,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;yBACtB;6BAAM;4BACH,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;yBACtB;qBACJ;iBACJ;qBAAM;oBACH,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;wBAChB,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACrB,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;yBACtB;6BAAM;4BACH,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;yBACtB;qBACJ;iBACJ;gBACD,IAAI,IAAI,IAAI,CAAC,EAAE;oBAEX,EAAE,CAAC,IAAI,CAAC,IAAIA,eAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;iBACpD;aACJ;SACJ;QACD,IAAI,MAAM,GAAG,IAAIA,WAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACxB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACxC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;gBAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SAC1D,CAAC,CAAC;KACN;IAEM,wBAAa,GAApB,UAAqB,MAAM,EAAE,CAAS,EAAE,CAAS,EAAE,MAA2C,EAAE,GAAW;QACvG,IAAI,YAAY,GAAG,UAAU,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAChE,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACnE;YACD,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAA,CAAC,CAAC;YACvD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;gBACZ,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACf,SAAS,EAAE,CAAC;iBACf;qBAAM;oBACH,SAAS,EAAE,CAAC;iBACf;gBACD,IAAI,SAAS,IAAI,CAAC,EAAE;oBAChB,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;oBACtD,IAAI,GAAG,EAAE,CAAC;iBACb;aACJ,CAAC,CAAC;SACN;KACJ;IASD,+BAAU,GAAV,UAAiB,KAAa,EAAE,QAAgB,EAAE,MAA2B,EAAE,MAA2B;QAA1G,iBAQC;QAPG,IAAI,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QACjE,IAAI,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACjF,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC5D,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC5D,UAAU,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAC9C,OAAO,MAAM,CAAC;KACjB;IAIM,yBAAc,GAArB,UAAsB,MAAM,EAAE,UAAU;QACpC,MAAM,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YACzB,IAAU,IAAK,CAAC,QAAQ,EAAE;gBACtB,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACnB,QAAQ,CAAC,OAAO,CAAC,UAAU,OAAO;oBAC9B,OAAO,CAAC,OAAO,EAAE,CAAC;iBACrB,CAAC,CAAC;aACN;SACJ,CAAC,CAAC;KACN;IAEM,6BAAkB,GAAzB,UAA0B,KAAc,EAAE,KAAc;QACpD,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE;YACnC,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;KACf;IAGc,iBAAM,GAArB,UAAsB,CAAC,EAAE,CAAC,EAAE,CAAC;QACzB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;KACvE;IAIc,mBAAQ,GAAvB,UAAwB,KAAiC;QACrD,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,WAAW;gBAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAC7D,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAC7B;QACD,OAAO,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,OAAO,QAAQ,CAAC,CAAC,CAAC,KAAK,WAAW,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC;KACzE;IAIM,qBAAU,GAAjB,UAAkB,KAAK;QACnB,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EACZ,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,IAAI,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;gBACd,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;oBAChB,SAAS;gBACb,IAAI,GAAG,CAAC,QAAQ,EAAE;oBAGd,CAAC,CAAC,OAAO,EAAE,CAAC;oBACZ,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAClB,GAAG,GAAG,IAAI,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5C;gBACD,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC;qBAC1B,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;oBAEtE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC/B,SAAS;iBACZ;gBACD,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE;oBAMpE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBAClB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBACnB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;iBACtB;qBAAM;oBACH,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC/B,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBAC5B,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;iBAC/B;gBACD,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC9B,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClC;qBAAM;oBACH,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;iBAClC;aACJ;SACJ;QAED,OAAO,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KACzC;IAKM,uBAAY,GAAnB,UAAoB,IAAa;QAC7B,SAAS,SAAS,CAAC,CAAQ;YACvB,OAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SACpC;QACD,IAAI,UAAU,GAAG,UAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAK,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAA,CAAC;QACtG,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YACzE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC5B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtB,CAAC,GAAG,CAAC,CAAC;aACT;SACJ;QACD,OAAO,QAAQ,CAAC;KACnB;IAID,0BAAK,GAAL,UAAM,CAAS,EAAE,CAAS;QAA1B,iBA4DC;QA3DG,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAS,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAS,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAEvD,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC;YACpC,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,EACxB,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC7B,OAAO,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,cAAc;mBACvC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,cAAc,CAAC,CAAC;SACjD,CAAC,CAAC;QAGH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;aACZ,CAAC,CAAC;SACN;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;aACZ,CAAC,CAAC;SACN;QAED,IAAI,SAAS,GAAG,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,GAAA,EACxB,SAAS,GAAG,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,GAAA,EACxB,SAAS,GAAG,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC;QAE7B,IAAI,sBAAsB,GAAG,IAAII,wBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QACpH,IAAI,WAAW,GAAG,UAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YACtB,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvD,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;gBAChF,OAAO,CAAC,CAAC;YACb,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;SACtC,CAAC;QAGF,IAAI,YAAY,GAAG,sBAAsB,CAAC,8BAA8B,CACpE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EACtC,WAAW,CAAC,CAAC;QAGjB,IAAI,UAAU,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,UAAA,EAAE,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAA,CAAC,CAAC;QAClE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAGhD,OAAO,UAAU,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC;YAC1B,OAAA,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM;mBAC9E,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC;SAAA,CAAC,CAAC;KAChF;IAEM,uBAAY,GAAnB,UAAoB,KAAgB,EAAE,YAAoB,EAAE,UAAkB,EAAE,WAAmB;QAC/F,IAAI,MAAM,GAAG;YACT,SAAS,EAAE,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;YAC3D,SAAS,EAAE,EAAE;SAChB,CAAC;QACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACtB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;wBAClB,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;qBACzC;yBAAM;wBACH,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;qBACzC;oBACD,MAAM,CAAC,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;oBAC7C,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACrB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;oBACb,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;oBACb,IAAI,KAAK,GAAG,UAAU,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAE7D,IAAI,EAAE,EAAE,EAAE,CAAC;oBACX,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;wBAClB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;wBAC3C,EAAE,GAAG,EAAE,CAAC;qBACX;yBAAM;wBACH,EAAE,GAAG,EAAE,CAAC;wBACR,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;qBAC9C;oBACD,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBAC1B,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBAC1B,MAAM,CAAC,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,KAAK,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;iBAC1F;qBAAM;oBACH,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtB,IAAI,YAAY,EAAE,YAAY,CAAC;oBAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;wBAClB,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;wBACrC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC;wBACnC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC;qBACtC;yBAAM;wBACH,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;wBACrC,YAAY,GAAG,CAAC,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC,CAAC;wBACnC,YAAY,GAAG,CAAC,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC,CAAC;qBACtC;oBACD,MAAM,CAAC,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;oBAC7C,IAAI,WAAW,GAAG,CAAC,EAAE;wBACjB,MAAM,CAAC,SAAS,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC;8BACzG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;qBACrD;iBACJ;aACJ;SACJ;aAAM;YACH,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,YAAY,EAAE,YAAY,CAAC;YAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;gBAClB,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;gBACrC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC;gBACnC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC;aACtC;iBAAM;gBACH,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;gBACrC,YAAY,GAAG,CAAC,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC,CAAC;gBACnC,YAAY,GAAG,CAAC,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC,CAAC;aACtC;YACD,MAAM,CAAC,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YAC7C,IAAI,WAAW,GAAG,CAAC,EAAE;gBACjB,MAAM,CAAC,SAAS,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC;sBACzG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;aACrD;SACJ;QACD,OAAO,MAAM,CAAC;KACjB;IACL,iBAAC;AAAD,CAAC,IAAA;AAzlBY,gCAAU;;;;;;ACrEe;AACT;AAC2B;AAEQ;AAEpE;IAEQ,gBAAmB,MAAc,EAAS,MAAc;QAArC,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;KAAK;IAC7D,6BAAY,GAAZ,UAAa,CAAa;QAA1B,iBAMC;QALG,OAAO,IAAI,CAAC,IAAI,CACZ,CAAC,CAAC,MAAM,CAAC,UAAC,CAAS,EAAE,CAAW;YAC5B,IAAM,EAAE,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;SACtB,EAAE,CAAC,CAAC,CAAC,CAAC;KACd;IACL,aAAC;AAAD,CAAC,IAAA;AAVQ,wBAAM;AAWf;IASI,gBACW,CAAa,EACb,CAAa,EACb,CAAa;QAFb,kBAAA,EAAA,KAAa;QACb,kBAAA,EAAA,KAAa;QACb,kBAAA,EAAA,KAAa;QAFb,MAAC,GAAD,CAAC,CAAY;QACb,MAAC,GAAD,CAAC,CAAY;QACb,MAAC,GAAD,CAAC,CAAY;KAAK;IACjC,aAAC;AAAD,CAAC,IAAA;AAbY,wBAAM;AAcnB;IAMI,kBAAmB,KAAe,EAAS,KAAe,EAAS,eAA2B;QAA9F,iBAaC;QAbkE,gCAAA,EAAA,mBAA2B;QAA3E,UAAK,GAAL,KAAK,CAAU;QAAS,UAAK,GAAL,KAAK,CAAU;QAAS,oBAAe,GAAf,eAAe,CAAY;QAF9F,gBAAW,GAAU,IAAI,CAAC;QAqB1B,0BAAqB,GAAY,IAAI,CAAC;QAlBlC,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YACjC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC5C;QACD,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YACf,KAAgB,UAAa,EAAb,KAAA,QAAQ,CAAC,IAAI,EAAb,cAAa,EAAb,IAAa,EAAE;gBAA1B,IAAI,GAAG,SAAA;gBACR,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,WAAW;oBAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;aAC5D;YACD,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC3B,CAAC,CAAC;KACN;IAED,6BAAU,GAAV,UAAW,CAAS;QAChB,OAAO,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACtC;IAKD,wBAAK,GAAL,UAAM,UAAwB;QAA9B,iBAuCC;QAvCK,2BAAA,EAAA,gBAAwB;QAC1B,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAE5B,IAAI,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAEtC,IAAI,IAAI,CAAC,qBAAqB;YAC1BD,8BAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;QAEtD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,eAAe,GAAA,CAAC,CAAC;QAG1D,IAAM,cAAc,GAAG,CAAC,IAAIC,wBAAU,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAChD,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,GAAA,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,GAAA,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,EAAE,cAAc,EAAE,CAAC;QAEjE,IAAM,CAAC,GAAGC,eAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QAIxE,IAAI,CAAC,GAAGA,eAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,cAAc,OAAO,CAAC,CAAA,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,EAAkB;gBAAhB,kBAAM,EAAE,kBAAM;YAAO,OAAA,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;SAAA,CAAC,CAAC;QAEtF,IAAI,CAAC,OAAO,GAAG,IAAIA,eAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;QAInB,IAAI,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAIH,oBAAU,CAAc,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAEpH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,KAAK,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C;SACJ;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACf;IAED,uBAAI,GAAJ;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,KAAK,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9C;SACJ;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;KACpC;IA7EM,aAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACvB,UAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;IA6EpC,eAAC;CA/ED,IA+EC;AA/EY,4BAAQ;AAiFrB;IAAA;KAKC;IAJG,qCAAc,GAAd,UAAe,CAAM,IAAY,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE;IACnD,qCAAc,GAAd,UAAe,CAAM,IAAY,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE;IACnD,gCAAS,GAAT,UAAU,CAAM,IAAY,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE;IAC9C,gCAAS,GAAT,UAAU,CAAM,EAAE,CAAS,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;IAClD,mBAAC;AAAD,CAAC,IAAA;;;;;;ACrHsC;AACJ;AAQvC,SAAgB,OAAO,CAAC,QAAQ,EAAE,QAAgB,EAAE,MAAc,EAAE,WAAmB;IACnF,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IACxC,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IAC3F,OAAO,UAAU,CAAC,UAAU,CAAM,QAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,GAAA,EAAE,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,GAAA,CAAC,CAAC;AACxI,CAAC;AAJD,0BAIC;AAED,SAAS,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,MAAc,EAAE,WAAmB;IAC7D,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;QACX,CAAC,CAAC,UAAU,GAAQ;YAChB,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;SACpC,CAAC;KACL,CAAC,CAAC;IACH,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;QACZ,CAAC,CAAC,UAAU,GAAQ;YAChB,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC;YACtC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,GAAA,CAAC,GAAG,EAAE;iBAClF,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,KAAK,GAAA,CAAC,GAAG,EAAE,CAAC;SAChF,CAAC;KACL,CAAC,CAAC;IACH,IAAI,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC;QAChD,CAAC,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC;QACpB,OAAO,CAAC,CAAC,UAAU,CAAC;KACvB,CAAC,CAAC;IACH,OAAO,IAAIS,qBAAU,CAAC,eAAe,EAAE;QACnC,WAAW,EAAE,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,QAAQ,GAAA;QACnC,SAAS,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,GAAA;KAC3B,EAAE,MAAM,GAAG,WAAW,CAAC,CAAC;AAC7B,CAAC;AAED,SAAgB,oBAAoB,CAChC,KAA6C,EAC7C,IAAc,EACd,YAAoB;IAGpB,IAAI,UAAU,CAAC;IACf,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAC,CAAC,IAAK,OAAM,CAAE,CAAC,KAAK,GAAG,CAAC,GAAA,CAAC,CAAC;IACjD,IAAIH,aAAM,EAAE;SACP,aAAa,CAAC,KAAK,CAAC;SACpB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;SAClB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;SAClB,gBAAgB,CAAC,UAAU,CAAC;QACzB,UAAU,GAAG,CAAC,CAAC;QACf,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,CAAC,CAAC,OAAO,GAAG,YAAY,GAAA,CAAC,CAAC;KAC3D,CAAC,CAAC;IAIP,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAM,CAAE,CAAC,KAAK,GAAG,CAAC,GAAA,CAAC,CAAC;IACzC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC;QACvB,IAAI,SAAS,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACnC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACX,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW;YAC/B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,GAAA,CAAC,CAAC;QAC9E,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW;YAC/B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,EAAE,IAAI,OAAA,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAA,CAAC,CAAC;KACpF,CAAC,CAAC;IACH,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC;QAC3B,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;KAClE,CAAC,CAAC;IAGH,IAAIA,aAAM,EAAE;SACP,IAAI,CAAC,IAAI,CAAC;SACV,KAAK,CAAC,EAAE,CAAC;SACT,KAAK,CAAC,KAAK,CAAC;SACZ,aAAa,CAAC,KAAK,CAAC;SACpB,YAAY,CAAC,EAAE,CAAC;SAChB,wBAAwB,CAAC,CAAC,CAAC;SAC3B,oBAAoB,CAAC,IAAI,CAAC;SAC1B,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAKhC,OAAO;QACH,IAAI,EACA,IAAIA,aAAM,EAAE;aACX,oBAAoB,CAAC,IAAI,CAAC;aAC1B,IAAI,CAAC,IAAI,CAAC;aACV,aAAa,CAAC,IAAI,CAAC;aACnB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;aAClB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;aAElB,gBAAgB,CAAC,IAAI,CAAC;aACtB,YAAY,CAAC,EAAE,CAAC;aAChB,wBAAwB,CAAC,CAAC,CAAC;aAC3B,gBAAgB,CAAC,UAAU,CAAC;YACzB,UAAU,GAAG,CAAC,CAAC;YACf,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;gBACjC,CAAC,CAAC,OAAO,GAAG,YAAY,CAAA;aAC3B,CAAC,CAAC;SACN,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC;QAClC,UAAU,EAAE,UAAU;KACzB,CAAC;AACN,CAAC;AArED,oDAqEC;;;;;;;;;AC5GD,oBAA6B;AAC7B,sBAA+B;AAC/B,kBAA6B;AAC7B,eAA0B;AAC1B,qBAAgC;AAChC,6BAAwC;AACxC,iBAA4B;AAC5B,mBAA8B;AAC9B,sBAAiC;AACjC,qBAAgC;AAChC,iBAA4B;AAC5B,iBAA4B;AAC5B,oBAA+B;AAC/B,wBAAmC;AACnC,eAA0B;AAC1B,gBAA2B;;;;;ACf3B,CAAC,SAAS,gCAAgC,CAAC,IAAI,EAAE,OAAO,EAAE;AAC1D,CACE,cAAc,GAAG,OAAO,CAACI,IAAkB,CAAC,CAMK;AACnD,CAAC,EAAEC,cAAI,EAAE,SAAS,6BAA6B,EAAE;AACjD,gBAAgB,CAAC,SAAS,OAAO,EAAE;AACnC;AACA,UAAU,IAAI,gBAAgB,GAAG,EAAE,CAAC;AACpC;AACA;AACA,UAAU,SAAS,mBAAmB,CAAC,QAAQ,EAAE;AACjD;AACA;AACA,WAAW,GAAG,gBAAgB,CAAC,QAAQ,CAAC,EAAE;AAC1C,YAAY,OAAO,gBAAgB,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;AACtD,YAAY;AACZ;AACA,WAAW,IAAI,MAAM,GAAG,gBAAgB,CAAC,QAAQ,CAAC,GAAG;AACrD,YAAY,CAAC,EAAE,QAAQ;AACvB,YAAY,CAAC,EAAE,KAAK;AACpB,YAAY,OAAO,EAAE,EAAE;AACvB,YAAY,CAAC;AACb;AACA;AACA,WAAW,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;AAC/F;AACA;AACA,WAAW,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3B;AACA;AACA,WAAW,OAAO,MAAM,CAAC,OAAO,CAAC;AACjC,WAAW;AACX;AACA;AACA;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,OAAO,CAAC;AAC1C;AACA;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,gBAAgB,CAAC;AACnD;AACA;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,SAAS,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE,CAAC;AACpE;AACA;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,SAAS,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE;AAClE,WAAW,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;AACrD,YAAY,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE;AACjD,aAAa,YAAY,EAAE,KAAK;AAChC,aAAa,UAAU,EAAE,IAAI;AAC7B,aAAa,GAAG,EAAE,MAAM;AACxB,aAAa,CAAC,CAAC;AACf,YAAY;AACZ,WAAW,CAAC;AACZ;AACA;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,SAAS,MAAM,EAAE;AACnD,WAAW,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC,UAAU;AACnD,YAAY,SAAS,UAAU,GAAG,EAAE,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE;AAC/D,YAAY,SAAS,gBAAgB,GAAG,EAAE,OAAO,MAAM,CAAC,EAAE,CAAC;AAC3D,WAAW,mBAAmB,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AACtD,WAAW,OAAO,MAAM,CAAC;AACzB,WAAW,CAAC;AACZ;AACA;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,SAAS,MAAM,EAAE,QAAQ,EAAE,EAAE,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC;AAChI;AACA;AACA,UAAU,mBAAmB,CAAC,CAAC,GAAG,EAAE,CAAC;AACrC;AACA;AACA,UAAU,OAAO,mBAAmB,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChE,UAAU;AACV;AACA,UAAU;AACV;AACA,OAAO,SAAS,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE;AAGtD;AACA;AACA,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,OAAO,OAAO,GAAG,CAAC,EAAE,GAAG,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG,KAAK,MAAM,CAAC,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC;AAC7Q;AACA,IAAI,MAAM,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACpC,IAAI,QAAQ,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACtC,IAAI,IAAI,GAAG,mBAAmB,CAAC,CAAC,CAAC,KAAK,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AAC1F,IAAI,GAAG,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACjC,IAAI,QAAQ,GAAG,SAAS,QAAQ,CAAC,CAAC,EAAE;AACpC,EAAE,OAAO,CAAC,OAAO,CAAC,KAAK,WAAW,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAC/E,CAAC,CAAC;AACF,IAAI,QAAQ,GAAG,SAAS,QAAQ,CAAC,CAAC,EAAE;AACpC,EAAE,OAAO,CAAC,OAAO,CAAC,KAAK,WAAW,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9E,CAAC,CAAC;AACF,IAAI,QAAQ,GAAG,SAAS,QAAQ,CAAC,CAAC,EAAE;AACpC,EAAE,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,WAAW,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAC5F,CAAC,CAAC;AACF,IAAI,UAAU,GAAG,SAAS,UAAU,CAAC,CAAC,EAAE;AACxC,EAAE,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,WAAW,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;AACxG,CAAC,CAAC;AACF,IAAI,GAAG,GAAG,SAAS,GAAG,GAAG,EAAE,CAAC;AAC5B;AACA,IAAI,SAAS,GAAG,SAAS,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE;AAC7C,EAAE,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;AACvB,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC;AACjB,IAAI,OAAO,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,GAAG,MAAM;AACT,IAAI,OAAO,GAAG,CAAC;AACf,GAAG;AACH,CAAC,CAAC;AACF;AACA;AACA;AACA,SAAS,UAAU,CAAC,OAAO,EAAE;AAC7B,EAAE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC/C,CAAC;AACD;AACA;AACA,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;AACvC,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC;AACpB,EAAE,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC7B;AACA,EAAE,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;AACjC;AACA,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;AACtB,EAAE,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC1B,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAC3B,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAC3B,EAAE,IAAI,KAAK,GAAG,KAAK,CAAC;AACpB;AACA,EAAE,IAAI,QAAQ,GAAG,SAAS,QAAQ,CAAC,GAAG,EAAE;AACxC,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;AAC1B,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC3C;AACA,EAAE,IAAI,cAAc,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACnD;AACA,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC;AAClF,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,SAAS,EAAE;AAC3B,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzB,GAAG;AACH,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,SAAS,EAAE;AAC1B,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;AACzB,GAAG;AACH,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,SAAS,EAAE;AAC3B,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzB,GAAG;AACH,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,SAAS,EAAE;AAC1B,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;AACzB,GAAG;AACH;AACA,EAAE,IAAI,mBAAmB,GAAG,SAAS,mBAAmB,GAAG;AAC3D,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1B,MAAM,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AACtD,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACzC;AACA;AACA,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;AAChC,QAAQ,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AAC3D;AACA,QAAQ,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AACnD,QAAQ,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AACpD,OAAO;AACP,KAAK;AACL;AACA,IAAI,KAAK,CAAC,SAAS,CAAC,UAAU,IAAI,EAAE;AACpC,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;AACxC,MAAM,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AAC1B;AACA,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC5D,QAAQ,MAAM,GAAG;AACjB,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC;AAC9B,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC;AAC9B,SAAS,CAAC;AACV;AACA,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;AACxD,UAAU,MAAM,GAAG,SAAS,CAAC;AAC7B,SAAS;AACT,OAAO;AACP;AACA,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK,CAAC,CAAC;AACP;AACA,IAAI,KAAK,CAAC,oBAAoB,EAAE,CAAC;AACjC;AACA,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,MAAM,OAAO,EAAE,CAAC;AAChB,MAAM,KAAK,GAAG,IAAI,CAAC;AACnB,KAAK;AACL;AACA,IAAI,IAAI,OAAO,CAAC,GAAG,EAAE;AACrB,MAAM,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9B,KAAK;AACL,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,MAAM,GAAG,SAAS,MAAM,GAAG;AACjC,IAAI,IAAI,OAAO,CAAC,wBAAwB,EAAE;AAC1C,MAAM,cAAc,CAAC,OAAO,EAAE,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AACtC;AACA,IAAI,KAAK,CAAC,GAAG,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;AACjD,IAAI,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC1C;AACA;AACA,IAAI,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3C,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3D,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,OAAO,GAAG,SAAS,OAAO,GAAG;AACnC;AACA,IAAI,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7C,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC5D,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC;AACtC;AACA,EAAE,IAAI,OAAO,CAAC,OAAO,GAAG,CAAC,EAAE;AAC3B,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,GAAG,MAAM;AACT,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;AAC/C,GAAG;AACH;AACA,EAAE,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC9C,IAAI,OAAO,EAAE,SAAS,OAAO,CAAC,CAAC,EAAE;AACjC;AACA,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;AAC7D,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC;AAC3D;AACA,MAAM,QAAQ,CAAC,CAAC,IAAI;AACpB,QAAQ,KAAK,MAAM,CAAC;AACpB,QAAQ,KAAK,IAAI;AACjB,UAAU,IAAI,OAAO,CAAC,OAAO,EAAE;AAC/B,YAAY,mBAAmB,EAAE,CAAC;AAClC,WAAW;AACX,UAAU,MAAM;AAChB;AACA,QAAQ,KAAK,KAAK,CAAC;AACnB,QAAQ,KAAK,GAAG;AAChB,UAAU,mBAAmB,EAAE,CAAC;AAChC,UAAU,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACjC,YAAY,MAAM,EAAE,CAAC;AACrB,WAAW;AACX,UAAU,MAAM;AAChB,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,EAAE,SAAS,IAAI,GAAG;AAC1B;AACA;AACA;AACA,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC;AAC3B;AACA,MAAM,IAAI,OAAO,GAAG,SAAS,OAAO,GAAG;AACvC,QAAQ,IAAI,MAAM,CAAC,eAAe,EAAE;AACpC,UAAU,MAAM,EAAE,CAAC;AACnB;AACA,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS;AACT;AACA,QAAQ,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;AACjC;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,SAAS,EAAE;AAC7C,UAAU,OAAO,CAAC,oBAAoB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AACrE,SAAS;AACT;AACA,QAAQ,SAAS,GAAG,KAAK,CAAC;AAC1B;AACA,QAAQ,IAAI,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE;AACrC;AACA,UAAU,OAAO,CAAC,MAAM,EAAE,CAAC;AAC3B,SAAS;AACT;AACA,QAAQ,OAAO,GAAG,CAAC;AACnB,OAAO,CAAC;AACR;AACA,MAAM,IAAI,SAAS,GAAG,SAAS,SAAS,GAAG;AAC3C;AACA,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC;AACzB;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;AACxD,UAAU,GAAG,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;AACjC,SAAS;AACT;AACA,QAAQ,OAAO,GAAG,CAAC;AACnB,OAAO,CAAC;AACR;AACA,MAAM,IAAI,OAAO,CAAC,OAAO,EAAE;AAC3B,QAAQ,IAAI,KAAK,GAAG,SAAS,KAAK,GAAG;AACrC,UAAU,IAAI,SAAS,EAAE,EAAE;AAC3B,YAAY,OAAO;AACnB,WAAW;AACX;AACA,UAAU,GAAG,CAAC,KAAK,CAAC,CAAC;AACrB,SAAS,CAAC;AACV;AACA,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,OAAO,MAAM;AACb,QAAQ,OAAO,CAAC,OAAO,EAAE,EAAE;AAC3B;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,EAAE,EAAE,GAAG;AACX;AACA,IAAI,IAAI,EAAE,GAAG;AACb,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B;AACA;AACA,EAAE,IAAI,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAClD,EAAE,IAAI,OAAO,CAAC,wBAAwB,EAAE;AACxC,IAAI,cAAc,CAAC,SAAS,EAAE,CAAC;AAC/B,GAAG;AACH;AACA,EAAE,IAAI,cAAc,GAAG,KAAK,CAAC,CAAC;AAC9B,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,cAAc,GAAG,SAAS,cAAc,GAAG;AAC/D,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;AAClB,GAAG,CAAC,CAAC;AACL;AACA;AACA,EAAE,IAAI,WAAW,GAAG,KAAK,CAAC,CAAC;AAC3B,EAAE,KAAK,CAAC,EAAE,CAAC,oBAAoB,EAAE,WAAW,GAAG,SAAS,WAAW,CAAC,CAAC,EAAE;AACvE,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;AACpB,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;AACtC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC9B,IAAI,IAAI,YAAY,GAAG,CAAC,CAAC,QAAQ,KAAK,IAAI,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC;AAChE;AACA,IAAI,IAAI,CAAC,YAAY,EAAE;AACvB,MAAM,OAAO;AACb,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,CAAC,IAAI;AAClB,MAAM,KAAK,MAAM;AACjB,QAAQ,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACnC,QAAQ,MAAM;AACd,MAAM,KAAK,MAAM;AACjB,QAAQ,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACjC,QAAQ,MAAM;AACd,MAAM,KAAK,UAAU;AACrB;AACA,QAAQ,IAAI,OAAO,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;AAC1E,UAAU,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;AACrC,UAAU,OAAO,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;AACrC,SAAS;AACT,QAAQ,MAAM;AACd,KAAK;AACL,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,WAAW,GAAG,KAAK,CAAC,CAAC;AAC3B,EAAE,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,WAAW,GAAG,SAAS,WAAW,GAAG;AAC/D,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;AACpB,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;AACtC;AACA,IAAI,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAClC;AACA,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AACvB,MAAM,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACjC,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,KAAK;AACL,GAAG,CAAC,CAAC;AACL;AACA;AACA,EAAE,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,CAAC,EAAE;AACtD,IAAI,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AACvD,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC9B,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AACpD;AACA,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,GAAG;AACvC,MAAM,CAAC,EAAE,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,CAAC,KAAK,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AAC9G,MAAM,CAAC,EAAE,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,CAAC,KAAK,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AAC9G,MAAM,KAAK,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO;AACvC,MAAM,MAAM,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO;AACxC,MAAM,KAAK,EAAE,CAAC;AACd,MAAM,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE;AAC1B,KAAK,CAAC;AACN;AACA,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC,CAAC,CAAC;AACN;AACA;AACA,EAAE,IAAI,WAAW,GAAG,EAAE,CAAC;AACvB;AACA,EAAE,IAAI,OAAO,CAAC,SAAS,EAAE;AACzB;AACA;AACA,IAAI,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE;AACpC,MAAM,IAAI,kBAAkB,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC1D,MAAM,kBAAkB,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;AACtD,QAAQ,IAAI,QAAQ,GAAG,EAAE,CAAC;AAC1B,QAAQ,SAAS,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAE;AAC9C,UAAU,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AACnC,UAAU,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;AAC5C,UAAU,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AACpC,UAAU,QAAQ,CAAC,IAAI,CAAC;AACxB,YAAY,IAAI,EAAE,KAAK;AACvB,YAAY,MAAM,EAAE,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;AACzD,WAAW,CAAC,CAAC;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,WAAW,CAAC,IAAI,CAAC;AACzB,UAAU,IAAI,EAAE,WAAW;AAC3B,UAAU,IAAI,EAAE,GAAG;AACnB,UAAU,OAAO,EAAE,QAAQ;AAC3B,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,CAAC;AACT,KAAK;AACL;AACA,IAAI,IAAI,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE;AACtC,MAAM,IAAI,oBAAoB,GAAG,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC;AAC9D,MAAM,oBAAoB,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;AACxD,QAAQ,IAAI,QAAQ,GAAG,EAAE,CAAC;AAC1B,QAAQ,SAAS,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAE;AAC9C,UAAU,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AACnC,UAAU,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;AAC5C,UAAU,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AACpC,UAAU,QAAQ,CAAC,IAAI,CAAC;AACxB,YAAY,IAAI,EAAE,KAAK;AACvB,YAAY,MAAM,EAAE,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC;AACzD,WAAW,CAAC,CAAC;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,WAAW,CAAC,IAAI,CAAC;AACzB,UAAU,IAAI,EAAE,WAAW;AAC3B,UAAU,IAAI,EAAE,GAAG;AACnB,UAAU,OAAO,EAAE,QAAQ;AAC3B,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,IAAI,OAAO,CAAC,eAAe,EAAE;AAC/B,IAAI,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,UAAU,EAAE;AAC1D;AACA;AACA;AACA,MAAM,IAAI,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3D,MAAM,IAAI,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AAC7D;AACA,MAAM,WAAW,CAAC,IAAI,CAAC;AACvB,QAAQ,IAAI,EAAE,UAAU,CAAC,IAAI;AAC7B,QAAQ,IAAI,EAAE,SAAS;AACvB,QAAQ,KAAK,EAAE,UAAU;AACzB,QAAQ,GAAG,EAAE,UAAU,CAAC,GAAG;AAC3B,QAAQ,QAAQ,EAAE,UAAU,CAAC,QAAQ;AACrC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA;AACA,EAAE,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9B,IAAI,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACrC,GAAG;AACH;AACA;AACA,EAAE,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,CAAC,EAAE;AACpD;AACA,IAAI,IAAI,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AAC1D,IAAI,IAAI,UAAU,GAAG,SAAS,UAAU,CAAC,CAAC,EAAE;AAC5C,MAAM,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACpD,KAAK,CAAC;AACN;AACA,IAAI,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC;AAChD,IAAI,IAAI,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC;AAClD,IAAI,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;AAC9C,IAAI,IAAI,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;AACpD;AACA,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,GAAG;AAC1B,MAAM,KAAK,EAAE,CAAC;AACd;AACA,MAAM,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC;AACrD;AACA;AACA;AACA,MAAM,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE;AAChF,QAAQ,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AAC7C,OAAO,CAAC;AACR;AACA,MAAM,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE;AAC1B,KAAK,CAAC;AACN;AACA,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;AACzB;AACA,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE;AAChG,MAAM,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,KAAK,CAAC,CAAC;AACP;AACA,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;AAC/B,GAAG,CAAC,CAAC,CAAC;AACN;AACA;AACA,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC;AACtB,EAAE,IAAI,YAAY,GAAG,KAAK,CAAC,CAAC;AAC5B,EAAE,IAAI,OAAO,CAAC,UAAU,IAAI,IAAI,EAAE;AAClC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC;AAChC,IAAI,YAAY,GAAG,cAAc,CAAC;AAClC,GAAG,MAAM,IAAI,OAAO,CAAC,iBAAiB,IAAI,IAAI,EAAE;AAChD,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAI,YAAY,GAAG,0BAA0B,CAAC;AAC9C,GAAG,MAAM,IAAI,OAAO,CAAC,iBAAiB,IAAI,IAAI,EAAE;AAChD,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAI,YAAY,GAAG,oBAAoB,CAAC;AACxC,GAAG,MAAM;AACT,IAAI,MAAM,GAAG,GAAG,CAAC;AACjB,IAAI,YAAY,GAAG,cAAc,CAAC;AAClC,GAAG;AACH;AACA,EAAE,IAAI,YAAY,GAAG,SAAS,YAAY,CAAC,IAAI,EAAE;AACjD,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,GAAG,CAAC;AACJ;AACA;AACA,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,IAAI,EAAE;AAChD,IAAI,OAAO,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC5F,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;AACzB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,GAAG;AAClC,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK;AACnD,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK;AACnD,KAAK,CAAC;AACN;AACA,IAAI,IAAI,MAAM,IAAI,IAAI,EAAE;AACxB,MAAM,CAAC,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC7C,KAAK;AACL;AACA,IAAI,OAAO,CAAC,CAAC;AACb,GAAG,CAAC,CAAC,CAAC;AACN;AACA,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B;AACA,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE;AACtB,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAAC;AACxC,GAAG;AACH;AACA;AACA,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;AACpB,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC;AACtB,IAAI,IAAI,OAAO,GAAG,GAAG,CAAC;AACtB,IAAI,IAAI,SAAS,GAAG,EAAE,CAAC;AACvB;AACA,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAChC,MAAM,IAAI,GAAG;AACb,QAAQ,IAAI,EAAE,OAAO,CAAC,IAAI;AAC1B,QAAQ,aAAa,EAAE,SAAS;AAChC,OAAO,CAAC;AACR,KAAK,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACvC,MAAM,IAAI,GAAG;AACb,QAAQ,IAAI,EAAE,OAAO;AACrB,QAAQ,aAAa,EAAE,OAAO,CAAC,IAAI;AACnC,OAAO,CAAC;AACR,KAAK,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACvC,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC1B;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC;AACvC,MAAM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;AACvF,KAAK,MAAM;AACX;AACA,MAAM,IAAI,GAAG;AACb,QAAQ,IAAI,EAAE,OAAO;AACrB,QAAQ,aAAa,EAAE,SAAS;AAChC,OAAO,CAAC;AACR,KAAK;AACL;AACA,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACtD,GAAG;AACH;AACA,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC1D;AACA,EAAE,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;AACtK;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACzB,IAAI,UAAU,CAAC,YAAY;AAC3B,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;AACnC,QAAQ,OAAO,CAAC,IAAI,EAAE,CAAC;AACvB,OAAO;AACP,KAAK,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAClC,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AACF;AACA;AACA,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AACxC,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;AACpB,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAChC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACxB,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AACF;AACA,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC;AAC5B;AACA,OAAO;AACP;AACA,OAAO,SAAS,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE;AAGtD;AACA;AACA;AACA;AACA,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,UAAU,GAAG,EAAE;AACrF,EAAE,KAAK,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE;AAC1G,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACrC,GAAG;AACH;AACA,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AAC7B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC;AACvB,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAC5B,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC1C,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7B,KAAK,CAAC,CAAC;AACP,GAAG,CAAC,CAAC;AACL;AACA,EAAE,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AACF;AACA,OAAO;AACP;AACA,OAAO,SAAS,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE;AAGtD;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,EAAE,OAAO,EAAE,IAAI;AACf,EAAE,OAAO,EAAE,CAAC;AACZ,EAAE,iBAAiB,EAAE,IAAI;AACzB,EAAE,wBAAwB,EAAE,KAAK;AACjC,EAAE,GAAG,EAAE,IAAI;AACX,EAAE,OAAO,EAAE,EAAE;AACb,EAAE,WAAW,EAAE,SAAS;AACxB,EAAE,2BAA2B,EAAE,KAAK;AACpC;AACA;AACA,EAAE,KAAK,EAAE,SAAS,KAAK,GAAG,EAAE;AAC5B,EAAE,IAAI,EAAE,SAAS,IAAI,GAAG,EAAE;AAC1B;AACA;AACA,EAAE,SAAS,EAAE,KAAK;AAClB,EAAE,YAAY,EAAE,IAAI;AACpB,EAAE,kBAAkB,EAAE,IAAI;AAC1B,EAAE,oBAAoB,EAAE,IAAI;AAC5B,EAAE,WAAW,EAAE,SAAS,WAAW,CAAC,IAAI,EAAE;AAC1C,IAAI,OAAO,EAAE,CAAC;AACd,GAAG;AACH,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,eAAe,EAAE,SAAS;AAC5B;AACA;AACA;AACA,EAAE,UAAU,EAAE,SAAS;AACvB,EAAE,iBAAiB,EAAE,SAAS;AAC9B,EAAE,iBAAiB,EAAE,SAAS;AAC9B;AACA;AACA,EAAE,YAAY,EAAE,SAAS;AACzB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,YAAY,EAAE,SAAS;AACzB;AACA;AACA,EAAE,QAAQ,EAAE,KAAK;AACjB,CAAC,CAAC;AACF;AACA,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;AAC1B;AACA,OAAO;AACP;AACA,OAAO,SAAS,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE;AAGtD;AACA;AACA,IAAI,IAAI,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAClC;AACA;AACA,IAAI,QAAQ,GAAG,SAAS,QAAQ,CAAC,SAAS,EAAE;AAC5C,EAAE,IAAI,CAAC,SAAS,EAAE;AAClB,IAAI,OAAO;AACX,GAAG;AACH;AACA,EAAE,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACpC,CAAC,CAAC;AACF;AACA,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;AACtC;AACA,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AACtB,CAAC;AACD;AACA,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;AAC1B;AACA,OAAO;AACP;AACA,OAAO,SAAS,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE;AAGtD;AACA;AACA,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,OAAO,OAAO,GAAG,CAAC,EAAE,GAAG,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG,KAAK,MAAM,CAAC,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC;AAC7Q;AACA,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC;AACjB;AACA,IAAI,CAAC,OAAO,MAAM,KAAK,WAAW,GAAG,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,SAAe,WAAW,CAAqB,CAAC,EAAE;AACpH,EAAE,GAAG,GAAG,MAAM,CAAC,qBAAqB,IAAI,MAAM,CAAC,2BAA2B,IAAI,MAAM,CAAC,wBAAwB,IAAI,MAAM,CAAC,uBAAuB,IAAI,UAAU,EAAE,EAAE;AACjK,IAAI,OAAO,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC9B,GAAG,CAAC;AACJ,CAAC,MAAM;AACP;AACA,EAAE,GAAG,GAAG,SAAS,GAAG,CAAC,EAAE,EAAE;AACzB,IAAI,EAAE,EAAE,CAAC;AACT,GAAG,CAAC;AACJ,CAAC;AACD;AACA,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;AACrB;AACA,OAAO;AACP;AACA,OAAO,SAAS,MAAM,EAAE,OAAO,EAAE;AACjC;AACA,MAAM,CAAC,OAAO,GAAG,6BAA6B,CAAC;AAC/C;AACA,OAAO;AACP,UAAU,CAAC,CAAC;AACZ,CAAC,CAAC;;;ACpsBF;MACa,YAAa,SAAQ,WAAW;IAA7C;;QAK4C,YAAO,GAAG,KAAK,CAAC;QAE/B,kBAAa,GAAG,KAAK,CAAC;QAEP,aAAQ,GAAG,KAAK,CAAC;QAEjC,UAAK,GAAG,EAAE,CAAC;;;;;;QAOV,uBAAkB,GAAG,KAAK,CAAC;QAExB,mBAAc,GAAG,EAAE,CAAC;QAEpB,uBAAkB,GAAG,KAAK,CAAC;QAE3B,YAAO,GAAG,KAAK,CAAC;;QAKpC,uBAAkB,GAAG,SAAS,CAAC;QAE/B,kBAAa,GAAG,SAAS,CAAC;QAkC5B,kBAAa,GAAgB,IAAI,CAAC;QAEhC,mBAAc,GAAmB,IAAI,cAAc,CAAC;YAC5D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB,CAAC,CAAC;KA0IJ;IAhLW,aAAa;QACrB,OAAO,EAAE,CAAC;KACX;IAES,MAAM,CAAC,iBAAiC;QAChD,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAChE,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACpD,MAAM,WAAW,GAAG,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,gBAAgB,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS;YAC1D,WAAW,KAAK,SAAS,EAAE;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,2BAA2B,CAC7C,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;YACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,2BAA2B,CAC7C,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrD,IAAI,CAAC,cAAc,GAAG,GAAG,QAAQ,IAAI,QAAQ,EAAE,CAAC;SACjD;QACD,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;KACjC;IAES,2BAA2B,CACjC,OAAgB,EAAE,aAAsB,EAAE,QAAiB;QAC7D,IAAI,QAAQ,EAAE;YACZ,OAAO,UAAU,CAAC;SACnB;aAAM,IAAI,aAAa,EAAE;YACxB,OAAO,eAAe,CAAC;SACxB;aAAM,IAAI,OAAO,EAAE;YAClB,OAAO,SAAS,CAAC;SAClB;aAAM;YACL,OAAO,WAAW,CAAC;SACpB;KACF;;;IAYS,YAAY;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC;QACpD,OAAO,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAA;;qBAEpB,QAAQ;uBACN,IAAI,CAAC,QAAQ;;sBAEd;YACe,EAAE,CAAC;KACrC;;;;;;IAOS,MAAM;QACd,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC;;;;QAIpD,MAAM,OAAO,GAAG;YACd,wBAAwB,EAAE,IAAI,CAAC,QAAQ;YACvC,wBAAwB,EAAE,QAAQ;YAClC,qBAAqB,EAAE,CAAC,IAAI,CAAC,kBAAkB;YAC/C,uBAAuB,EAAE,IAAI,CAAC,OAAO;;YAErC,0CAA0C,EACtC,IAAI,CAAC,cAAc,IAAI,uBAAuB;YAClD,sCAAsC,EAClC,IAAI,CAAC,cAAc,IAAI,mBAAmB;YAC9C,0CAA0C,EACtC,IAAI,CAAC,cAAc,IAAI,uBAAuB;YAClD,4CAA4C,EACxC,IAAI,CAAC,cAAc,IAAI,yBAAyB;YACpD,sCAAsC,EAClC,IAAI,CAAC,cAAc,IAAI,mBAAmB;YAC9C,4CAA4C,EACxC,IAAI,CAAC,cAAc,IAAI,yBAAyB;SACrD,CAAC;;;QAGF,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,GAAG,OAAO,GAAG,SAAS,CAAC;QAC7D,OAAO,IAAI,CAAA;wDACyC,QAAQ,CAAC,OAAO,CAAC;;;8BAG3C,SAAS,CAAC,WAAW,CAAC;oCAChB,IAAI,CAAC,aAAa,GAAG,MAAM,GAAG,OAAO;2BAC9C,IAAI,CAAC,QAAQ;gCACR,IAAI,CAAC,aAAa;0BACxB,IAAI,CAAC,OAAO;wBACd,IAAI,CAAC,KAAK;yBACT,IAAI,CAAC,cAAc;wBACpB,IAAI,CAAC,YAAY;uBAClB,IAAI,CAAC,WAAW;4BACX,IAAI,CAAC,qBAAqB;6BACzB,IAAI,CAAC,sBAAsB;6BAC3B,IAAI,CAAC,sBAAsB;6BAC3B,IAAI,CAAC,sBAAsB;2BAC7B,IAAI,CAAC,sBAAsB;8BACxB,IAAI,CAAC,sBAAsB;;2BAE9B,IAAI,CAAC,mBAAmB;;;;;;;;;UASzC,IAAI,CAAC,YAAY,EAAE;aAChB,CAAC;KACX;IAEO,YAAY;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;IAEO,WAAW;QACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAES,qBAAqB,CAAC,KAAY;QAC1C,MAAM,IAAI,GAAG;YACX,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAE5C,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACvC;IAGS,sBAAsB,CAAC,KAAY;QAC3C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACvC;IAES,sBAAsB;QAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAChC;IAES,sBAAsB;QAC9B,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;KAClC;IAES,sBAAsB;QAC9B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAChC;IAES,iBAAiB;QACzB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;KAClC;IAES,gBAAgB;QACxB,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAChC;IAEO,cAAc;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;KACrD;IAES,mBAAmB;QAC3B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B;IAED,IAAI,cAAc;;QAChB,OAAO,OAAA,IAAI,CAAC,aAAa,0CAAE,QAAQ,KAAI,KAAK,CAAC;KAC9C;CACF;AAhNyB;IAAvB,KAAK,CAAC,eAAe,CAAC;6CAAiC;AAExC;IAAf,KAAK,CAAC,OAAO,CAAC;iDAA0C;AAEf;IAAzC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;6CAAiB;AAE/B;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;mDAAuB;AAEP;IAAzC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;8CAAkB;AAEjC;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;2CAAY;AAOV;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;wDAA4B;AAElC;IAAnB,gBAAgB,EAAE;oDAA+B;AAE9B;IAAnB,gBAAgB,EAAE;wDAAsC;AAErC;IAAnB,gBAAgB,EAAE;6CAA2B;AAEpB;IAAzB,UAAU,CAAC,YAAY,CAAC;4CAA+B;AAmJxD;IADC,YAAY,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;0DAG7B;;ACzMH;;;;;;;;;;;;;;;;AAkBO,MAAM,KAAK,GAAG,GAAG,CAAA,2kcAA2kc;;ACSnmc;AAEA,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,YAAY;CAEzC,CAAA;AADQ,eAAM,GAAG,KAAK,CAAC;AADX,QAAQ;IADpB,aAAa,CAAC,cAAc,CAAC;GACjB,QAAQ,CAEpB;;ACnBDC,aAAS,CAAC,GAAG,CAACC,aAAI,CAAC,CAAC;AAEpB,MAAM,YAAY,GAAG;IACnB,IAAI,EAAE,MAAM;IACZ,kBAAkB,EAAE,IAAI;IACxB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE,IAAI;IAClB,QAAQ,EAAE,KAAK;IACf,YAAY,EAAE,CAAC;IACf,aAAa,EAAE,CAAC;IAChB,YAAY,EAAE,CAAC;IACf,KAAK,EAAE,CAAC,CAAC;QACP,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACX,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;KACf;CACF,CAAC;MAEW,UAAW,SAAQ,iBAAiB,CAC/C,sBAAsB,EACtB,UAAU,CACX;IAHD;;QAKE,kBAAa,GAAY,IAAI,CAAC;QAQtB,mBAAc,GAAa,EAAE,CAAC;QAG9B,UAAK,GAAG,KAAK,CAAC;KAoMvB;IAlMC,YAAY;QACV,IAAI,CAAC,EAAE,GAAGD,aAAS,CAAC;YAClB,SAAS,EAAE,IAAI,CAAC,UAAU;YAC1B,mBAAmB,EAAE,KAAK;YAC1B,aAAa,EAAE,KAAK;YACpB,kBAAkB,EAAE,IAAI;YACxB,kBAAkB,EAAE,IAAI;YACxB,MAAM,EAAE,YAAY;YACpB,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aAoEA;SACR,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,KAAK;YAC9B,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YAC1C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;SAC1D,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACd,UAAU,CAAC;gBACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB,EAAE,GAAG,CAAC,CAAC;SACT,CAAC,CAAC;KACJ;IAED,OAAO,CAAC,aAAa;QACnB,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;KAwBV,CAAC;KACH;IAED,YAAY;QACV,IAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,EAAE,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;YACpE,OAAO,IAAI,CAAC;QAEd,MAAM,OAAO,GAAG,UAAU,CACxB,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EACxC,IAAI,CAAC,aAAa,CACnB,CAAC;QAEF,IACE,CAAC,YAAY,CACX,IAAI,CAAC,cAAc,EACnB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAC9B,EACD;YACA,IAAI,IAAI,CAAC,MAAM;gBAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACpC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpD,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;KAClF;IAED,WAAW,MAAM;QACf,OAAO;YACL,YAAY;YACZ,GAAG,CAAA;;;;OAIF;SACF,CAAC;KACH;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;QACP,IAAI,CAAC,oBAAoB,EAAE;;;;;;;;;;;;qBAYd,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;;;;;;;0BAOlC,OAAO,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;;;;;;KAMrE,CAAC;KACH;CACF;AA/MC;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;;iDACD;AAG9B;IADC,KAAK,CAAC,mBAAmB,CAAC;8BACH,MAAM;kDAAC;AAG/B;IADC,KAAK,CAAC,cAAc,CAAC;8BACF,WAAW;8CAAC;AA2MlC,cAAc,CAAC,MAAM,CAAC,kCAAkC,EAAE,UAAU,CAAC;;;;"}