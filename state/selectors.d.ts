import { Playground } from './playground';
import { Cell } from '../core/cell';
import { Conductor } from '../core/conductor';
import { AgentPubKey, Hash } from '../types/common';
export declare const selectCellCount: (state: Playground) => number;
export declare const selectActiveCells: (state: Playground) => Cell[];
export declare const selectGlobalDHTOps: (state: Playground) => number;
export declare const selectHoldingCells: (state: Playground) => (entryHash: string) => Cell[];
export declare const selectActiveConductor: (state: Playground) => Conductor;
export declare const selectActiveCell: (state: Playground) => Cell;
export declare const selectUniqueDHTOps: (state: Playground) => number;
export declare const selectEntryDetails: (state: Playground) => (entryHash: string) => import("../types/metadata").EntryDetails;
export declare const selectActiveCellsForConductor: (state: Playground) => (conductor: Conductor) => Cell[];
export declare const selectActiveEntry: (state: Playground) => any;
export declare const selectEntry: (state: Playground) => (entryHash: string) => any;
export declare const selectHeader: (state: Playground) => (headerHash: string) => any;
export declare const selectHeaderEntry: (state: Playground) => (headerHash: string) => any;
export declare const selectMedianHoldingDHTOps: (state: Playground) => any;
export declare const selectAllDNAs: (state: Playground) => string[];
export declare const selectCell: (state: Playground) => (dnaHash: Hash, agentId: AgentPubKey) => Cell;
export declare const selectRedundancyFactor: (state: Playground) => number;
