{"version":3,"file":"style-map-68ecac9c.js","sources":["../node_modules/lit-html/src/directives/class-map.ts","../node_modules/@material/mwc-base/node_modules/@material/dom/ponyfill.ts","../node_modules/@material/mwc-base/utils.ts","../node_modules/@material/mwc-base/base-element.ts","../node_modules/lit-html/src/directives/style-map.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\n\nexport interface ClassInfo {\n  readonly [name: string]: string|boolean|number;\n}\n\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst classMapCache = new WeakMap();\n\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `classList` if the property value is truthy; if the property value\n * is falsey, the property name is removed from the element's `classList`. For\n * example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo: ClassInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'class' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `classMap` directive must be used in the `class` attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {element} = committer;\n\n  // handle static classes\n  if (!classMapCache.has(part)) {\n    element.className = committer.strings.join(' ');\n  }\n\n  const {classList} = element;\n\n  // remove old classes that no longer apply\n  const oldInfo = classMapCache.get(part);\n  for (const name in oldInfo) {\n    if (!(name in classInfo)) {\n      classList.remove(name);\n    }\n  }\n\n  // add new classes\n  for (const name in classInfo) {\n    const value = classInfo[name];\n    if (!oldInfo || value !== oldInfo[name]) {\n      // We explicitly want a loose truthy check here because\n      // it seems more convenient that '' and 0 are skipped.\n      const method = value ? 'add' : 'remove';\n      classList[method](name);\n    }\n  }\n  classMapCache.set(part, classInfo);\n});\n",null,"/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * Return an element assigned to a given slot that matches the given selector\n */\n\nimport {matches} from '@material/dom/ponyfill';\n\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node: Node): node is Element => {\n  return node.nodeType === Node.ELEMENT_NODE;\n};\n\nexport function findAssignedElement(slot: HTMLSlotElement, selector: string) {\n  for (const node of slot.assignedNodes({flatten: true})) {\n    if (isNodeElement(node)) {\n      const el = (node as HTMLElement);\n      if (matches(el, selector)) {\n        return el;\n      }\n    }\n  }\n\n  return null;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Constructor<T> = new (...args: any[]) => T;\n\nexport function addHasRemoveClass(element: HTMLElement) {\n  return {\n    addClass: (className: string) => {\n      element.classList.add(className);\n    },\n    removeClass: (className: string) => {\n      element.classList.remove(className);\n    },\n    hasClass: (className: string) => element.classList.contains(className),\n  };\n}\n\nlet supportsPassive = false;\nconst fn = () => { /* empty listener */ };\nconst optionsBlock: AddEventListenerOptions = {\n  get passive() {\n    supportsPassive = true;\n    return false;\n  }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\n\nexport const deepActiveElementPath = (doc = window.document): Element[] => {\n  let activeElement = doc.activeElement;\n  const path: Element[] = [];\n\n  if (!activeElement) {\n    return path;\n  }\n\n  while (activeElement) {\n    path.push(activeElement);\n    if (activeElement.shadowRoot) {\n      activeElement = activeElement.shadowRoot.activeElement;\n    } else {\n      break;\n    }\n  }\n\n  return path;\n};\n\nexport const doesElementContainFocus = (element: HTMLElement): boolean => {\n  const activePath = deepActiveElementPath();\n\n  if (!activePath.length) {\n    return false;\n  }\n\n  const deepActiveElement = activePath[activePath.length - 1];\n  const focusEv =\n      new Event('check-if-focused', {bubbles: true, composed: true});\n  let composedPath: EventTarget[] = [];\n  const listener = (ev: Event) => {\n    composedPath = ev.composedPath();\n  };\n\n  document.body.addEventListener('check-if-focused', listener);\n  deepActiveElement.dispatchEvent(focusEv);\n  document.body.removeEventListener('check-if-focused', listener);\n\n  return composedPath.indexOf(element) !== -1;\n};\n\nexport interface HTMLElementWithRipple extends HTMLElement {\n  ripple?: RippleInterface;\n}\n\nexport interface RippleInterface {\n  startPress: (e?: Event) => void;\n  endPress: () => void;\n  startFocus: () => void;\n  endFocus: () => void;\n}\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport {MDCFoundation} from '@material/base';\nimport {LitElement} from 'lit-element';\n\nimport {Constructor} from './utils';\n\nexport {CustomEventListener, EventType, SpecificEventListener} from '@material/base/types';\nexport {addHasRemoveClass} from './utils';\n\n/** @soyCompatible */\nexport abstract class BaseElement extends LitElement {\n  /**\n   * Root element for MDC Foundation usage.\n   *\n   * Define in your component with the `@query` decorator\n   */\n  protected abstract mdcRoot: HTMLElement;\n\n  /**\n   * Return the foundation class for this component\n   */\n  protected abstract readonly mdcFoundationClass?: Constructor<MDCFoundation>;\n\n  /**\n   * An instance of the MDC Foundation class to attach to the root element\n   */\n  protected abstract mdcFoundation?: MDCFoundation;\n\n  /**\n   * Create the adapter for the `mdcFoundation`.\n   *\n   * Override and return an object with the Adapter's functions implemented:\n   *\n   *    {\n   *      addClass: () => {},\n   *      removeClass: () => {},\n   *      ...\n   *    }\n   */\n  protected abstract createAdapter(): {}\n\n  click() {\n    if (this.mdcRoot) {\n      this.mdcRoot.focus();\n      this.mdcRoot.click();\n      return;\n    }\n\n    super.click();\n  }\n\n  /**\n   * Create and attach the MDC Foundation to the instance\n   */\n  protected createFoundation() {\n    if (this.mdcFoundation !== undefined) {\n      this.mdcFoundation.destroy();\n    }\n    if (this.mdcFoundationClass) {\n      this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n      this.mdcFoundation.init();\n    }\n  }\n\n  protected firstUpdated() {\n    this.createFoundation();\n  }\n}\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\nexport interface StyleInfo {\n  readonly [name: string]: string;\n}\n\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst styleMapCache = new WeakMap<AttributePart, StyleInfo>();\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS propertes. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo: StyleInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'style' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `styleMap` directive must be used in the style attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {style} = committer.element as HTMLElement;\n\n  // Handle static styles the first time we see a Part\n  if (!styleMapCache.has(part)) {\n    style.cssText = committer.strings.join(' ');\n  }\n\n  // Remove old properties that no longer exist in styleInfo\n  const oldInfo = styleMapCache.get(part);\n  for (const name in oldInfo) {\n    if (!(name in styleInfo)) {\n      if (name.indexOf('-') === -1) {\n        // tslint:disable-next-line:no-any\n        (style as any)[name] = null;\n      } else {\n        style.removeProperty(name);\n      }\n    }\n  }\n\n  // Add or update properties\n  for (const name in styleInfo) {\n    if (name.indexOf('-') === -1) {\n      // tslint:disable-next-line:no-any\n      (style as any)[name] = styleInfo[name];\n    } else {\n      style.setProperty(name, styleInfo[name]);\n    }\n  }\n  styleMapCache.set(part, styleInfo);\n});\n"],"names":[],"mappings":"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"}